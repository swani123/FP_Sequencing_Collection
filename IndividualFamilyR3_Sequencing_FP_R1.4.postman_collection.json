{
	"info": {
		"_postman_id": "fc4c6c0e-107d-49bf-94ea-f63a80084387",
		"name": "IndividualFamilyR3_Sequencing_FP_R1.4",
		"description": "This collection will executes the set of ten following API folders:\r\na) IndividualTotalExpensesR3 primary folder contains 7 requests:\r\n   1. IndividualTotalExpensesR3 primary -(User can change the primary input fields in this request, global varibles are set & test scripts available).\r\n   2. Expenses Present Value for ABD.\r\n   3. Expenses Present Value for ABCD.\r\n   4. Expenses Present Value for ABFD.\r\n   5. Expenses Present Value for ABGD.\r\n   6. Expenses Present Value for ABND.\r\n   7. Expenses Present Value for Surcharge.\r\nb) IndividualTotalExpensesR3 Primary folder contains 5 requests:\r\n   1. Get saving for ABD.\r\n   2. Get saving for ABCD.\r\n   3. Get saving for ABFD.\r\n   4. Get saving for ABGD.\r\n   5. Get saving for ABND.\r\nc) IndividualTotalExpensesR3 spouse folder contains 6 requests:\r\n   1. Expenses Present Value for ABD.\r\n   2. Expenses Present Value for ABCD.\r\n   3. Expenses Present Value for ABFD.\r\n   4. Expenses Present Value for ABGD.\r\n   5. Expenses Present Value for ABND.\r\n   6. Expenses Present Value for Surcharge.\r\nd) IndividualTotalExpensesR3 spouse folder contains 6 requests:\r\n   1. Get saving for ABD.\r\n   2. Get saving for ABCD.\r\n   3. Get saving for ABFD.\r\n   4. Get saving for ABGD.\r\n   5. Get saving for ABND.\r\n   6. Expenses Present Value for Surcharge.\r\ne) LongTermCareR4 Primary folder contains 5 requests:\r\n   1. LongTermCareR4 Primary API - (test scripts available)\r\n   2. Expenses Present Value for Future adult day health care.\r\n   3. Expenses Present Value for Future Home health care.\r\n   4. Expenses Present Value for Future assisted care.\r\n   5. Expenses Present Value for Future nursing care.\r\nf) LongTermCareR4 spouse folder contains 4 requests:\r\n   1. Expenses Present Value for Future adult day health care.\r\n   2. Expenses Present Value for Future Home health care.\r\n   3. Expenses Present Value for Future assisted care.\r\n   4. Expenses Present Value for Future nursing care \r\ng) FamilyTotalExpensesR3 primary folder contains 7 requests:\r\n   1. FamilyTotalExpensesR3 primary- (test scripts available)\r\n   2. Expenses Present Value for ABD.\r\n   3. Expenses Present Value for ABCD.\r\n   4. Expenses Present Value for ABFD.\r\n   5. Expenses Present Value for ABGD.\r\n   6. Expenses Present Value for ABND.\r\n   7. Expenses Present Value for Surcharge.\r\nh) FamilyTotalExpensesR3 Primary folder contains 5 requests:\r\n   1. Get saving for ABD.\r\n   2. Get saving for ABCD.\r\n   3. Get saving for ABFD.\r\n   4. Get saving for ABGD.\r\n   5. Get saving for ABND.\r\ni) FamilyTotalExpensesR3 spouse folder contains 6 requests:\r\n   1. Expenses Present Value for ABD.\r\n   2. Expenses Present Value for ABCD.\r\n   3. Expenses Present Value for ABFD.\r\n   4. Expenses Present Value for ABGD.\r\n   5. Expenses Present Value for ABND.\r\n   6. Expenses Present Value for Surcharge.\r\nj) FamilyTotalExpensesR3 spouse folder contains 5 requests:\r\n   1. Get saving for ABD.\r\n   2. Get saving for ABCD.\r\n   3. Get saving for ABFD.\r\n   4. Get saving for ABGD.\r\n   5. Get saving for ABND.\r\nk) LongTermCareR4 Primary folder contains 4 requests:\r\n   1. Expenses Present Value for Future adult day health care.\r\n   2. Expenses Present Value for Future Home health care.\r\n   3. Expenses Present Value for Future assisted care.\r\n   4. Expenses Present Value for Future nursing care.\r\nl) LongTermCareR4 spouse folder contains 4 requests:\r\n   1. Expenses Present Value for Future adult day health care.\r\n   2. Expenses Present Value for Future Home health care.\r\n   3. Expenses Present Value for Future assisted care.\r\n   4. Expenses Present Value for Future nursing care - (All the global variables are released)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "IndividualTotalExpR3_Primary_ExpPV",
			"item": [
				{
					"name": "IndividualTotalExpR3_Primary",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "15db1061-b704-444a-8075-c10d851eca4a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var response = JSON.parse(responseBody); // storing the Json response in \"response\" variable",
									"var fromYear;//declaring a variable fromyear",
									"var toYear;//declaring a variable toyear",
									"var pv_expenses0 = \"[\"; //declaring a variable Pv_expenses0 and assigning the \"[\" to store the array values.",
									"var pv_expenses1 = \"[\"; //same as above.",
									"var pv_expenses2 = \"[\"; //same as above.",
									"var pv_expenses3 = \"[\"; //same as above.",
									"var pv_expenses4 = \"[\"; //same as above.",
									"var pv_expenses5 = \"[\"; //same as above.",
									"var pv_expenses6 = \"[\"; //same as above.",
									"var pv_expenses7 = \"[\"; //same as above.",
									"var pv_expenses8 = \"[\"; //same as above.",
									"var pv_expenses9 = \"[\"; //same as above.",
									"var pv_expenses10 = \"[\"; //same as above.",
									"length1 = response.individualTotalExpenses.length;",
									"//finding length from individual total exp. from response body.",
									"fromYear = response.individualTotalExpenses[0].year; //getting the first year value from the individualTotalExpenses array from the response body.",
									"toYear = response.individualTotalExpenses[length1 - 1].year;//getting the last year value from the individualTotalExpenses array from the response body.",
									"",
									"console.log(\"From Year is\", fromYear);",
									"console.log(\"To Year is\", toYear);",
									"//printing from year and to year in the console.  ",
									"for (var i = 0; i < length1; i++) //for loop executes a set of statement until the given condition is true, once the condition is false it will come out of the for loop. It starts with value 0 executes the statement by increments 1(ie., i++) until it is less than the value of length1.",
									"{",
									"    var year = response.individualTotalExpenses[i].year;",
									"    //getting year from the response body and storing in the year based on the i value.",
									"    var ABD = response.individualTotalExpenses[i].totalABD + response.individualTotalExpenses[i].totalPreMedicareCost;",
									"    //getting values and adding totalABD and totalPreMedicareCost from the response body and storing in the ABD based on the i value.",
									"    var ABCD = response.individualTotalExpenses[i].totalABCD + response.individualTotalExpenses[i].totalPreMedicareCost;",
									"    //getting totalABCD and totalPreMedicareCost from the response body and storing in the ABCD based on the i value.",
									"    var ABFD = response.individualTotalExpenses[i].totalABFD + response.individualTotalExpenses[i].totalPreMedicareCost;",
									"    //getting totalABFD and totalPreMedicareCost from the response body and storing in the ABFD based on the i value.",
									"    var ABGD = response.individualTotalExpenses[i].totalABGD + response.individualTotalExpenses[i].totalPreMedicareCost;",
									"    //getting totalABGD and totalPreMedicareCost from the response body and storing in the ABGD based on the i value.",
									"    var ABND = response.individualTotalExpenses[i].totalABND + response.individualTotalExpenses[i].totalPreMedicareCost;",
									"    //getting totalABND and totalPreMedicareCost from the response body and storing in the ABND based on the i value.",
									"    var Surcharge = response.individualTotalExpenses[i]",
									"        .partBPremiumSurcharge + response.individualTotalExpenses[i].partDPremiumSurcharge;",
									"",
									"    var year_expenseABD = '{\"year\": ' + year + ' , \"expense\": ' + ABD + \"}\"; //concatenating the year and ABD expense and storing in the year_expenseABD",
									"    var year_expenseABCD = '{\"year\": ' + year + ' , \"expense\": ' + ABCD + \"}\"; //concatenating the year and ABCD expense and storing in the year_expenseABCD",
									"    var year_expenseABFD = '{\"year\": ' + year + ' , \"expense\": ' + ABFD + \"}\";//concatenating the year and ABFD expense and storing in the year_expenseABFD",
									"    var year_expenseABGD = '{\"year\": ' + year + ' , \"expense\": ' + ABGD + \"}\";//concatenating the year and ABGD expense and storing in the year_expenseABGD",
									"    var year_expenseABND = '{\"year\": ' + year + ' , \"expense\": ' + ABND + \"}\";//concatenating the year and ABND expense and storing in the year_expenseABND",
									"    var year_expense = '{\"year\": ' + year + ' , \"expense\": ' + Surcharge + \"}\";",
									"",
									"    var year_expensesABD = '{\"year\": ' + year + ' , \"expenses\": ' + ABD + ', \"expenses_type\": \"Post-Retirement\"}'; //concatenating the year and ABD expenses and storing in the year_expensesABD and hardcoding the \"Post-Retirement\" value in the expenses_type.",
									"    var year_expensesABCD = '{\"year\": ' + year + ' , \"expenses\": ' + ABCD + ', \"expenses_type\": \"Post-Retirement\"}';  //concatenating the year and ABCD expenses and storing in the year_expensesABCD and hardcoding the \"Post-Retirement\" value in the expenses_type.",
									"    var year_expensesABFD = '{\"year\": ' + year + ' , \"expenses\": ' + ABFD + ', \"expenses_type\": \"Post-Retirement\"}'; //concatenating the year and ABFD expenses and storing in the year_expensesABFD and hardcoding the \"Post-Retirement\" value in the expenses_type.",
									"    var year_expensesABGD = '{\"year\": ' + year + ' , \"expenses\": ' + ABGD + ', \"expenses_type\": \"Post-Retirement\"}'; //concatenating the year and ABGD expenses and storing in the year_expensesABGD and hardcoding the \"Post-Retirement\" value in the expenses_type.",
									"    var year_expensesABND = '{\"year\": ' + year + ' , \"expenses\": ' + ABND + ', \"expenses_type\": \"Post-Retirement\"}'; //concatenating the year and ABND expenses and storing in the year_expensesABND and hardcoding the \"Post-Retirement\" value in the expenses_type.",
									"",
									"",
									"    if (i < (length1 - 1)) // if this condition is true then it will execute the below statment.",
									"    {",
									"        year_expenseABD += ','; //year_expenseABD = year_expenseABD + ',' after concatenating year and expense field assigning \",\" ",
									"        year_expenseABCD += ','; //same as above",
									"        year_expenseABFD += ',';// same as above",
									"        year_expenseABGD += ',';// same as above",
									"        year_expenseABND += ',';//same as above",
									"        year_expensesABD += ','; //same as above",
									"        year_expensesABCD += ',';// same as above",
									"        year_expensesABFD += ',';// same as above",
									"        year_expensesABGD += ',';// same as above",
									"        year_expensesABND += ',';// same as above",
									"        year_expense += ','; //year_expense = year_expense + ',' after concatenating year and expense field assigning \",\" ",
									"    }",
									"    pv_expenses0 += year_expenseABD; //variable pv_expenses0 = pv_expenses0 + year_expenseABD is stored",
									"    pv_expenses1 += year_expenseABCD; //variable pv_expenses1 = pv_expenses1 + year_expenseABCD is stored",
									"    pv_expenses2 += year_expenseABFD; //variable pv_expenses2 = pv_expenses2 + year_expenseABFD is stored",
									"    pv_expenses3 += year_expenseABGD;  //variable pv_expenses3 = pv_expenses3 + year_expenseABGD is stored",
									"    pv_expenses4 += year_expenseABND;//variable pv_expenses4 = pv_expenses4 + year_expenseABND is stored",
									"    pv_expenses5 += year_expensesABD; //variable pv_expenses5 = pv_expenses5 + year_expensesABD is stored",
									"    pv_expenses6 += year_expensesABCD; //variable pv_expenses6 = pv_expenses6 + year_expensesACD is stored",
									"    pv_expenses7 += year_expensesABFD; //variable pv_expenses7 = pv_expenses7 + year_expensesABFD is stored",
									"    pv_expenses8 += year_expensesABGD; //variable pv_expenses8 = pv_expenses8 + year_expensesABGD is stored",
									"    pv_expenses9 += year_expensesABND; //variable pv_expenses9 = pv_expenses9 + year_expensesABND is stored",
									"    pv_expenses10 += year_expense; //variable pv_expenses10 = pv_expenses10 + year_expense is stored ",
									"}",
									"pv_expenses0 += ']'; // closing with \"]\" after the above statment.",
									"pv_expenses1 += ']'; //same as above",
									"pv_expenses2 += ']'; //same as above",
									"pv_expenses3 += ']'; //same as above",
									"pv_expenses4 += ']'; //same as above",
									"pv_expenses5 += ']'; //same as above",
									"pv_expenses6 += ']'; //same as above",
									"pv_expenses7 += ']'; //same as above",
									"pv_expenses8 += ']'; //same as above",
									"pv_expenses9 += ']'; //same as above",
									"pv_expenses10 += ']'; //same as above",
									"pm.globals.set(\"expenses0\", pv_expenses0); // assigning all the pv_expenses0 values to the global variable expenses0 for PV expenses",
									"pm.globals.set(\"expenses1\", pv_expenses1); //same as above",
									"pm.globals.set(\"expenses2\", pv_expenses2); //same as above",
									"pm.globals.set(\"expenses3\", pv_expenses3); //same as above",
									"pm.globals.set(\"expenses4\", pv_expenses4); //same as above",
									"",
									"pm.globals.set(\"expenses5\", pv_expenses5);//assigning all the pv_expenses5 values to the global variable expenses5 for getSaving expenses",
									"pm.globals.set(\"expenses6\", pv_expenses6); //same as above",
									"pm.globals.set(\"expenses7\", pv_expenses7); //same as above",
									"pm.globals.set(\"expenses8\", pv_expenses8); //same as above",
									"pm.globals.set(\"expenses9\", pv_expenses9); //same as above",
									"pm.globals.set(\"expenses10\", pv_expenses10); //same as above",
									"",
									"pm.globals.set(\"fromYear\", fromYear);",
									"pm.globals.set(\"toYear\", toYear);",
									"//setting global variables fromYear and toyear.",
									"",
									"//printing below values in the console.",
									"//console.log(pv_expenses0);",
									"//console.log(pv_expenses1);",
									"//console.log(pv_expenses2);",
									"//console.log(pv_expenses3);",
									"//console.log(pv_expenses4);",
									"//console.log(pv_expenses5);",
									"//console.log(pv_expenses6);",
									"//console.log(pv_expenses7);",
									"//console.log(pv_expenses8);",
									"//console.log(pv_expenses9);",
									"//console.log(pv_expenses10);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "0a2e6e2c-7ac0-4be0-b733-c1f2f8e6a0ca",
								"exec": [
									"//Input fields list for primary IndividualTotalExp and primary FamilyTotalExp:",
									"pm.globals.set(\"primaryBirthDate\", \"01-1955\");",
									"pm.globals.set(\"primaryRetirementYear\", \"01-2019\");",
									"pm.globals.set(\"primaryLifeExpectancy\", \"70\");",
									"pm.globals.set(\"primaryHealthGrade\", '2');",
									"pm.globals.set(\"primaryStateName\", 'Colorado');",
									"pm.globals.set(\"primaryRetirementState\", 'Colorado');",
									"pm.globals.set(\"primaryZipcode\", '80111');",
									"pm.globals.set(\"primaryDental\", 'false');",
									"pm.globals.set(\"primaryDentalHealthGrade\", '2');",
									"pm.globals.set(\"primarySingleVsMultipleMagi\", 'true'); //If this field is true the request will consider the values in the \"yearWiseMagiDetailList\" field. If the field is false the request will consider the values in the \"magiTier\" field. ",
									"pm.globals.set(\"primaryMagiTierVsDollarAmount\", 'true'); //If this field is true the request will consider the values in the \"magiDollarAmount\" field. If the field is false it will consider the \"magiTier\" field values.",
									"pm.globals.set(\"primaryMagiTier\", '1');",
									"pm.globals.set(\"primaryTaxFilingStatus\", 'FILING_INDIVIDUALLY');",
									"pm.globals.set(\"primaryMagiDollarAmount\", '80000');",
									"pm.globals.set(\"primaryTobacco\", 'false');",
									"pm.globals.set(\"primaryBoughtPlanA\", 'false');",
									"pm.globals.set(\"primaryReserveDaysUsed\", '0');",
									"pm.globals.set(\"primaryPlanType\", \"silver\");",
									"pm.globals.set(\"fullYearDataForLifeExpectancyYear\", 'false');",
									"pm.globals.set(\"primaryYearWiseMagiDetailList\", '[{\"year\":2020 , \"magiTier\": 1, \"taxFilingStatus\":\"FILING_INDIVIDUALLY\", \"magiDollarAmount\":\"65000\"}, {\"year\":2021 , \"magiTier\": 2,\"taxFilingStatus\":\"FILING_INDIVIDUALLY\", \"magiDollarAmount\":\"95000\"}, {\"year\":2022 , \"magiTier\": 3,\"taxFilingStatus\":\"FILING_INDIVIDUALLY\", \"magiDollarAmount\":\"110000\"},  {\"year\":2023 , \"magiTier\": 4,\"taxFilingStatus\":\"FILING_INDIVIDUALLY\", \"magiDollarAmount\":\"140000\"},{\"year\":2024,  \"magiTier\": 5,\"taxFilingStatus\":\"FILING_INDIVIDUALLY\", \"magiDollarAmount\":\"200000\"}, {\"year\":2025 , \"magiTier\": 6,\"taxFilingStatus\":\"FILING_INDIVIDUALLY\", \"magiDollarAmount\":\"501000\"}]');",
									"",
									"//Input fields list for spouse FamilyTotalExp:",
									"pm.globals.set(\"spouseIncluded\", 'true');",
									"pm.globals.set(\"spouseBirthDate\", '01-1955');",
									"pm.globals.set(\"spouseRetirementYear\", '01-2019');",
									"pm.globals.set(\"spouseLifeExpectancy\", '70');",
									"pm.globals.set(\"spouseSingleVsMultipleMagi\", 'true');",
									"pm.globals.set(\"spouseMagiTierVsDollarAmount\", 'true');",
									"pm.globals.set(\"spouseMagiTier\", '1');",
									"pm.globals.set(\"spouseTaxFilingStatus\", 'MARRIED_FILING_JOINTLY');",
									"pm.globals.set(\"spouseMagiDollarAmount\", '4334621');",
									"pm.globals.set(\"spouseHealthGrade\", '2');",
									"pm.globals.set(\"spouseStateName\", 'Colorado');",
									"pm.globals.set(\"spouseRetirementState\", 'Colorado');",
									"pm.globals.set(\"spouseZipcode\", '80124');",
									"pm.globals.set(\"spouseBoughtPlanA\", 'false');",
									"pm.globals.set(\"spouseReserveDaysUsed\", '0');",
									"pm.globals.set(\"spouseDental\", 'false');",
									"pm.globals.set(\"spouseDentalHealthGrade\", '2');",
									"pm.globals.set(\"spousePlanType\", \"gold\");",
									"pm.globals.set(\"spouseTobacco\", 'false');",
									"pm.globals.set(\"spouseYearWiseMagiDetailList\", '[{\"year\":2020 ,\"taxFilingStatus\":\"FILING_INDIVIDUALLY\", \"magiDollarAmount\":\"65000\"}, {\"year\":2021 ,\"taxFilingStatus\":\"FILING_INDIVIDUALLY\", \"magiDollarAmount\":\"95000\"}, {\"year\":2022 ,\"taxFilingStatus\":\"FILING_INDIVIDUALLY\", \"magiDollarAmount\":\"110000\"},  {\"year\":2023 ,\"taxFilingStatus\":\"FILING_INDIVIDUALLY\", \"magiDollarAmount\":\"140000\"},{\"year\":2024,\"taxFilingStatus\":\"FILING_INDIVIDUALLY\", \"magiDollarAmount\":\"200000\"}, {\"year\":2025 ,\"taxFilingStatus\":\"FILING_INDIVIDUALLY\", \"magiDollarAmount\":\"501000\"}]');",
									"",
									"",
									"//Expenses PV feilds ",
									"var Year = new Date();",
									"var CurrentYear = Year.getFullYear();",
									"pm.globals.set(\"pvAsOnYear1\", CurrentYear);",
									"pm.globals.set(\"pvAsOnYear2\", 0);",
									"pm.globals.set(\"pvAsOnYear3\", 0);",
									"pm.globals.set(\"discount\", '6');",
									"pm.globals.set(\"rateOfReturn1\", '2');",
									"pm.globals.set(\"rateOfReturn2\", '4');",
									"pm.globals.set(\"rateOfReturn3\", '6');",
									"pm.globals.set(\"rateOfReturn4\", '8');",
									"",
									"//get savings fields list:",
									"pm.globals.set(\"expenses\", 'expenses5');",
									"pm.globals.set(\"initalSavings\", '0');",
									"pm.globals.set(\"duration\", '32');",
									"pm.globals.set(\"ror\", '5.5');",
									"pm.globals.set(\"term\", 'L');",
									"pm.globals.set(\"levelOfProtection\", '100');",
									"",
									"//LTC primary & Spouse fields list:",
									"pm.globals.set(\"transactionTypeFlag\", 'false');",
									"pm.globals.set(\"age\", '65');",
									"pm.globals.set(\"gender\", \"M\");",
									"pm.globals.set(\"currentLifeStyleExpenses\", '1');",
									"pm.globals.set(\"numberOfAdultDayHealthCareLTCYears\", '2');",
									"pm.globals.set(\"numberOfHomeCareLTCYears\", '1');",
									"pm.globals.set(\"numberOfAssistedCareLTCYears\", '1');",
									"pm.globals.set(\"numberOfNursingCareLTCYears\", '1');",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA=="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{  \n\t\"birthDate\": \"{{primaryBirthDate}}\",\n\t\"retirementYear\": \"{{primaryRetirementYear}}\",\n\t\"lifeExpectancy\":\"{{primaryLifeExpectancy}}\",\n\t\"singleVsMultipleMagi\": \"{{primarySingleVsMultipleMagi}}\",\n\t\"magiTierVsDollarAmount\": \"{{primaryMagiTierVsDollarAmount}}\",\n\t\"magiTier\": \"{{primaryMagiTier}}\",\n\t\"taxFilingStatus\": \"{{primaryTaxFilingStatus}}\",\n\t\"magiDollarAmount\": {{primaryMagiDollarAmount}},\n\t\"healthGrade\": {{primaryHealthGrade}},\n\t\"stateName\": \"{{primaryStateName}}\",\n\t\"retirementState\": \"{{primaryRetirementState}}\",\n\t\"zipcode\": \"{{primaryZipcode}}\",\n\t\"boughtPlanA\":\"{{primaryBoughtPlanA}}\",\n\t\"reserveDaysUsed\": {{primaryReserveDaysUsed}},\n\t\"dental\":\"{{primaryDental}}\",\n\t\"dentalHealthGrade\": {{primaryDentalHealthGrade}},\n\t\"planType\": \"{{primaryPlanType}}\",\n\t\"tobacco\":\"{{primaryTobacco}}\",\n\t\"yearWiseMagiDetailList\":{{primaryYearWiseMagiDetailList}},\n\t\"fullYearDataForLifeExpectancyYear\": {{fullYearDataForLifeExpectancyYear}}\n      }"
						},
						"url": {
							"raw": "{{server}}/individualTotalExpensesR3",
							"host": [
								"{{server}}"
							],
							"path": [
								"individualTotalExpensesR3"
							]
						},
						"description": "IndividualTotalExpensesR3 primary, FamilyTotalExpensesR3 primary and LongTermCareR4 primary API all the input fields to be assigned before running the collection from the pre-requisite in the individualTotalExpensesR3 Primary API, calculating Present Value Expenses of totalABD, totalABCD, totalABFD, totalABGD, totalABND from individualTotalExpensesR3 API. They are global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "IndividualTotalExpR3_Primary",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{    \n\t\"birthDate\":\"{{birthDate}}\",\n\t\"retirementYear\":\"{{retirementYear}}\",\n\t\"lifeExpectancy\":\"{{lifeExpectancy}}\",\n    \"planType\":\"{{planType}}\",\n    \"healthGrade\":\"{{healthGrade}}\",\n    \"stateName\":\"{{state}}\",\n    \"retirementState\":\"{{retirementState}}\",\n    \"zipcode\": {{zipcode}},\n    \"boughtPlanA\":\"{{boughtPlanA}}\",\n    \"fullYearDataForLifeExpectancyYear\": {{fullYearDataForLifeExpectancyYear}},\n    \"reserveDaysUsed\":\"{{reserveDaysUsed}}\",\n    \"dental\":\"{{dental}}\",\n    \"dentalHealthGrade\":\"{{dentalHealthGrade}}\",\n    \"tobacco\":{{tobacco}},\n\t\"singleVsMultipleMagi\":{{singleVsMultipleMagi}},\n    \"magiTierVsDollarAmount\": {{magiTierVsDollarAmount}},\n    \"magiTier\":{{magiTier}},\n    \"taxFilingStatus\":\"{{taxFilingStatus}}\",\n    \"magiDollarAmount\":{{magiDollarAmount}},\n    \"yearWiseMagiDetailList\":{{yearWiseMagiDetailList}}\n      }"
								},
								"url": {
									"raw": "{{server}}/individualTotalExpensesR3",
									"host": [
										"{{server}}"
									],
									"path": [
										"individualTotalExpensesR3"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 14 May 2020 22:16:56 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"62f7d5a1-aa9d-45c0-82ed-dabd0adff145-9142\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"birthDate\": \"05-1955\",\n    \"retirementYear\": \"05-2019\",\n    \"healthGrade\": \"2\",\n    \"stateName\": \"Colorado\",\n    \"retirementState\": \"Colorado\",\n    \"zipcode\": null,\n    \"dental\": false,\n    \"dentalHealthGrade\": 2,\n    \"singleVsMultipleMagi\": true,\n    \"magiTierVsDollarAmount\": true,\n    \"lifeExpectancy\": 70,\n    \"magiTier\": 1,\n    \"taxFilingStatus\": null,\n    \"magiDollarAmount\": null,\n    \"yearWiseMagiDetailList\": [\n        {\n            \"magiTier\": 1,\n            \"magiDollarAmount\": 65000,\n            \"taxFilingStatus\": \"FILING_INDIVIDUALLY\",\n            \"year\": 2020\n        },\n        {\n            \"magiTier\": 2,\n            \"magiDollarAmount\": 95000,\n            \"taxFilingStatus\": \"FILING_INDIVIDUALLY\",\n            \"year\": 2021\n        },\n        {\n            \"magiTier\": 3,\n            \"magiDollarAmount\": 110000,\n            \"taxFilingStatus\": \"FILING_INDIVIDUALLY\",\n            \"year\": 2022\n        },\n        {\n            \"magiTier\": 4,\n            \"magiDollarAmount\": 140000,\n            \"taxFilingStatus\": \"FILING_INDIVIDUALLY\",\n            \"year\": 2023\n        },\n        {\n            \"magiTier\": 5,\n            \"magiDollarAmount\": 200000,\n            \"taxFilingStatus\": \"FILING_INDIVIDUALLY\",\n            \"year\": 2024\n        },\n        {\n            \"magiTier\": 6,\n            \"magiDollarAmount\": 501000,\n            \"taxFilingStatus\": \"FILING_INDIVIDUALLY\",\n            \"year\": 2025\n        }\n    ],\n    \"boughtPlanA\": false,\n    \"reserveDaysUsed\": 0,\n    \"planType\": \"silver\",\n    \"tobacco\": false,\n    \"fullYearDataForLifeExpectancyYear\": false,\n    \"errorList\": [],\n    \"individualTotalExpenses\": [\n        {\n            \"year\": 2020,\n            \"monthsUsedForMedicareExpenseCalc\": 8,\n            \"partAPremium\": 0,\n            \"partBPremium\": 1156.67,\n            \"partBPremiumSurcharge\": 0,\n            \"partCPremium\": 176.05,\n            \"partDPremium\": 323.79,\n            \"partDPremiumSurcharge\": 0,\n            \"planGPremium\": 981.44,\n            \"planNPremium\": 768,\n            \"partFPremium\": 1520,\n            \"partAOOP\": 0,\n            \"partBOOP\": 1678.75,\n            \"partCOOP\": 1678.75,\n            \"partDOOP\": 433.4,\n            \"planGOOP\": 131.09,\n            \"planNOOP\": 211.2,\n            \"dentalPremium\": 0,\n            \"dentalOOP\": 0,\n            \"reserveDaysLeft\": 60,\n            \"totalABCD\": 3768.66,\n            \"totalABD\": 3592.61,\n            \"totalABFD\": 3433.86,\n            \"totalABGD\": 3026.39,\n            \"totalABND\": 2893.06,\n            \"monthsUsedForPreMedicareExpenseCalc\": 0,\n            \"premium\": 0,\n            \"outofpocket\": 0,\n            \"totalPreMedicareCost\": 0\n        },\n        {\n            \"year\": 2021,\n            \"monthsUsedForMedicareExpenseCalc\": 12,\n            \"partAPremium\": 0,\n            \"partBPremium\": 2575,\n            \"partBPremiumSurcharge\": 736,\n            \"partCPremium\": 280.33,\n            \"partDPremium\": 672.33,\n            \"partDPremiumSurcharge\": 158,\n            \"planGPremium\": 1560.48,\n            \"planNPremium\": 1221.12,\n            \"partFPremium\": 2417,\n            \"partAOOP\": 0,\n            \"partBOOP\": 2594.01,\n            \"partCOOP\": 2594.01,\n            \"partDOOP\": 669.3,\n            \"planGOOP\": 202.54,\n            \"planNOOP\": 326.3,\n            \"dentalPremium\": 0,\n            \"dentalOOP\": 0,\n            \"reserveDaysLeft\": 60,\n            \"totalABCD\": 6790.97,\n            \"totalABD\": 6510.64,\n            \"totalABFD\": 6333.63,\n            \"totalABGD\": 5679.65,\n            \"totalABND\": 5464.05,\n            \"monthsUsedForPreMedicareExpenseCalc\": 0,\n            \"premium\": 0,\n            \"outofpocket\": 0,\n            \"totalPreMedicareCost\": 0\n        },\n        {\n            \"year\": 2022,\n            \"monthsUsedForMedicareExpenseCalc\": 12,\n            \"partAPremium\": 0,\n            \"partBPremium\": 3899,\n            \"partBPremiumSurcharge\": 1949,\n            \"partCPremium\": 296.6,\n            \"partDPremium\": 975.47,\n            \"partDPremiumSurcharge\": 430,\n            \"planGPremium\": 1654.08,\n            \"planNPremium\": 1294.44,\n            \"partFPremium\": 2562,\n            \"partAOOP\": 0,\n            \"partBOOP\": 3957.31,\n            \"partCOOP\": 3957.31,\n            \"partDOOP\": 1109.11,\n            \"planGOOP\": 208.62,\n            \"planNOOP\": 336.09,\n            \"dentalPremium\": 0,\n            \"dentalOOP\": 0,\n            \"reserveDaysLeft\": 60,\n            \"totalABCD\": 10237.49,\n            \"totalABD\": 9940.89,\n            \"totalABFD\": 8545.58,\n            \"totalABGD\": 7846.28,\n            \"totalABND\": 7614.11,\n            \"monthsUsedForPreMedicareExpenseCalc\": 0,\n            \"premium\": 0,\n            \"outofpocket\": 0,\n            \"totalPreMedicareCost\": 0\n        },\n        {\n            \"year\": 2023,\n            \"monthsUsedForMedicareExpenseCalc\": 12,\n            \"partAPremium\": 0,\n            \"partBPremium\": 5374,\n            \"partBPremiumSurcharge\": 3307,\n            \"partCPremium\": 314.78,\n            \"partDPremium\": 1312.85,\n            \"partDPremiumSurcharge\": 735,\n            \"planGPremium\": 1753.32,\n            \"planNPremium\": 1372.08,\n            \"partFPremium\": 2716,\n            \"partAOOP\": 0,\n            \"partBOOP\": 2751.28,\n            \"partCOOP\": 2751.28,\n            \"partDOOP\": 710.45,\n            \"planGOOP\": 214.87,\n            \"planNOOP\": 346.18,\n            \"dentalPremium\": 0,\n            \"dentalOOP\": 0,\n            \"reserveDaysLeft\": 60,\n            \"totalABCD\": 10463.36,\n            \"totalABD\": 10148.58,\n            \"totalABFD\": 10113.3,\n            \"totalABGD\": 9365.49,\n            \"totalABND\": 9115.56,\n            \"monthsUsedForPreMedicareExpenseCalc\": 0,\n            \"premium\": 0,\n            \"outofpocket\": 0,\n            \"totalPreMedicareCost\": 0\n        },\n        {\n            \"year\": 2024,\n            \"monthsUsedForMedicareExpenseCalc\": 12,\n            \"partAPremium\": 0,\n            \"partBPremium\": 7010,\n            \"partBPremiumSurcharge\": 4819,\n            \"partCPremium\": 332.96,\n            \"partDPremium\": 1686.72,\n            \"partDPremiumSurcharge\": 1074,\n            \"planGPremium\": 1858.56,\n            \"planNPremium\": 1454.4,\n            \"partFPremium\": 2878,\n            \"partAOOP\": 0,\n            \"partBOOP\": 2834.48,\n            \"partCOOP\": 2834.48,\n            \"partDOOP\": 731.48,\n            \"planGOOP\": 221.32,\n            \"planNOOP\": 356.56,\n            \"dentalPremium\": 0,\n            \"dentalOOP\": 0,\n            \"reserveDaysLeft\": 60,\n            \"totalABCD\": 12595.64,\n            \"totalABD\": 12262.68,\n            \"totalABFD\": 12306.2,\n            \"totalABGD\": 11508.08,\n            \"totalABND\": 11239.16,\n            \"monthsUsedForPreMedicareExpenseCalc\": 0,\n            \"premium\": 0,\n            \"outofpocket\": 0,\n            \"totalPreMedicareCost\": 0\n        },\n        {\n            \"year\": 2025,\n            \"monthsUsedForMedicareExpenseCalc\": 4,\n            \"partAPremium\": 0,\n            \"partBPremium\": 2631.33,\n            \"partBPremiumSurcharge\": 1857.33,\n            \"partCPremium\": 117.68,\n            \"partDPremium\": 631.03,\n            \"partDPremiumSurcharge\": 414.33,\n            \"planGPremium\": 656.68,\n            \"planNPremium\": 513.88,\n            \"partFPremium\": 1017,\n            \"partAOOP\": 0,\n            \"partBOOP\": 1441.62,\n            \"partCOOP\": 1441.62,\n            \"partDOOP\": 403.84,\n            \"planGOOP\": 75.99,\n            \"planNOOP\": 122.42,\n            \"dentalPremium\": 0,\n            \"dentalOOP\": 0,\n            \"reserveDaysLeft\": 60,\n            \"totalABCD\": 5225.5,\n            \"totalABD\": 5107.82,\n            \"totalABFD\": 4683.2,\n            \"totalABGD\": 4398.86,\n            \"totalABND\": 4302.5,\n            \"monthsUsedForPreMedicareExpenseCalc\": 0,\n            \"premium\": 0,\n            \"outofpocket\": 0,\n            \"totalPreMedicareCost\": 0\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "IndiTotalExpABD_ExpPresentValue_Primary",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7d696814-7a22-4565-bd74-cbb4554b82ba",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "babde7b0-85de-498e-b8dc-bfcd61bf77a9",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var response = JSON.parse(responseBody);",
									"console.log(\"Primary Retirement Year:\", response.fromYear);",
									"",
									"console.log(\"Primary Life Expectancy year:\", response.toYear);",
									"",
									"console.log(\"Present Value year:\", response.pvList[0].year);",
									"",
									"console.log(\"TotalExpense of ABD for Primary (Future Dollar):\", response.pvList[0].totalExpense);",
									"",
									"console.log(\"Present Value of ABD for Primary:\", response.pvList[0].presentValue);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "FinancialPlannerP@ssw0rd",
									"type": "string"
								},
								{
									"key": "username",
									"value": "FinancialPlannerServiceUser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n \n \t\"expenses\":{{expenses0}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
						},
						"url": {
							"raw": "{{server}}/expensesPresentValue",
							"host": [
								"{{server}}"
							],
							"path": [
								"expensesPresentValue"
							]
						},
						"description": "Calculating present Value Year 2020 from the individual total expensesR3 primary of totalABD. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "IndiTotalExpABD_ExpPresentValue_Primary",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n \n \t\"expenses\":{{expenses0}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
								},
								"url": {
									"raw": "{{server}}/expensesPresentValue",
									"host": [
										"{{server}}"
									],
									"path": [
										"expensesPresentValue"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 15:41:07 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"9d847205-eb98-4d96-8ad3-fc5895219d0c-1785\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"fromYear\": 2020,\n    \"toYear\": 2025,\n    \"expenses\": [\n        {\n            \"year\": 2020,\n            \"expense\": 3592.61\n        },\n        {\n            \"year\": 2021,\n            \"expense\": 6510.64\n        },\n        {\n            \"year\": 2022,\n            \"expense\": 9940.89\n        },\n        {\n            \"year\": 2023,\n            \"expense\": 10148.58\n        },\n        {\n            \"year\": 2024,\n            \"expense\": 12262.68\n        },\n        {\n            \"year\": 2025,\n            \"expense\": 5107.82\n        }\n    ],\n    \"presentValueYears\": {\n        \"pvAsOnYear1\": 2020,\n        \"pvAsOnYear2\": 0,\n        \"pvAsOnYear3\": 0\n    },\n    \"discount\": 6,\n    \"rateOfReturns\": {\n        \"rateOfReturn1\": 2,\n        \"rateOfReturn2\": 4,\n        \"rateOfReturn3\": 6,\n        \"rateOfReturn4\": 8\n    },\n    \"pvList\": [\n        {\n            \"year\": 2020,\n            \"totalExpense\": 47563.22,\n            \"presentValue\": 40633.07,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 40633.07,\n            \"savingPerMonthForRateOfReturn2\": 40633.07,\n            \"savingPerMonthForRateOfReturn3\": 40633.07,\n            \"savingPerMonthForRateOfReturn4\": 40633.07\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "IndiTotalExpABCD_ExpPresentValue_Primary",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var response = JSON.parse(responseBody);",
									"console.log(\"Primary Retirement Year:\", response.fromYear);",
									"",
									"console.log(\"Primary Life Expectancy year:\", response.toYear);",
									"",
									"console.log(\"Present Value year:\", response.pvList[0].year);",
									"",
									"console.log(\"TotalExpense of ABCD for Primary (Future Dollar):\", response.pvList[0].totalExpense);",
									"",
									"console.log(\"Present Value of ABCD for Primary:\", response.pvList[0].presentValue);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "FinancialPlannerP@ssw0rd",
									"type": "string"
								},
								{
									"key": "username",
									"value": "FinancialPlannerServiceUser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n \n \t\"expenses\":{{expenses1}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
						},
						"url": {
							"raw": "{{server}}/expensesPresentValue",
							"host": [
								"{{server}}"
							],
							"path": [
								"expensesPresentValue"
							]
						},
						"description": "Calculating present Value Year 2020 from the individual total expensesR3 Primary of totalABCD. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "IndiTotalExpABCD_ExpPresentValue_Primary",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n \n \t\"expenses\":{{expenses1}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
								},
								"url": {
									"raw": "{{server}}/expensesPresentValue",
									"host": [
										"{{server}}"
									],
									"path": [
										"expensesPresentValue"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 15:41:20 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"a9198b55-d703-48bf-a80b-9795cf9e7f3e-5153\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"fromYear\": 2020,\n    \"toYear\": 2025,\n    \"expenses\": [\n        {\n            \"year\": 2020,\n            \"expense\": 3768.66\n        },\n        {\n            \"year\": 2021,\n            \"expense\": 6790.97\n        },\n        {\n            \"year\": 2022,\n            \"expense\": 10237.49\n        },\n        {\n            \"year\": 2023,\n            \"expense\": 10463.36\n        },\n        {\n            \"year\": 2024,\n            \"expense\": 12595.64\n        },\n        {\n            \"year\": 2025,\n            \"expense\": 5225.5\n        }\n    ],\n    \"presentValueYears\": {\n        \"pvAsOnYear1\": 2020,\n        \"pvAsOnYear2\": 0,\n        \"pvAsOnYear3\": 0\n    },\n    \"discount\": 6,\n    \"rateOfReturns\": {\n        \"rateOfReturn1\": 2,\n        \"rateOfReturn2\": 4,\n        \"rateOfReturn3\": 6,\n        \"rateOfReturn4\": 8\n    },\n    \"pvList\": [\n        {\n            \"year\": 2020,\n            \"totalExpense\": 49081.62,\n            \"presentValue\": 41953.53,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 41953.53,\n            \"savingPerMonthForRateOfReturn2\": 41953.53,\n            \"savingPerMonthForRateOfReturn3\": 41953.53,\n            \"savingPerMonthForRateOfReturn4\": 41953.53\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "IndiTotalExpABFD_ExpPresentValue_Primary",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var response = JSON.parse(responseBody);",
									"console.log(\"Primary Retirement Year:\", response.fromYear);",
									"",
									"console.log(\"Primary Life Expectancy year:\", response.toYear);",
									"",
									"console.log(\"Present Value year:\", response.pvList[0].year);",
									"",
									"console.log(\"TotalExpense of ABFD for Primary (Future Dollar):\", response.pvList[0].totalExpense);",
									"",
									"console.log(\"Present Value of ABFD for Primary:\", response.pvList[0].presentValue);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "FinancialPlannerP@ssw0rd",
									"type": "string"
								},
								{
									"key": "username",
									"value": "FinancialPlannerServiceUser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n \n \t\"expenses\":{{expenses2}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
						},
						"url": {
							"raw": "{{server}}/expensesPresentValue",
							"host": [
								"{{server}}"
							],
							"path": [
								"expensesPresentValue"
							]
						},
						"description": "Calculating present Value Year 2020 from the individual total expenses of totalABFD. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "IndiTotalExpABFD_ExpPresentValue_Primary",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n \n \t\"expenses\":{{expenses2}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
								},
								"url": {
									"raw": "{{server}}/expensesPresentValue",
									"host": [
										"{{server}}"
									],
									"path": [
										"expensesPresentValue"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 15:41:47 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"9a1b78f3-187e-4b12-9882-cd04b2c183ab-5503\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"fromYear\": 2020,\n    \"toYear\": 2025,\n    \"expenses\": [\n        {\n            \"year\": 2020,\n            \"expense\": 3433.86\n        },\n        {\n            \"year\": 2021,\n            \"expense\": 6333.63\n        },\n        {\n            \"year\": 2022,\n            \"expense\": 8545.58\n        },\n        {\n            \"year\": 2023,\n            \"expense\": 10113.3\n        },\n        {\n            \"year\": 2024,\n            \"expense\": 12306.2\n        },\n        {\n            \"year\": 2025,\n            \"expense\": 4683.2\n        }\n    ],\n    \"presentValueYears\": {\n        \"pvAsOnYear1\": 2020,\n        \"pvAsOnYear2\": 0,\n        \"pvAsOnYear3\": 0\n    },\n    \"discount\": 6,\n    \"rateOfReturns\": {\n        \"rateOfReturn1\": 2,\n        \"rateOfReturn2\": 4,\n        \"rateOfReturn3\": 6,\n        \"rateOfReturn4\": 8\n    },\n    \"pvList\": [\n        {\n            \"year\": 2020,\n            \"totalExpense\": 45415.77,\n            \"presentValue\": 38753.06,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 38753.06,\n            \"savingPerMonthForRateOfReturn2\": 38753.06,\n            \"savingPerMonthForRateOfReturn3\": 38753.06,\n            \"savingPerMonthForRateOfReturn4\": 38753.06\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "IndiTotalExpABGD_ExpPresentValue_Primary",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var response = JSON.parse(responseBody);",
									"console.log(\"Primary Retirement Year:\", response.fromYear);",
									"",
									"console.log(\"Primary Life Expectancy year:\", response.toYear);",
									"",
									"console.log(\"Present Value year:\", response.pvList[0].year);",
									"",
									"console.log(\"TotalExpense of ABGD for Primary (Future Dollar):\", response.pvList[0].totalExpense);",
									"",
									"console.log(\"Present Value of ABGD for Primary:\", response.pvList[0].presentValue);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "FinancialPlannerP@ssw0rd",
									"type": "string"
								},
								{
									"key": "username",
									"value": "FinancialPlannerServiceUser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n \n \t\"expenses\":{{expenses3}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
						},
						"url": {
							"raw": "{{server}}/expensesPresentValue",
							"host": [
								"{{server}}"
							],
							"path": [
								"expensesPresentValue"
							]
						},
						"description": "Calculating present Value Year 2020 from the individual total expenses of totalABGD. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "IndiTotalExpABGD_ExpPresentValue_Primary",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n \n \t\"expenses\":{{expenses3}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
								},
								"url": {
									"raw": "{{server}}/expensesPresentValue",
									"host": [
										"{{server}}"
									],
									"path": [
										"expensesPresentValue"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 15:41:59 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"0f1b95f1-b864-44df-9659-332023448458-2842\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"fromYear\": 2020,\n    \"toYear\": 2025,\n    \"expenses\": [\n        {\n            \"year\": 2020,\n            \"expense\": 3026.39\n        },\n        {\n            \"year\": 2021,\n            \"expense\": 5679.65\n        },\n        {\n            \"year\": 2022,\n            \"expense\": 7846.28\n        },\n        {\n            \"year\": 2023,\n            \"expense\": 9365.49\n        },\n        {\n            \"year\": 2024,\n            \"expense\": 11508.08\n        },\n        {\n            \"year\": 2025,\n            \"expense\": 4398.86\n        }\n    ],\n    \"presentValueYears\": {\n        \"pvAsOnYear1\": 2020,\n        \"pvAsOnYear2\": 0,\n        \"pvAsOnYear3\": 0\n    },\n    \"discount\": 6,\n    \"rateOfReturns\": {\n        \"rateOfReturn1\": 2,\n        \"rateOfReturn2\": 4,\n        \"rateOfReturn3\": 6,\n        \"rateOfReturn4\": 8\n    },\n    \"pvList\": [\n        {\n            \"year\": 2020,\n            \"totalExpense\": 41824.75,\n            \"presentValue\": 35633.72,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 35633.72,\n            \"savingPerMonthForRateOfReturn2\": 35633.72,\n            \"savingPerMonthForRateOfReturn3\": 35633.72,\n            \"savingPerMonthForRateOfReturn4\": 35633.72\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "IndiTotalExpABND_ExpPresentValue_Primary",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var response = JSON.parse(responseBody);",
									"console.log(\"Primary Retirement Year:\", response.fromYear);",
									"",
									"console.log(\"Primary Life Expectancy year:\", response.toYear);",
									"",
									"console.log(\"Present Value year:\", response.pvList[0].year);",
									"",
									"console.log(\"TotalExpense of ABND for Primary (Future Dollar):\", response.pvList[0].totalExpense);",
									"",
									"console.log(\"Present Value of ABND for Primary:\", response.pvList[0].presentValue);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "FinancialPlannerP@ssw0rd",
									"type": "string"
								},
								{
									"key": "username",
									"value": "FinancialPlannerServiceUser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n \n \t\"expenses\":{{expenses4}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
						},
						"url": {
							"raw": "{{server}}/expensesPresentValue",
							"host": [
								"{{server}}"
							],
							"path": [
								"expensesPresentValue"
							]
						},
						"description": "Calculating present Value Year 2020 from the individual total expensesR3 primary of totalABND. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "IndiTotalExpABND_ExpPresentValue_Primary",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n \n \t\"expenses\":{{expenses4}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
								},
								"url": {
									"raw": "{{server}}/expensesPresentValue",
									"host": [
										"{{server}}"
									],
									"path": [
										"expensesPresentValue"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 15:42:12 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"f7fff8fb-a505-4bd5-bfde-7c803fcf18a7-7811\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"fromYear\": 2020,\n    \"toYear\": 2025,\n    \"expenses\": [\n        {\n            \"year\": 2020,\n            \"expense\": 2893.06\n        },\n        {\n            \"year\": 2021,\n            \"expense\": 5464.05\n        },\n        {\n            \"year\": 2022,\n            \"expense\": 7614.11\n        },\n        {\n            \"year\": 2023,\n            \"expense\": 9115.56\n        },\n        {\n            \"year\": 2024,\n            \"expense\": 11239.16\n        },\n        {\n            \"year\": 2025,\n            \"expense\": 4302.5\n        }\n    ],\n    \"presentValueYears\": {\n        \"pvAsOnYear1\": 2020,\n        \"pvAsOnYear2\": 0,\n        \"pvAsOnYear3\": 0\n    },\n    \"discount\": 6,\n    \"rateOfReturns\": {\n        \"rateOfReturn1\": 2,\n        \"rateOfReturn2\": 4,\n        \"rateOfReturn3\": 6,\n        \"rateOfReturn4\": 8\n    },\n    \"pvList\": [\n        {\n            \"year\": 2020,\n            \"totalExpense\": 40628.44,\n            \"presentValue\": 34595.5,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 34595.5,\n            \"savingPerMonthForRateOfReturn2\": 34595.5,\n            \"savingPerMonthForRateOfReturn3\": 34595.5,\n            \"savingPerMonthForRateOfReturn4\": 34595.5\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "IndiTotalExp_ExpPresentValue_Primary_Surcharge",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var response = JSON.parse(responseBody);",
									"console.log(\"Primary Retirement Year:\", response.fromYear);",
									"",
									"console.log(\"Primary Life Expectancy year:\", response.toYear);",
									"",
									"console.log(\"Present Value year:\", response.pvList[0].year);",
									"",
									"console.log(\"Surcharge for Primary (Future Dollar):\", response.pvList[0].totalExpense);",
									"",
									"console.log(\"Present Value of Surcharge for Primary:\", response.pvList[0].presentValue);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "FinancialPlannerP@ssw0rd",
									"type": "string"
								},
								{
									"key": "username",
									"value": "FinancialPlannerServiceUser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n \n \t\"expenses\":{{expenses10}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
						},
						"url": {
							"raw": "{{server}}/expensesPresentValue",
							"host": [
								"{{server}}"
							],
							"path": [
								"expensesPresentValue"
							]
						},
						"description": "Calculating Present Value of Surcharge At Retirement from the individual total Expenses R3 primary API. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "IndiTotalExp_ExpPresentValue_Primary_Surcharge",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n \n \t\"expenses\":{{expenses10}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
								},
								"url": {
									"raw": "{{server}}/expensesPresentValue",
									"host": [
										"{{server}}"
									],
									"path": [
										"expensesPresentValue"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 15:42:27 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"abde380f-4968-440c-b40a-f76d3d0c7c9a-9793\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"fromYear\": 2020,\n    \"toYear\": 2025,\n    \"expenses\": [\n        {\n            \"year\": 2020,\n            \"expense\": 0\n        },\n        {\n            \"year\": 2021,\n            \"expense\": 894\n        },\n        {\n            \"year\": 2022,\n            \"expense\": 2379\n        },\n        {\n            \"year\": 2023,\n            \"expense\": 4042\n        },\n        {\n            \"year\": 2024,\n            \"expense\": 5893\n        },\n        {\n            \"year\": 2025,\n            \"expense\": 2271.66\n        }\n    ],\n    \"presentValueYears\": {\n        \"pvAsOnYear1\": 2020,\n        \"pvAsOnYear2\": 0,\n        \"pvAsOnYear3\": 0\n    },\n    \"discount\": 6,\n    \"rateOfReturns\": {\n        \"rateOfReturn1\": 2,\n        \"rateOfReturn2\": 4,\n        \"rateOfReturn3\": 6,\n        \"rateOfReturn4\": 8\n    },\n    \"pvList\": [\n        {\n            \"year\": 2020,\n            \"totalExpense\": 15479.66,\n            \"presentValue\": 12719.76,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 12719.76,\n            \"savingPerMonthForRateOfReturn2\": 12719.76,\n            \"savingPerMonthForRateOfReturn3\": 12719.76,\n            \"savingPerMonthForRateOfReturn4\": 12719.76\n        }\n    ]\n}"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "IndividualTotalExpR3_Spouse_ExpPV",
			"item": [
				{
					"name": "IndiTotalExpABD_ExpPresentValue_Spouse",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var response = JSON.parse(responseBody);",
									"console.log(\"Spouse Retirement Year:\", response.fromYear);",
									"",
									"console.log(\"Spouse Life Expectancy year:\", response.toYear);",
									"",
									"console.log(\"Present Value year:\", response.pvList[0].year);",
									"",
									"console.log(\"TotalExpense of ABD for Spouse(Future Dollar):\", response.pvList[0].totalExpense);",
									"",
									"console.log(\"Present Value of ABD for Spouse:\", response.pvList[0].presentValue);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "FinancialPlannerP@ssw0rd",
									"type": "string"
								},
								{
									"key": "username",
									"value": "FinancialPlannerServiceUser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n \n \t\"expenses\":{{expenses0}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
						},
						"url": {
							"raw": "{{server}}/expensesPresentValue",
							"host": [
								"{{server}}"
							],
							"path": [
								"expensesPresentValue"
							]
						},
						"description": "Calculating present Value Year 2020 from the individual total expensesR3 spouse of totalABD. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "IndiTotalExpABD_ExpPresentValue_Spouse",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n \n \t\"expenses\":{{expenses0}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
								},
								"url": {
									"raw": "{{server}}/expensesPresentValue",
									"host": [
										"{{server}}"
									],
									"path": [
										"expensesPresentValue"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 15:43:57 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"7749cbc8-67b8-4586-afe8-4b0bc7b07a6c-1816\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"fromYear\": 2020,\n    \"toYear\": 2024,\n    \"expenses\": [\n        {\n            \"year\": 2020,\n            \"expense\": 5388.91\n        },\n        {\n            \"year\": 2021,\n            \"expense\": 6510.64\n        },\n        {\n            \"year\": 2022,\n            \"expense\": 9940.89\n        },\n        {\n            \"year\": 2023,\n            \"expense\": 10148.58\n        },\n        {\n            \"year\": 2024,\n            \"expense\": 12262.68\n        }\n    ],\n    \"presentValueYears\": {\n        \"pvAsOnYear1\": 2020,\n        \"pvAsOnYear2\": 2019,\n        \"pvAsOnYear3\": 2018\n    },\n    \"discount\": 6,\n    \"rateOfReturns\": {\n        \"rateOfReturn1\": 2,\n        \"rateOfReturn2\": 4,\n        \"rateOfReturn3\": 6,\n        \"rateOfReturn4\": 8\n    },\n    \"pvList\": [\n        {\n            \"year\": 2020,\n            \"totalExpense\": 44251.7,\n            \"presentValue\": 38612.51,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 38612.51,\n            \"savingPerMonthForRateOfReturn2\": 38612.51,\n            \"savingPerMonthForRateOfReturn3\": 38612.51,\n            \"savingPerMonthForRateOfReturn4\": 38612.51\n        },\n        {\n            \"year\": 2019,\n            \"totalExpense\": 44251.7,\n            \"presentValue\": 36426.9,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 36426.9,\n            \"savingPerMonthForRateOfReturn2\": 36426.9,\n            \"savingPerMonthForRateOfReturn3\": 36426.9,\n            \"savingPerMonthForRateOfReturn4\": 36426.9\n        },\n        {\n            \"year\": 2018,\n            \"totalExpense\": 44251.7,\n            \"presentValue\": 34365,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 34365,\n            \"savingPerMonthForRateOfReturn2\": 34365,\n            \"savingPerMonthForRateOfReturn3\": 34365,\n            \"savingPerMonthForRateOfReturn4\": 34365\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "IndiTotalExpABCD_ExpPresentValue_Spouse",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var response = JSON.parse(responseBody);",
									"console.log(\"Spouse Retirement Year:\", response.fromYear);",
									"",
									"console.log(\"Spouse Life Expectancy year:\", response.toYear);",
									"",
									"console.log(\"Spouse Value year:\", response.pvList[0].year);",
									"",
									"console.log(\"TotalExpense of ABCD for Spouse (Future Dollar):\", response.pvList[0].totalExpense);",
									"",
									"console.log(\"Present Value of ABCD for Spouse:\", response.pvList[0].presentValue);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "FinancialPlannerP@ssw0rd",
									"type": "string"
								},
								{
									"key": "username",
									"value": "FinancialPlannerServiceUser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n \n \t\"expenses\":{{expenses1}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
						},
						"url": {
							"raw": "{{server}}/expensesPresentValue",
							"host": [
								"{{server}}"
							],
							"path": [
								"expensesPresentValue"
							]
						},
						"description": "Calculating present Value Year 2020 from the individual total expensesR3 spouse of totalABCD. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "IndiTotalExpABCD_ExpPresentValue_Spouse",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n \n \t\"expenses\":{{expenses1}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
								},
								"url": {
									"raw": "{{server}}/expensesPresentValue",
									"host": [
										"{{server}}"
									],
									"path": [
										"expensesPresentValue"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 15:46:19 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"0ea51c51-a5a6-427c-9a12-77b9cba65c83-3951\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"fromYear\": 2020,\n    \"toYear\": 2024,\n    \"expenses\": [\n        {\n            \"year\": 2020,\n            \"expense\": 5652.98\n        },\n        {\n            \"year\": 2021,\n            \"expense\": 6790.97\n        },\n        {\n            \"year\": 2022,\n            \"expense\": 10237.49\n        },\n        {\n            \"year\": 2023,\n            \"expense\": 10463.36\n        },\n        {\n            \"year\": 2024,\n            \"expense\": 12595.64\n        }\n    ],\n    \"presentValueYears\": {\n        \"pvAsOnYear1\": 2020,\n        \"pvAsOnYear2\": 2019,\n        \"pvAsOnYear3\": 2018\n    },\n    \"discount\": 6,\n    \"rateOfReturns\": {\n        \"rateOfReturn1\": 2,\n        \"rateOfReturn2\": 4,\n        \"rateOfReturn3\": 6,\n        \"rateOfReturn4\": 8\n    },\n    \"pvList\": [\n        {\n            \"year\": 2020,\n            \"totalExpense\": 45740.44,\n            \"presentValue\": 39933.05,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 39933.05,\n            \"savingPerMonthForRateOfReturn2\": 39933.05,\n            \"savingPerMonthForRateOfReturn3\": 39933.05,\n            \"savingPerMonthForRateOfReturn4\": 39933.05\n        },\n        {\n            \"year\": 2019,\n            \"totalExpense\": 45740.44,\n            \"presentValue\": 37672.69,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 37672.69,\n            \"savingPerMonthForRateOfReturn2\": 37672.69,\n            \"savingPerMonthForRateOfReturn3\": 37672.69,\n            \"savingPerMonthForRateOfReturn4\": 37672.69\n        },\n        {\n            \"year\": 2018,\n            \"totalExpense\": 45740.44,\n            \"presentValue\": 35540.27,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 35540.27,\n            \"savingPerMonthForRateOfReturn2\": 35540.27,\n            \"savingPerMonthForRateOfReturn3\": 35540.27,\n            \"savingPerMonthForRateOfReturn4\": 35540.27\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "IndiTotalExpABFD_ExpPresentValue_Spouse",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var response = JSON.parse(responseBody);",
									"console.log(\"Spouse Retirement Year:\", response.fromYear);",
									"",
									"console.log(\"Spouse Life Expectancy year:\", response.toYear);",
									"",
									"console.log(\"Spouse Value year:\", response.pvList[0].year);",
									"",
									"console.log(\"TotalExpense of ABFD for Spouse (Future Dollar):\", response.pvList[0].totalExpense);",
									"",
									"console.log(\"Present Value of ABFD for Spouse:\", response.pvList[0].presentValue);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "FinancialPlannerP@ssw0rd",
									"type": "string"
								},
								{
									"key": "username",
									"value": "FinancialPlannerServiceUser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n \n \t\"expenses\":{{expenses2}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
						},
						"url": {
							"raw": "{{server}}/expensesPresentValue",
							"host": [
								"{{server}}"
							],
							"path": [
								"expensesPresentValue"
							]
						},
						"description": "Calculating present Value Year 2020 from the individual total expenses of totalABFD. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "IndiTotalExpABFD_ExpPresentValue_Spouse",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n \n \t\"expenses\":{{expenses2}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
								},
								"url": {
									"raw": "{{server}}/expensesPresentValue",
									"host": [
										"{{server}}"
									],
									"path": [
										"expensesPresentValue"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 15:46:37 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"c7beefbd-2e62-4a78-a398-44ffb2448026-7469\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"fromYear\": 2020,\n    \"toYear\": 2024,\n    \"expenses\": [\n        {\n            \"year\": 2020,\n            \"expense\": 5150.79\n        },\n        {\n            \"year\": 2021,\n            \"expense\": 6333.63\n        },\n        {\n            \"year\": 2022,\n            \"expense\": 8545.58\n        },\n        {\n            \"year\": 2023,\n            \"expense\": 10113.3\n        },\n        {\n            \"year\": 2024,\n            \"expense\": 12306.2\n        }\n    ],\n    \"presentValueYears\": {\n        \"pvAsOnYear1\": 2020,\n        \"pvAsOnYear2\": 2019,\n        \"pvAsOnYear3\": 2018\n    },\n    \"discount\": 6,\n    \"rateOfReturns\": {\n        \"rateOfReturn1\": 2,\n        \"rateOfReturn2\": 4,\n        \"rateOfReturn3\": 6,\n        \"rateOfReturn4\": 8\n    },\n    \"pvList\": [\n        {\n            \"year\": 2020,\n            \"totalExpense\": 42449.5,\n            \"presentValue\": 36970.43,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 36970.43,\n            \"savingPerMonthForRateOfReturn2\": 36970.43,\n            \"savingPerMonthForRateOfReturn3\": 36970.43,\n            \"savingPerMonthForRateOfReturn4\": 36970.43\n        },\n        {\n            \"year\": 2019,\n            \"totalExpense\": 42449.5,\n            \"presentValue\": 34877.77,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 34877.77,\n            \"savingPerMonthForRateOfReturn2\": 34877.77,\n            \"savingPerMonthForRateOfReturn3\": 34877.77,\n            \"savingPerMonthForRateOfReturn4\": 34877.77\n        },\n        {\n            \"year\": 2018,\n            \"totalExpense\": 42449.5,\n            \"presentValue\": 32903.55,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 32903.55,\n            \"savingPerMonthForRateOfReturn2\": 32903.55,\n            \"savingPerMonthForRateOfReturn3\": 32903.55,\n            \"savingPerMonthForRateOfReturn4\": 32903.55\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "IndiTotalExpABGD_ExpPresentValue_Spouse",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var response = JSON.parse(responseBody);",
									"console.log(\"Spouse Retirement Year:\", response.fromYear);",
									"",
									"console.log(\"Spouse Life Expectancy year:\", response.toYear);",
									"",
									"console.log(\"Spouse Value year:\", response.pvList[0].year);",
									"",
									"console.log(\"TotalExpense of ABGD for Spouse (Future Dollar):\", response.pvList[0].totalExpense);",
									"",
									"console.log(\"Present Value of ABGD for Spouse:\", response.pvList[0].presentValue);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "FinancialPlannerP@ssw0rd",
									"type": "string"
								},
								{
									"key": "username",
									"value": "FinancialPlannerServiceUser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n \n \t\"expenses\":{{expenses3}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
						},
						"url": {
							"raw": "{{server}}/expensesPresentValue",
							"host": [
								"{{server}}"
							],
							"path": [
								"expensesPresentValue"
							]
						},
						"description": "Calculating present Value Year 2020 from the individual total expenses of totalABGD. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "IndiTotalExpABGD_ExpPresentValue_Spouse",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n \n \t\"expenses\":{{expenses3}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
								},
								"url": {
									"raw": "{{server}}/expensesPresentValue",
									"host": [
										"{{server}}"
									],
									"path": [
										"expensesPresentValue"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 15:46:50 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"fe7502de-08c0-4d9f-821d-7eca7d3d2bd2-9922\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"fromYear\": 2020,\n    \"toYear\": 2024,\n    \"expenses\": [\n        {\n            \"year\": 2020,\n            \"expense\": 4539.59\n        },\n        {\n            \"year\": 2021,\n            \"expense\": 5679.65\n        },\n        {\n            \"year\": 2022,\n            \"expense\": 7846.28\n        },\n        {\n            \"year\": 2023,\n            \"expense\": 9365.49\n        },\n        {\n            \"year\": 2024,\n            \"expense\": 11508.08\n        }\n    ],\n    \"presentValueYears\": {\n        \"pvAsOnYear1\": 2020,\n        \"pvAsOnYear2\": 2019,\n        \"pvAsOnYear3\": 2018\n    },\n    \"discount\": 6,\n    \"rateOfReturns\": {\n        \"rateOfReturn1\": 2,\n        \"rateOfReturn2\": 4,\n        \"rateOfReturn3\": 6,\n        \"rateOfReturn4\": 8\n    },\n    \"pvList\": [\n        {\n            \"year\": 2020,\n            \"totalExpense\": 38939.09,\n            \"presentValue\": 33859.83,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 33859.83,\n            \"savingPerMonthForRateOfReturn2\": 33859.83,\n            \"savingPerMonthForRateOfReturn3\": 33859.83,\n            \"savingPerMonthForRateOfReturn4\": 33859.83\n        },\n        {\n            \"year\": 2019,\n            \"totalExpense\": 38939.09,\n            \"presentValue\": 31943.24,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 31943.24,\n            \"savingPerMonthForRateOfReturn2\": 31943.24,\n            \"savingPerMonthForRateOfReturn3\": 31943.24,\n            \"savingPerMonthForRateOfReturn4\": 31943.24\n        },\n        {\n            \"year\": 2018,\n            \"totalExpense\": 38939.09,\n            \"presentValue\": 30135.13,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 30135.13,\n            \"savingPerMonthForRateOfReturn2\": 30135.13,\n            \"savingPerMonthForRateOfReturn3\": 30135.13,\n            \"savingPerMonthForRateOfReturn4\": 30135.13\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "IndiTotalExpABND_ExpPresentValue_Spouse",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var response = JSON.parse(responseBody);",
									"console.log(\"Spouse Retirement Year:\", response.fromYear);",
									"",
									"console.log(\"Spouse Life Expectancy year:\", response.toYear);",
									"",
									"console.log(\"Spouse Value year:\", response.pvList[0].year);",
									"",
									"console.log(\"TotalExpense of ABND for Spouse (Future Dollar):\", response.pvList[0].totalExpense);",
									"",
									"console.log(\"Present Value of ABND for Spouse:\", response.pvList[0].presentValue);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "FinancialPlannerP@ssw0rd",
									"type": "string"
								},
								{
									"key": "username",
									"value": "FinancialPlannerServiceUser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n \n \t\"expenses\":{{expenses4}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
						},
						"url": {
							"raw": "{{server}}/expensesPresentValue",
							"host": [
								"{{server}}"
							],
							"path": [
								"expensesPresentValue"
							]
						},
						"description": "Calculating present Value Year 2020 from the individual total expensesR3 spouse of totalABND. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "IndiTotalExpABND_ExpPresentValue_Spouse",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n \n \t\"expenses\":{{expenses4}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
								},
								"url": {
									"raw": "{{server}}/expensesPresentValue",
									"host": [
										"{{server}}"
									],
									"path": [
										"expensesPresentValue"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 15:46:59 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"d47b322f-1cfa-49ce-aa93-479ca47da8ac-4790\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"fromYear\": 2020,\n    \"toYear\": 2024,\n    \"expenses\": [\n        {\n            \"year\": 2020,\n            \"expense\": 4339.59\n        },\n        {\n            \"year\": 2021,\n            \"expense\": 5464.05\n        },\n        {\n            \"year\": 2022,\n            \"expense\": 7614.11\n        },\n        {\n            \"year\": 2023,\n            \"expense\": 9115.56\n        },\n        {\n            \"year\": 2024,\n            \"expense\": 11239.16\n        }\n    ],\n    \"presentValueYears\": {\n        \"pvAsOnYear1\": 2020,\n        \"pvAsOnYear2\": 2019,\n        \"pvAsOnYear3\": 2018\n    },\n    \"discount\": 6,\n    \"rateOfReturns\": {\n        \"rateOfReturn1\": 2,\n        \"rateOfReturn2\": 4,\n        \"rateOfReturn3\": 6,\n        \"rateOfReturn4\": 8\n    },\n    \"pvList\": [\n        {\n            \"year\": 2020,\n            \"totalExpense\": 37772.47,\n            \"presentValue\": 32826.95,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 32826.95,\n            \"savingPerMonthForRateOfReturn2\": 32826.95,\n            \"savingPerMonthForRateOfReturn3\": 32826.95,\n            \"savingPerMonthForRateOfReturn4\": 32826.95\n        },\n        {\n            \"year\": 2019,\n            \"totalExpense\": 37772.47,\n            \"presentValue\": 30968.82,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 30968.82,\n            \"savingPerMonthForRateOfReturn2\": 30968.82,\n            \"savingPerMonthForRateOfReturn3\": 30968.82,\n            \"savingPerMonthForRateOfReturn4\": 30968.82\n        },\n        {\n            \"year\": 2018,\n            \"totalExpense\": 37772.47,\n            \"presentValue\": 29215.87,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 29215.87,\n            \"savingPerMonthForRateOfReturn2\": 29215.87,\n            \"savingPerMonthForRateOfReturn3\": 29215.87,\n            \"savingPerMonthForRateOfReturn4\": 29215.87\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "IndiTotalExp_ExpPresentValue_Spouse_Surcharge",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var response = JSON.parse(responseBody);",
									"console.log(\"Spouse Retirement Year:\", response.fromYear);",
									"",
									"console.log(\"Spouse Life Expectancy year:\", response.toYear);",
									"",
									"console.log(\"Spouse Value year:\", response.pvList[0].year);",
									"",
									"console.log(\"TotalExpense of Surcharge for Spouse (Future Dollar):\", response.pvList[0].totalExpense);",
									"",
									"console.log(\"Present Value of Surcharge for Spouse:\", response.pvList[0].presentValue);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "FinancialPlannerP@ssw0rd",
									"type": "string"
								},
								{
									"key": "username",
									"value": "FinancialPlannerServiceUser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n \n \t\"expenses\":{{expenses10}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
						},
						"url": {
							"raw": "{{server}}/expensesPresentValue",
							"host": [
								"{{server}}"
							],
							"path": [
								"expensesPresentValue"
							]
						},
						"description": "Calculating Present Value of Surcharge At Retirement from the individual total Expenses R3 primary API. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "IndiTotalExp_ExpPresentValue_Spouse_Surcharge",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n \n \t\"expenses\":{{expenses10}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
								},
								"url": {
									"raw": "{{server}}/expensesPresentValue",
									"host": [
										"{{server}}"
									],
									"path": [
										"expensesPresentValue"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 15:47:12 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"115208a5-19c5-4c79-91fe-d710eabdff66-8597\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"fromYear\": 2020,\n    \"toYear\": 2024,\n    \"expenses\": [\n        {\n            \"year\": 2020,\n            \"expense\": 0\n        },\n        {\n            \"year\": 2021,\n            \"expense\": 894\n        },\n        {\n            \"year\": 2022,\n            \"expense\": 2379\n        },\n        {\n            \"year\": 2023,\n            \"expense\": 4042\n        },\n        {\n            \"year\": 2024,\n            \"expense\": 5893\n        }\n    ],\n    \"presentValueYears\": {\n        \"pvAsOnYear1\": 2020,\n        \"pvAsOnYear2\": 2019,\n        \"pvAsOnYear3\": 2018\n    },\n    \"discount\": 6,\n    \"rateOfReturns\": {\n        \"rateOfReturn1\": 2,\n        \"rateOfReturn2\": 4,\n        \"rateOfReturn3\": 6,\n        \"rateOfReturn4\": 8\n    },\n    \"pvList\": [\n        {\n            \"year\": 2020,\n            \"totalExpense\": 13208,\n            \"presentValue\": 11022.25,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 11022.25,\n            \"savingPerMonthForRateOfReturn2\": 11022.25,\n            \"savingPerMonthForRateOfReturn3\": 11022.25,\n            \"savingPerMonthForRateOfReturn4\": 11022.25\n        },\n        {\n            \"year\": 2019,\n            \"totalExpense\": 13208,\n            \"presentValue\": 10398.35,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 10398.35,\n            \"savingPerMonthForRateOfReturn2\": 10398.35,\n            \"savingPerMonthForRateOfReturn3\": 10398.35,\n            \"savingPerMonthForRateOfReturn4\": 10398.35\n        },\n        {\n            \"year\": 2018,\n            \"totalExpense\": 13208,\n            \"presentValue\": 9809.76,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 9809.76,\n            \"savingPerMonthForRateOfReturn2\": 9809.76,\n            \"savingPerMonthForRateOfReturn3\": 9809.76,\n            \"savingPerMonthForRateOfReturn4\": 9809.76\n        }\n    ]\n}"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "IndividualTotalExpR3_Primary_getSaving",
			"item": [
				{
					"name": "IndiTotalExp_ABD_getSaving",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var response = JSON.parse(responseBody);\r",
									"console.log(\"Primary Retirement Annual Expenses of ABD:\", response.expenses);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA=="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"expenses\": {{expenses5}},\r\n  \r\n  \"initalSavings\": \"{{initalSavings}}\",\r\n  \"duration\": \"{{duration}}\",\r\n  \"ror\": \"{{ror}}\",\r\n  \"term\": \"{{term}}\",\r\n  \"levelOfProtection\": \"{{levelOfProtection}}\"\r\n}\r\n\r\n"
						},
						"url": {
							"raw": "{{server}}/monthly/getSavings",
							"host": [
								"{{server}}"
							],
							"path": [
								"monthly",
								"getSavings"
							]
						},
						"description": "Calculating annual expenses from the individual total expensesR3 primary of totalABD. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "IndiTotalExp_ABD_getSaving",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"expenses\": {{expenses5}},\r\n  \r\n  \"initalSavings\": \"{{initalSavings}}\",\r\n  \"duration\": \"{{duration}}\",\r\n  \"ror\": \"{{ror}}\",\r\n  \"term\": \"{{term}}\",\r\n  \"levelOfProtection\": \"{{levelOfProtection}}\"\r\n}\r\n\r\n"
								},
								"url": {
									"raw": "{{server}}/monthly/getSavings",
									"host": [
										"{{server}}"
									],
									"path": [
										"monthly",
										"getSavings"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 15:42:46 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"bc6f5402-eefd-4ad1-9a15-51d2f03afe38-9232\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"initalSavings\": 0,\n    \"duration\": 32,\n    \"ror\": 5.5,\n    \"levelOfProtection\": 100,\n    \"year\": [\n        2020,\n        2021,\n        2022,\n        2023,\n        2024,\n        2025\n    ],\n    \"expenses\": [\n        3592.61,\n        6510.64,\n        9940.89,\n        10148.58,\n        12262.68,\n        5107.82\n    ],\n    \"balances\": [\n        -324.56,\n        -3567.15,\n        -10239.99,\n        -17120.52,\n        -26115.15,\n        -27954.92\n    ],\n    \"yearlySavings\": [\n        3268.05,\n        3268.05,\n        3268.05,\n        3268.05,\n        3268.05,\n        3268.05\n    ],\n    \"totalSavings\": [\n        19608,\n        19608,\n        19608,\n        19608,\n        19608,\n        19608\n    ],\n    \"term\": [\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\"\n    ],\n    \"monthlySavings\": [\n        265.54,\n        265.54,\n        265.54,\n        265.54,\n        265.54,\n        265.54\n    ],\n    \"totalMonthsToSave\": [\n        67,\n        67,\n        67,\n        67,\n        67,\n        67\n    ]\n}"
						}
					]
				},
				{
					"name": "IndiTotalExp_ABCD_getSaving",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var response = JSON.parse(responseBody);\r",
									"console.log(\"Primary Retirement Annual Expenses of ABCD:\", response.expenses);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA=="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"expenses\": {{expenses6}},\r\n  \r\n  \"initalSavings\": \"{{initalSavings}}\",\r\n  \"duration\": \"{{duration}}\",\r\n  \"ror\": \"{{ror}}\",\r\n  \"term\": \"{{term}}\",\r\n  \"levelOfProtection\": \"{{levelOfProtection}}\"\r\n}\r\n\r\n"
						},
						"url": {
							"raw": "{{server}}/monthly/getSavings",
							"host": [
								"{{server}}"
							],
							"path": [
								"monthly",
								"getSavings"
							]
						},
						"description": "Calculating annual expenses from the individual total expensesR3 primary of totalABCD. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "IndiTotalExp_ABCD_getSaving",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"expenses\": {{expenses6}},\r\n  \r\n  \"initalSavings\": \"{{initalSavings}}\",\r\n  \"duration\": \"{{duration}}\",\r\n  \"ror\": \"{{ror}}\",\r\n  \"term\": \"{{term}}\",\r\n  \"levelOfProtection\": \"{{levelOfProtection}}\"\r\n}\r\n\r\n"
								},
								"url": {
									"raw": "{{server}}/monthly/getSavings",
									"host": [
										"{{server}}"
									],
									"path": [
										"monthly",
										"getSavings"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 15:43:02 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"aecfaaa2-08e2-4154-bd96-157304da696e-5643\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"initalSavings\": 0,\n    \"duration\": 32,\n    \"ror\": 5.5,\n    \"levelOfProtection\": 100,\n    \"year\": [\n        2020,\n        2021,\n        2022,\n        2023,\n        2024,\n        2025\n    ],\n    \"expenses\": [\n        3768.66,\n        6790.97,\n        10237.49,\n        10463.36,\n        12595.64,\n        5225.5\n    ],\n    \"balances\": [\n        -396.28,\n        -3814.87,\n        -10679.98,\n        -17770.96,\n        -26994.22,\n        -28847.34\n    ],\n    \"yearlySavings\": [\n        3372.38,\n        3372.38,\n        3372.38,\n        3372.38,\n        3372.38,\n        3372.38\n    ],\n    \"totalSavings\": [\n        20234,\n        20234,\n        20234,\n        20234,\n        20234,\n        20234\n    ],\n    \"term\": [\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\"\n    ],\n    \"monthlySavings\": [\n        274.02,\n        274.02,\n        274.02,\n        274.02,\n        274.02,\n        274.02\n    ],\n    \"totalMonthsToSave\": [\n        67,\n        67,\n        67,\n        67,\n        67,\n        67\n    ]\n}"
						}
					]
				},
				{
					"name": "IndiTotalExp_ABFD_getSaving",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var response = JSON.parse(responseBody);\r",
									"console.log(\"Primary Retirement Annual Expenses of ABFD:\", response.expenses);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA=="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"expenses\": {{expenses7}},\r\n  \r\n  \"initalSavings\": \"{{initalSavings}}\",\r\n  \"duration\": \"{{duration}}\",\r\n  \"ror\": \"{{ror}}\",\r\n  \"term\": \"{{term}}\",\r\n  \"levelOfProtection\": \"{{levelOfProtection}}\"\r\n}\r\n"
						},
						"url": {
							"raw": "{{server}}/monthly/getSavings",
							"host": [
								"{{server}}"
							],
							"path": [
								"monthly",
								"getSavings"
							]
						},
						"description": "Calculating annual expenses from the individual total expensesR3 primary of totalABFD. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "IndiTotalExp_ABFD_getSaving",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"expenses\": {{expenses7}},\r\n  \r\n  \"initalSavings\": \"{{initalSavings}}\",\r\n  \"duration\": \"{{duration}}\",\r\n  \"ror\": \"{{ror}}\",\r\n  \"term\": \"{{term}}\",\r\n  \"levelOfProtection\": \"{{levelOfProtection}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "{{server}}/monthly/getSavings",
									"host": [
										"{{server}}"
									],
									"path": [
										"monthly",
										"getSavings"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 15:43:13 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"8937bf4b-1888-4376-94ce-5b90b08decdd-4844\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"initalSavings\": 0,\n    \"duration\": 32,\n    \"ror\": 5.5,\n    \"levelOfProtection\": 100,\n    \"year\": [\n        2020,\n        2021,\n        2022,\n        2023,\n        2024,\n        2025\n    ],\n    \"expenses\": [\n        3433.86,\n        6333.63,\n        8545.58,\n        10113.3,\n        12306.2,\n        4683.2\n    ],\n    \"balances\": [\n        -313.36,\n        -3526.49,\n        -8951.57,\n        -15944.37,\n        -25130.07,\n        -26692.77\n    ],\n    \"yearlySavings\": [\n        3120.5,\n        3120.5,\n        3120.5,\n        3120.5,\n        3120.5,\n        3120.5\n    ],\n    \"totalSavings\": [\n        18723,\n        18723,\n        18723,\n        18723,\n        18723,\n        18723\n    ],\n    \"term\": [\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\"\n    ],\n    \"monthlySavings\": [\n        253.55,\n        253.55,\n        253.55,\n        253.55,\n        253.55,\n        253.55\n    ],\n    \"totalMonthsToSave\": [\n        67,\n        67,\n        67,\n        67,\n        67,\n        67\n    ]\n}"
						}
					]
				},
				{
					"name": "IndiTotalExp_ABGD_getSaving",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var response = JSON.parse(responseBody);\r",
									"console.log(\"Primary Retirement Annual Expenses of ABGD:\", response.expenses);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA=="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"expenses\": {{expenses8}},\r\n  \r\n  \"initalSavings\": \"{{initalSavings}}\",\r\n  \"duration\": \"{{duration}}\",\r\n  \"ror\": \"{{ror}}\",\r\n  \"term\": \"{{term}}\",\r\n  \"levelOfProtection\": \"{{levelOfProtection}}\"\r\n}\r\n\r\n"
						},
						"url": {
							"raw": "{{server}}/monthly/getSavings",
							"host": [
								"{{server}}"
							],
							"path": [
								"monthly",
								"getSavings"
							]
						},
						"description": "Calculating annual expenses from the individual total expensesR3 primary of totalABGD. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "IndiTotalExp_ABGD_getSaving",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"expenses\": {{expenses8}},\r\n  \r\n  \"initalSavings\": \"{{initalSavings}}\",\r\n  \"duration\": \"{{duration}}\",\r\n  \"ror\": \"{{ror}}\",\r\n  \"term\": \"{{term}}\",\r\n  \"levelOfProtection\": \"{{levelOfProtection}}\"\r\n}\r\n\r\n"
								},
								"url": {
									"raw": "{{server}}/monthly/getSavings",
									"host": [
										"{{server}}"
									],
									"path": [
										"monthly",
										"getSavings"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 15:43:30 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"bcfd0cbf-f204-4389-a9a9-f2d946065a03-7000\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"initalSavings\": 0,\n    \"duration\": 32,\n    \"ror\": 5.5,\n    \"levelOfProtection\": 100,\n    \"year\": [\n        2020,\n        2021,\n        2022,\n        2023,\n        2024,\n        2025\n    ],\n    \"expenses\": [\n        3026.39,\n        5679.65,\n        7846.28,\n        9365.49,\n        11508.08,\n        4398.86\n    ],\n    \"balances\": [\n        -152.63,\n        -2958.52,\n        -7931.04,\n        -14422.77,\n        -23057.09,\n        -24582.19\n    ],\n    \"yearlySavings\": [\n        2873.76,\n        2873.76,\n        2873.76,\n        2873.76,\n        2873.76,\n        2873.76\n    ],\n    \"totalSavings\": [\n        17243,\n        17243,\n        17243,\n        17243,\n        17243,\n        17243\n    ],\n    \"term\": [\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\"\n    ],\n    \"monthlySavings\": [\n        233.5,\n        233.5,\n        233.5,\n        233.5,\n        233.5,\n        233.5\n    ],\n    \"totalMonthsToSave\": [\n        67,\n        67,\n        67,\n        67,\n        67,\n        67\n    ]\n}"
						}
					]
				},
				{
					"name": "IndiTotalExp_ABND_getSaving",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var response = JSON.parse(responseBody);\r",
									"console.log(\"Primary Retirement Annual Expenses of ABND:\", response.expenses);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA=="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"expenses\": {{expenses9}},\r\n  \r\n  \"initalSavings\": \"{{initalSavings}}\",\r\n  \"duration\": \"{{duration}}\",\r\n  \"ror\": \"{{ror}}\",\r\n  \"term\": \"{{term}}\",\r\n  \"levelOfProtection\": \"{{levelOfProtection}}\"\r\n}\r\n\r\n\r\n"
						},
						"url": {
							"raw": "{{server}}/monthly/getSavings",
							"host": [
								"{{server}}"
							],
							"path": [
								"monthly",
								"getSavings"
							]
						},
						"description": "Calculating annual expenses from the individual total expensesR3 primary of totalABND. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "IndiTotalExp_ABND_getSaving",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"expenses\": {{expenses9}},\r\n  \r\n  \"initalSavings\": \"{{initalSavings}}\",\r\n  \"duration\": \"{{duration}}\",\r\n  \"ror\": \"{{ror}}\",\r\n  \"term\": \"{{term}}\",\r\n  \"levelOfProtection\": \"{{levelOfProtection}}\"\r\n}\r\n\r\n\r\n"
								},
								"url": {
									"raw": "{{server}}/monthly/getSavings",
									"host": [
										"{{server}}"
									],
									"path": [
										"monthly",
										"getSavings"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 15:43:42 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"5d99d769-54e7-4d33-be5b-89bcb0b70910-9193\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"initalSavings\": 0,\n    \"duration\": 32,\n    \"ror\": 5.5,\n    \"levelOfProtection\": 100,\n    \"year\": [\n        2020,\n        2021,\n        2022,\n        2023,\n        2024,\n        2025\n    ],\n    \"expenses\": [\n        2893.06,\n        5464.05,\n        7614.11,\n        9115.56,\n        11239.16,\n        4302.5\n    ],\n    \"balances\": [\n        -101.49,\n        -2773.97,\n        -7596.51,\n        -13920.5,\n        -22368.09,\n        -23879.02\n    ],\n    \"yearlySavings\": [\n        2791.57,\n        2791.57,\n        2791.57,\n        2791.57,\n        2791.57,\n        2791.57\n    ],\n    \"totalSavings\": [\n        16749,\n        16749,\n        16749,\n        16749,\n        16749,\n        16749\n    ],\n    \"term\": [\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\"\n    ],\n    \"monthlySavings\": [\n        226.82,\n        226.82,\n        226.82,\n        226.82,\n        226.82,\n        226.82\n    ],\n    \"totalMonthsToSave\": [\n        67,\n        67,\n        67,\n        67,\n        67,\n        67\n    ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "IndiTotalExp_ABD_Spouse_getSaving",
			"item": [
				{
					"name": "IndiTotalExp_ABD_getSaving_Spouse",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var response = JSON.parse(responseBody);\r",
									"console.log(\"Spouse Retirement Annual Expenses of ABD:\", response.expenses);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA=="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"expenses\": {{expenses5}},\r\n  \r\n  \"initalSavings\": \"{{initalSavings}}\",\r\n  \"duration\": \"{{duration}}\",\r\n  \"ror\": \"{{ror}}\",\r\n  \"term\": \"{{term}}\",\r\n  \"levelOfProtection\": \"{{levelOfProtection}}\"\r\n}\r\n\r\n"
						},
						"url": {
							"raw": "{{server}}/monthly/getSavings",
							"host": [
								"{{server}}"
							],
							"path": [
								"monthly",
								"getSavings"
							]
						},
						"description": "Calculating annual expenses from the individual total expensesR3 spouse of totalABD. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "IndiTotalExp_ABD_getSaving_Spouse",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"expenses\": {{expenses5}},\r\n  \r\n  \"initalSavings\": \"{{initalSavings}}\",\r\n  \"duration\": \"{{duration}}\",\r\n  \"ror\": \"{{ror}}\",\r\n  \"term\": \"{{term}}\",\r\n  \"levelOfProtection\": \"{{levelOfProtection}}\"\r\n}\r\n\r\n"
								},
								"url": {
									"raw": "{{server}}/monthly/getSavings",
									"host": [
										"{{server}}"
									],
									"path": [
										"monthly",
										"getSavings"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 15:47:26 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"69f7e102-c842-4e6c-bed4-34c9117ff40c-4102\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"initalSavings\": 0,\n    \"duration\": 32,\n    \"ror\": 5.5,\n    \"levelOfProtection\": 100,\n    \"year\": [\n        2020,\n        2021,\n        2022,\n        2023,\n        2024\n    ],\n    \"expenses\": [\n        5388.91,\n        6510.64,\n        9940.89,\n        10148.58,\n        12262.68\n    ],\n    \"balances\": [\n        -2190.02,\n        -5501.77,\n        -12243.77,\n        -19193.46,\n        -28257.25\n    ],\n    \"yearlySavings\": [\n        3198.89,\n        3198.89,\n        3198.89,\n        3198.89,\n        3198.89\n    ],\n    \"totalSavings\": [\n        15994,\n        15994,\n        15994,\n        15994,\n        15994\n    ],\n    \"term\": [\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\"\n    ],\n    \"monthlySavings\": [\n        259.92,\n        259.92,\n        259.92,\n        259.92,\n        259.92\n    ],\n    \"totalMonthsToSave\": [\n        55,\n        55,\n        55,\n        55,\n        55\n    ]\n}"
						}
					]
				},
				{
					"name": "IndiTotalExp_ABCD_getSaving_Spouse",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var response = JSON.parse(responseBody);\r",
									"console.log(\"Spouse Retirement Annual Expenses of ABCD:\", response.expenses);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA=="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"expenses\": {{expenses6}},\r\n  \r\n  \"initalSavings\": \"{{initalSavings}}\",\r\n  \"duration\": \"{{duration}}\",\r\n  \"ror\": \"{{ror}}\",\r\n  \"term\": \"{{term}}\",\r\n  \"levelOfProtection\": \"{{levelOfProtection}}\"\r\n}\r\n\r\n"
						},
						"url": {
							"raw": "{{server}}/monthly/getSavings",
							"host": [
								"{{server}}"
							],
							"path": [
								"monthly",
								"getSavings"
							]
						},
						"description": "Calculating annual expenses from the individual total expensesR3 spouse of totalABCD. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "IndiTotalExp_ABCD_getSaving_Spouse",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"expenses\": {{expenses6}},\r\n  \r\n  \"initalSavings\": \"{{initalSavings}}\",\r\n  \"duration\": \"{{duration}}\",\r\n  \"ror\": \"{{ror}}\",\r\n  \"term\": \"{{term}}\",\r\n  \"levelOfProtection\": \"{{levelOfProtection}}\"\r\n}\r\n\r\n"
								},
								"url": {
									"raw": "{{server}}/monthly/getSavings",
									"host": [
										"{{server}}"
									],
									"path": [
										"monthly",
										"getSavings"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 15:47:33 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"4d27f321-f06e-4871-8549-1c7713eaaf4a-6903\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"initalSavings\": 0,\n    \"duration\": 32,\n    \"ror\": 5.5,\n    \"levelOfProtection\": 100,\n    \"year\": [\n        2020,\n        2021,\n        2022,\n        2023,\n        2024\n    ],\n    \"expenses\": [\n        5652.98,\n        6790.97,\n        10237.49,\n        10463.36,\n        12595.64\n    ],\n    \"balances\": [\n        -2346.47,\n        -5830.93,\n        -12761.91,\n        -19918.76,\n        -29207.89\n    ],\n    \"yearlySavings\": [\n        3306.51,\n        3306.51,\n        3306.51,\n        3306.51,\n        3306.51\n    ],\n    \"totalSavings\": [\n        16533,\n        16533,\n        16533,\n        16533,\n        16533\n    ],\n    \"term\": [\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\"\n    ],\n    \"monthlySavings\": [\n        268.67,\n        268.67,\n        268.67,\n        268.67,\n        268.67\n    ],\n    \"totalMonthsToSave\": [\n        55,\n        55,\n        55,\n        55,\n        55\n    ]\n}"
						}
					]
				},
				{
					"name": "IndiTotalExp_ABFD_getSaving_Spouse",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var response = JSON.parse(responseBody);\r",
									"console.log(\"Spouse Retirement Annual Expenses of ABFD:\", response.expenses);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA=="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"expenses\": {{expenses7}},\r\n  \r\n  \"initalSavings\": \"{{initalSavings}}\",\r\n  \"duration\": \"{{duration}}\",\r\n  \"ror\": \"{{ror}}\",\r\n  \"term\": \"{{term}}\",\r\n  \"levelOfProtection\": \"{{levelOfProtection}}\"\r\n}\r\n"
						},
						"url": {
							"raw": "{{server}}/monthly/getSavings",
							"host": [
								"{{server}}"
							],
							"path": [
								"monthly",
								"getSavings"
							]
						},
						"description": "Calculating annual expenses from the individual total expensesR3 spouse of totalABFD. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "IndiTotalExp_ABFD_getSaving_Spouse",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"expenses\": {{expenses7}},\r\n  \r\n  \"initalSavings\": \"{{initalSavings}}\",\r\n  \"duration\": \"{{duration}}\",\r\n  \"ror\": \"{{ror}}\",\r\n  \"term\": \"{{term}}\",\r\n  \"levelOfProtection\": \"{{levelOfProtection}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "{{server}}/monthly/getSavings",
									"host": [
										"{{server}}"
									],
									"path": [
										"monthly",
										"getSavings"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 15:47:44 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"1c4f61c5-9fa3-4b6a-b98d-eb3e52097785-5311\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"initalSavings\": 0,\n    \"duration\": 32,\n    \"ror\": 5.5,\n    \"levelOfProtection\": 100,\n    \"year\": [\n        2020,\n        2021,\n        2022,\n        2023,\n        2024\n    ],\n    \"expenses\": [\n        5150.79,\n        6333.63,\n        8545.58,\n        10113.3,\n        12306.2\n    ],\n    \"balances\": [\n        -2082.18,\n        -5347.2,\n        -10824.17,\n        -17868.86,\n        -27106.45\n    ],\n    \"yearlySavings\": [\n        3068.61,\n        3068.61,\n        3068.61,\n        3068.61,\n        3068.61\n    ],\n    \"totalSavings\": [\n        15343,\n        15343,\n        15343,\n        15343,\n        15343\n    ],\n    \"term\": [\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\"\n    ],\n    \"monthlySavings\": [\n        249.34,\n        249.34,\n        249.34,\n        249.34,\n        249.34\n    ],\n    \"totalMonthsToSave\": [\n        55,\n        55,\n        55,\n        55,\n        55\n    ]\n}"
						}
					]
				},
				{
					"name": "IndiTotalExp_ABGD_getSaving_Spouse",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var response = JSON.parse(responseBody);\r",
									"console.log(\"Spouse Retirement Annual Expenses of ABGD:\", response.expenses);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA=="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"expenses\": {{expenses8}},\r\n  \r\n  \"initalSavings\": \"{{initalSavings}}\",\r\n  \"duration\": \"{{duration}}\",\r\n  \"ror\": \"{{ror}}\",\r\n  \"term\": \"{{term}}\",\r\n  \"levelOfProtection\": \"{{levelOfProtection}}\"\r\n}\r\n\r\n"
						},
						"url": {
							"raw": "{{server}}/monthly/getSavings",
							"host": [
								"{{server}}"
							],
							"path": [
								"monthly",
								"getSavings"
							]
						},
						"description": "Calculating annual expenses from the individual total expensesR3 spouse of totalABGD. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "IndiTotalExp_ABGD_getSaving_Spouse",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"expenses\": {{expenses8}},\r\n  \r\n  \"initalSavings\": \"{{initalSavings}}\",\r\n  \"duration\": \"{{duration}}\",\r\n  \"ror\": \"{{ror}}\",\r\n  \"term\": \"{{term}}\",\r\n  \"levelOfProtection\": \"{{levelOfProtection}}\"\r\n}\r\n\r\n"
								},
								"url": {
									"raw": "{{server}}/monthly/getSavings",
									"host": [
										"{{server}}"
									],
									"path": [
										"monthly",
										"getSavings"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 15:47:53 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"497e3e92-6bd4-4bd4-81f2-184bc2d4215a-2951\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"initalSavings\": 0,\n    \"duration\": 32,\n    \"ror\": 5.5,\n    \"levelOfProtection\": 100,\n    \"year\": [\n        2020,\n        2021,\n        2022,\n        2023,\n        2024\n    ],\n    \"expenses\": [\n        4539.59,\n        5679.65,\n        7846.28,\n        9365.49,\n        11508.08\n    ],\n    \"balances\": [\n        -1724.74,\n        -4589.54,\n        -9620.97,\n        -16171.61,\n        -24864.84\n    ],\n    \"yearlySavings\": [\n        2814.85,\n        2814.85,\n        2814.85,\n        2814.85,\n        2814.85\n    ],\n    \"totalSavings\": [\n        14074,\n        14074,\n        14074,\n        14074,\n        14074\n    ],\n    \"term\": [\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\"\n    ],\n    \"monthlySavings\": [\n        228.72,\n        228.72,\n        228.72,\n        228.72,\n        228.72\n    ],\n    \"totalMonthsToSave\": [\n        55,\n        55,\n        55,\n        55,\n        55\n    ]\n}"
						}
					]
				},
				{
					"name": "IndiTotalExp_ABND_getSaving_Spouse",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var response = JSON.parse(responseBody);\r",
									"console.log(\"Spouse Retirement Annual Expenses of ABND:\", response.expenses);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA=="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"expenses\": {{expenses9}},\r\n  \r\n  \"initalSavings\": \"{{initalSavings}}\",\r\n  \"duration\": \"{{duration}}\",\r\n  \"ror\": \"{{ror}}\",\r\n  \"term\": \"{{term}}\",\r\n  \"levelOfProtection\": \"{{levelOfProtection}}\"\r\n}\r\n\r\n\r\n"
						},
						"url": {
							"raw": "{{server}}/monthly/getSavings",
							"host": [
								"{{server}}"
							],
							"path": [
								"monthly",
								"getSavings"
							]
						},
						"description": "Calculating annual expenses from the individual total expensesR3 spouse of totalABND. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "IndiTotalExp_ABND_getSaving_Spouse",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"expenses\": {{expenses9}},\r\n  \r\n  \"initalSavings\": \"{{initalSavings}}\",\r\n  \"duration\": \"{{duration}}\",\r\n  \"ror\": \"{{ror}}\",\r\n  \"term\": \"{{term}}\",\r\n  \"levelOfProtection\": \"{{levelOfProtection}}\"\r\n}\r\n\r\n\r\n"
								},
								"url": {
									"raw": "{{server}}/monthly/getSavings",
									"host": [
										"{{server}}"
									],
									"path": [
										"monthly",
										"getSavings"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 15:48:01 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"6d708f91-2855-4e12-88ed-c66bef75e49c-7892\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"initalSavings\": 0,\n    \"duration\": 32,\n    \"ror\": 5.5,\n    \"levelOfProtection\": 100,\n    \"year\": [\n        2020,\n        2021,\n        2022,\n        2023,\n        2024\n    ],\n    \"expenses\": [\n        4339.59,\n        5464.05,\n        7614.11,\n        9115.56,\n        11239.16\n    ],\n    \"balances\": [\n        -1609.08,\n        -4342.62,\n        -9226.22,\n        -15611.27,\n        -24119.92\n    ],\n    \"yearlySavings\": [\n        2730.51,\n        2730.51,\n        2730.51,\n        2730.51,\n        2730.51\n    ],\n    \"totalSavings\": [\n        13653,\n        13653,\n        13653,\n        13653,\n        13653\n    ],\n    \"term\": [\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\"\n    ],\n    \"monthlySavings\": [\n        221.86,\n        221.86,\n        221.86,\n        221.86,\n        221.86\n    ],\n    \"totalMonthsToSave\": [\n        55,\n        55,\n        55,\n        55,\n        55\n    ]\n}"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "LongTermCareR4_Primary_ExpPV",
			"item": [
				{
					"name": "LongTermCareR4_Primary",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"//LTCR4 futureAdultDayHealthCareExpenseList primary for individual",
									"var response = JSON.parse(responseBody); // storing the Json response in \"response\" variable",
									"var pv_expenses0 = \"[\"; //declaring a variable Pv_expenses0 and assigning the \"[\" to store the array values.",
									"var pv_expenses00 = \"[\";// for family ltc",
									"length1 = response.futureAdultDayHealthCareExpenseList.length;",
									"//finding length from futureAdultDayHealthCareExpenseList from response body and assigning to length1 variable.",
									"fromYear1 = response.futureAdultDayHealthCareExpenseList[0].year;",
									"//getting first year from the response body and storing in the fromYear1.",
									"toYear1 = response.futureAdultDayHealthCareExpenseList[length1 - 1].year;  //getting the last year value from the futureAdultDayHealthCareExpenseList array from the response body.",
									"for (var i = 0; i < length1; i++) //for loop executes a set of statement until the given condition is true, once the condition is false it will come out of the for loop. It starts with value 0 executes the statement by increments 1(ie., i++) until it is less than the value of length1.",
									" {",
									"  var year0 = response.futureAdultDayHealthCareExpenseList[i].year;  //getting year from the response body and storing in the year based on the i value.",
									"  var Adult = response.futureAdultDayHealthCareExpenseList[i].expense;  ",
									"  //getting values of futureAdultDayHealthCareExpenseList from the response body and storing in the Adult based on the i value.",
									"  var year_expense01 = '{\"year\": ' + year0 + ' , \"expense\": ' + Adult + \"}\"; //concatenating the year and Adult expense and storing in the year_expense01",
									"  var year_expense001 = '{\"year\": ' + year0 + ' , \"expense\": ' + Adult + \"}\"; // for family ltc",
									"  if (i < (length1 - 1)) // if this condition is true then it will execute the below statment.",
									"   {",
									"    year_expense01 += ','; //year_expense01 = year_expense01 + ',' after concatenating year and expense field assigning \",\" ",
									"     year_expense001 += ','; ",
									"  }",
									"  pv_expenses0 += year_expense01;  //variable pv_expenses0 = pv_expenses0 + year_expense01 is stored",
									"    pv_expenses00 += year_expense001;",
									"}",
									"pv_expenses0 += ']'; // closing with \"]\" after the above statment.",
									"//console.log(pv_expenses0);  ",
									"//Printing pv_expenses0 values in the console.",
									"pv_expenses00 += ']'; // closing with \"]\" after the above statment.",
									"//console.log(pv_expenses0); ",
									"",
									"pm.globals.set(\"expenses0\", pv_expenses0); // assigning all the pv_expenses0 values to the global variable expenses0 for PV expenses request.",
									"pm.globals.set(\"expenses00\", pv_expenses00); // for family ltc",
									"pm.globals.set(\"fromYear1\", fromYear1);",
									"pm.globals.set(\"toYear1\", toYear1);",
									"//setting global variables fromYear and toyear.",
									"//----------------------------------------------------------------",
									"",
									"//LTCR4 futureHomeCareExpenseList primary (same as above but here we have to take different vairables and different for loops because each fields have its own arrays and length in response body).",
									"var pv_expenses1 = \"[\"; ",
									"var pv_expenses11 = \"[\"; ",
									"var length2 = response.futureHomeCareExpenseList.length;",
									"",
									"fromYear2 = response.futureHomeCareExpenseList[0].year;",
									"",
									"toYear2 = response.futureHomeCareExpenseList[length2 - 1].year;",
									"",
									"for (var j = 0; j < length2; j++) ",
									" {",
									"  var year1 = response.futureHomeCareExpenseList[j].year; //",
									"",
									"  var Home = response.futureHomeCareExpenseList[j].expense;",
									"",
									"  var year_expense02 = '{\"year\": ' + year1 + ' , \"expense\": ' + Home + \"}\";",
									"  var year_expense002 = '{\"year\": ' + year1 + ' , \"expense\": ' + Home + \"}\";",
									"",
									"  if (j < (length2 - 1)) {",
									"    year_expense02 += ',';",
									"     year_expense002 += ',';",
									"  }",
									"  pv_expenses1 += year_expense02;",
									"  pv_expenses11 += year_expense002;",
									"}",
									"pv_expenses1 += ']';",
									"pv_expenses11 += ']';",
									"",
									"//console.log(pv_expenses1);",
									"pm.globals.set(\"expenses1\", pv_expenses1);",
									"pm.globals.set(\"expenses11\", pv_expenses11);",
									"",
									"pm.globals.set(\"fromYear2\", fromYear2);",
									"pm.globals.set(\"toYear2\", toYear2);",
									"",
									"//----------------------------------------------------------------",
									"//LTCR4 futureAssistedCareExpensesList primary (same as above but here we have to take different vairables and different for loops because each fields have its own arrays and length in response body).",
									"var pv_expenses2 = \"[\";",
									"var pv_expenses22 = \"[\";",
									"var length3 = response.futureAssistedCareExpensesList.length;",
									"fromYear3 = response.futureAssistedCareExpensesList[0].year;",
									"toYear3 = response.futureAssistedCareExpensesList[length3 - 1].year;",
									"for (var q = 0; q < length3; q++) {",
									"  var year2 = response.futureAssistedCareExpensesList[q].year;",
									"  var Assisted = response.futureAssistedCareExpensesList[q].expense;",
									"  var year_expense03 = '{\"year\": ' + year2 + ' , \"expense\": ' + Assisted + \"}\";",
									"  var year_expense003 = '{\"year\": ' + year2 + ' , \"expense\": ' + Assisted + \"}\";",
									"",
									"  if (q < (length3 - 1)) {",
									"    year_expense03 += ',';",
									"    year_expense003 += ',';",
									"  }",
									"  pv_expenses2 += year_expense03;",
									"  pv_expenses22 += year_expense003;",
									"}",
									"pv_expenses2 += ']';",
									"pv_expenses22 += ']';",
									"//console.log(pv_expenses2);",
									"pm.globals.set(\"expenses2\", pv_expenses2);",
									"pm.globals.set(\"expenses22\", pv_expenses22);",
									"pm.globals.set(\"fromYear3\", fromYear3);",
									"pm.globals.set(\"toYear3\", toYear3);",
									"",
									"//----------------------------------------------------------------",
									"//LTCR4 futureNursingCareExpensesList primary (same as above but here we have to take different vairables and different for loops because each fields have its own arrays and length in response body).",
									"var pv_expenses3 = \"[\";",
									"var pv_expenses33 = \"[\";",
									"var length4 = response.futureNursingCareExpensesList.length;",
									"fromYear4 = response.futureNursingCareExpensesList[0].year;",
									"toYear4 = response.futureNursingCareExpensesList[length4 - 1].year;",
									"for (var p = 0; p < length4; p++) {",
									"  var year3 = response.futureNursingCareExpensesList[p].year;",
									"  var Nursing = response.futureNursingCareExpensesList[p].expense;",
									"  var year_expense04 = '{\"year\": ' + year3 + ' , \"expense\": ' + Nursing + \"}\";",
									"   var year_expense004 = '{\"year\": ' + year3 + ' , \"expense\": ' + Nursing + \"}\";",
									"  if (p < (length4 - 1)) {",
									"    year_expense04 += ',';",
									"     year_expense004 += ',';",
									"  }",
									"  pv_expenses3 += year_expense04;",
									"  pv_expenses33 += year_expense004;",
									"}",
									"pv_expenses3 += ']';",
									"pv_expenses33 += ']';",
									"//console.log(pv_expenses3);",
									"pm.globals.set(\"expenses3\", pv_expenses3);",
									"pm.globals.set(\"expenses33\", pv_expenses33);",
									"pm.globals.set(\"fromYear4\", fromYear4);",
									"pm.globals.set(\"toYear4\", toYear4);",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "FinancialPlannerP@ssw0rd",
									"type": "string"
								},
								{
									"key": "username",
									"value": "FinancialPlannerServiceUser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Basic QWR2aWNlbnRGUFNlcnZpY2VVc2VyOkFkdmljZW50UEBzNXcwcmQ="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{   \n\n\"transactionTypeFlag\":\"{{transactionTypeFlag}}\",\n\"age\": \"{{age}}\",\n\"healthProfile\": {{primaryHealthGrade}},\n\"gender\": \"{{gender}}\",\n\"state\":\"{{primaryStateName}}\",\n\"zipcode\":\"{{primaryZipcode}}\",\n\"lifeExpectancy\": \"{{primaryLifeExpectancy}}\",\n\"pvAsOfYear\": {{pvAsOnYear1}},\n\"currentLifeStyleExpenses\": \"{{currentLifeStyleExpenses}}\",\n\n\"numberOfAdultDayHealthCareLTCYears\":\"{{numberOfAdultDayHealthCareLTCYears}}\",\n\"numberOfHomeCareLTCYears\": {{numberOfHomeCareLTCYears}},\n\"numberOfAssistedCareLTCYears\": \"{{numberOfAssistedCareLTCYears}}\",\n\"numberOfNursingCareLTCYears\":\"{{numberOfNursingCareLTCYears}}\"\n}"
						},
						"url": {
							"raw": "{{server}}/longTermCareR4",
							"host": [
								"{{server}}"
							],
							"path": [
								"longTermCareR4"
							]
						},
						"description": "Long Term Care R4 API for Primary calculating Present Value expenses of futureAdultDayHealthCareExpenseList, futureHomeCareExpenseList, futureHomeCareExpenseList, futureAssistedCareExpensesList & futureNursingCareExpensesList in the tests. They are global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "LongTermCareR4_Primary",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic QWR2aWNlbnRGUFNlcnZpY2VVc2VyOkFkdmljZW50UEBzNXcwcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{   \n\n\"transactionTypeFlag\":\"{{transactionTypeFlag}}\",\n\"age\": \"{{age}}\",\n\"healthProfile\": {{healthGrade}},\n\"gender\": \"{{gender}}\",\n\"state\":\"{{state}}\",\n\"zipcode\":\"{{zipcode}}\",\n\"lifeExpectancy\": \"{{lifeExpectancy}}\",\n\"pvAsOfYear\": {{pvAsOnYear1}},\n\"currentLifeStyleExpenses\": \"{{currentLifeStyleExpenses}}\",\n\n\"numberOfAdultDayHealthCareLTCYears\":\"{{numberOfAdultDayHealthCareLTCYears}}\",\n\"numberOfHomeCareLTCYears\": {{numberOfHomeCareLTCYears}},\n\"numberOfAssistedCareLTCYears\": \"{{numberOfAssistedCareLTCYears}}\",\n\"numberOfNursingCareLTCYears\":\"{{numberOfNursingCareLTCYears}}\"\n}"
								},
								"url": {
									"raw": "{{server}}/longTermCareR4",
									"host": [
										"{{server}}"
									],
									"path": [
										"longTermCareR4"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 15:53:44 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"48773dd6-312f-4198-9d6a-5e7ebf52573a-8523\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"transactionTypeFlag\": false,\n    \"age\": 55,\n    \"healthProfile\": 2,\n    \"gender\": \"M\",\n    \"state\": \"Colorado\",\n    \"region\": \"Douglas\",\n    \"zipcode\": 80124,\n    \"countyCode\": 8035,\n    \"lifeExpenctancy\": 70,\n    \"tobaccoUsage\": false,\n    \"alzheimersFlag\": false,\n    \"heartStorkeFlag\": false,\n    \"currentLifeStyleExpenses\": 1,\n    \"numberOfAdultDayHealthCareLTCYears\": 2,\n    \"numberOfHomeCareLTCYears\": 2,\n    \"numberOfAssistedCareLTCYears\": 1,\n    \"numberOfNursingCareLTCYears\": 1,\n    \"startingYearOfAdultDayHealthCare\": 2029,\n    \"startingYearOfHomeCare\": 2031,\n    \"startingYearOfAssistedCare\": 2033,\n    \"startingYearOfNursingCare\": 2034,\n    \"adultDayHealthCare\": 0,\n    \"presentValueAdultDayHealthCare\": 0,\n    \"homeCare\": 0,\n    \"presentValueHomeCare\": 0,\n    \"assistedCare\": 0,\n    \"presentValueAssistedCare\": 0,\n    \"nursingCare\": 0,\n    \"presentValueNursingCare\": 0,\n    \"futureAdultDayHealthCareExpenseList\": [\n        {\n            \"year\": 2029,\n            \"expense\": 27603.78\n        },\n        {\n            \"year\": 2030,\n            \"expense\": 28431.89\n        }\n    ],\n    \"expectedAdultDayHealthCare\": 56035.68,\n    \"presentValueExpectedAdultDayHealthCare\": 32214.86,\n    \"futureHomeCareExpenseList\": [\n        {\n            \"year\": 2031,\n            \"expense\": 79759.56\n        },\n        {\n            \"year\": 2032,\n            \"expense\": 82152.34\n        }\n    ],\n    \"expectedHomeCare\": 161911.9,\n    \"presentValueExpectedHomeCare\": 82843.54,\n    \"futureAssistedCareExpensesList\": [\n        {\n            \"year\": 2033,\n            \"expense\": 72604.31\n        }\n    ],\n    \"expectedAssistedCare\": 72604.31,\n    \"presentValueExpectedAssistedCare\": 34039.73,\n    \"futureNursingCareExpensesList\": [\n        {\n            \"year\": 2034,\n            \"expense\": 147851.11\n        }\n    ],\n    \"expectedNursingCare\": 147851.11,\n    \"presentValueExpectedNursingCare\": 65394.69,\n    \"presentValueYear\": 2020\n}"
						}
					]
				},
				{
					"name": "LTC_FutureAdultDayHealthCare_Primary_expPresentValue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var response = JSON.parse(responseBody);",
									"console.log(\"Primary Retirement Year:\", response.fromYear);",
									"",
									"console.log(\"Primary Life Expectancy year:\", response.toYear);",
									"",
									"console.log(\"Present Value year:\", response.pvList[0].year);",
									"",
									"console.log(\"TotalExpense of Adult Day Care for Primary (Future Dollar):\", response.pvList[0].totalExpense);",
									"",
									"console.log(\"Present Value of Adult Day Care for Primary:\", response.pvList[0].presentValue);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "FinancialPlannerP@ssw0rd",
									"type": "string"
								},
								{
									"key": "username",
									"value": "FinancialPlannerServiceUser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"fromYear\": {{fromYear1}},\n  \"toYear\": {{toYear1}},\n  \"expenses\":{{expenses0}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
						},
						"url": {
							"raw": "{{server}}/expensesPresentValue",
							"host": [
								"{{server}}"
							],
							"path": [
								"expensesPresentValue"
							]
						},
						"description": "Calculating FutureAdultDayHealthCare present Value for the year 2020 from LongTermCare R4-Primary. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "LTC_FutureAdultDayHealthCare_Primary_expPresentValue",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"fromYear\": {{fromYear1}},\n  \"toYear\": {{toYear1}},\n  \"expenses\":{{expenses0}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
								},
								"url": {
									"raw": "{{server}}/expensesPresentValue",
									"host": [
										"{{server}}"
									],
									"path": [
										"expensesPresentValue"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 15:53:52 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"34028f1d-5f1c-47b3-90e6-4ab8c83ce0bc-7961\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"fromYear\": 2029,\n    \"toYear\": 2030,\n    \"expenses\": [\n        {\n            \"year\": 2029,\n            \"expense\": 13801.89\n        },\n        {\n            \"year\": 2030,\n            \"expense\": 14215.945\n        }\n    ],\n    \"presentValueYears\": {\n        \"pvAsOnYear1\": 2020,\n        \"pvAsOnYear2\": 2019,\n        \"pvAsOnYear3\": 2018\n    },\n    \"discount\": 6,\n    \"rateOfReturns\": {\n        \"rateOfReturn1\": 2,\n        \"rateOfReturn2\": 4,\n        \"rateOfReturn3\": 6,\n        \"rateOfReturn4\": 8\n    },\n    \"pvList\": [\n        {\n            \"year\": 2020,\n            \"totalExpense\": 28017.84,\n            \"presentValue\": 16107.43,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 16107.43,\n            \"savingPerMonthForRateOfReturn2\": 16107.43,\n            \"savingPerMonthForRateOfReturn3\": 16107.43,\n            \"savingPerMonthForRateOfReturn4\": 16107.43\n        },\n        {\n            \"year\": 2019,\n            \"totalExpense\": 28017.84,\n            \"presentValue\": 15195.69,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 15195.69,\n            \"savingPerMonthForRateOfReturn2\": 15195.69,\n            \"savingPerMonthForRateOfReturn3\": 15195.69,\n            \"savingPerMonthForRateOfReturn4\": 15195.69\n        },\n        {\n            \"year\": 2018,\n            \"totalExpense\": 28017.84,\n            \"presentValue\": 14335.55,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 14335.55,\n            \"savingPerMonthForRateOfReturn2\": 14335.55,\n            \"savingPerMonthForRateOfReturn3\": 14335.55,\n            \"savingPerMonthForRateOfReturn4\": 14335.55\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "LTC_FutureHomeCare_Primary_expPresentValue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var response = JSON.parse(responseBody);",
									"console.log(\"Primary Retirement Year:\", response.fromYear);",
									"",
									"console.log(\"Primary Life Expectancy year:\", response.toYear);",
									"",
									"console.log(\"Present Value year:\", response.pvList[0].year);",
									"",
									"console.log(\"TotalExpense of Home Care for Primary (Future Dollar):\", response.pvList[0].totalExpense);",
									"",
									"console.log(\"Present Value of Home Day Care for Primary:\", response.pvList[0].presentValue);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "FinancialPlannerP@ssw0rd",
									"type": "string"
								},
								{
									"key": "username",
									"value": "FinancialPlannerServiceUser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"fromYear\": {{fromYear2}},\n  \"toYear\": {{toYear2}},\n  \"expenses\":{{expenses1}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
						},
						"url": {
							"raw": "{{server}}/expensesPresentValue",
							"host": [
								"{{server}}"
							],
							"path": [
								"expensesPresentValue"
							]
						},
						"description": "Calculating FutureHomeCare present Value for the year 2020 from LongTermCare R4-Primary. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "LTC_FutureHomeCare_Primary_expPresentValue",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"fromYear\": {{fromYear2}},\n  \"toYear\": {{toYear2}},\n  \"expenses\":{{expenses1}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
								},
								"url": {
									"raw": "{{server}}/expensesPresentValue",
									"host": [
										"{{server}}"
									],
									"path": [
										"expensesPresentValue"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 15:54:00 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"c4f2b34a-8a57-4a05-bb69-e4bf4a67dec4-3988\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"fromYear\": 2031,\n    \"toYear\": 2032,\n    \"expenses\": [\n        {\n            \"year\": 2031,\n            \"expense\": 39879.78\n        },\n        {\n            \"year\": 2032,\n            \"expense\": 41076.17\n        }\n    ],\n    \"presentValueYears\": {\n        \"pvAsOnYear1\": 2020,\n        \"pvAsOnYear2\": 2019,\n        \"pvAsOnYear3\": 2018\n    },\n    \"discount\": 6,\n    \"rateOfReturns\": {\n        \"rateOfReturn1\": 2,\n        \"rateOfReturn2\": 4,\n        \"rateOfReturn3\": 6,\n        \"rateOfReturn4\": 8\n    },\n    \"pvList\": [\n        {\n            \"year\": 2020,\n            \"totalExpense\": 80955.95,\n            \"presentValue\": 41421.77,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 41421.77,\n            \"savingPerMonthForRateOfReturn2\": 41421.77,\n            \"savingPerMonthForRateOfReturn3\": 41421.77,\n            \"savingPerMonthForRateOfReturn4\": 41421.77\n        },\n        {\n            \"year\": 2019,\n            \"totalExpense\": 80955.95,\n            \"presentValue\": 39077.14,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 39077.14,\n            \"savingPerMonthForRateOfReturn2\": 39077.14,\n            \"savingPerMonthForRateOfReturn3\": 39077.14,\n            \"savingPerMonthForRateOfReturn4\": 39077.14\n        },\n        {\n            \"year\": 2018,\n            \"totalExpense\": 80955.95,\n            \"presentValue\": 36865.23,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 36865.23,\n            \"savingPerMonthForRateOfReturn2\": 36865.23,\n            \"savingPerMonthForRateOfReturn3\": 36865.23,\n            \"savingPerMonthForRateOfReturn4\": 36865.23\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "LTC_FutureAssistedCare_Primary_expPresentValue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var response = JSON.parse(responseBody);",
									"console.log(\"Primary Retirement Year:\", response.fromYear);",
									"",
									"console.log(\"Primary Life Expectancy year:\", response.toYear);",
									"",
									"console.log(\"Present Value year:\", response.pvList[0].year);",
									"",
									"console.log(\"TotalExpense of Assisted Care for Primary (Future Dollar):\", response.pvList[0].totalExpense);",
									"",
									"console.log(\"Present Value of Assisted Day Care for Primary:\", response.pvList[0].presentValue);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "FinancialPlannerP@ssw0rd",
									"type": "string"
								},
								{
									"key": "username",
									"value": "FinancialPlannerServiceUser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"fromYear\": {{fromYear3}},\n  \"toYear\": {{toYear3}},\n  \"expenses\":{{expenses2}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
						},
						"url": {
							"raw": "{{server}}/expensesPresentValue",
							"host": [
								"{{server}}"
							],
							"path": [
								"expensesPresentValue"
							]
						},
						"description": "Calculating FutureAssistedCare present Value for the year 2020 from LongTermCare R4 -Primary. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "LTC_FutureAssistedCare_Primary_expPresentValue",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"fromYear\": {{fromYear3}},\n  \"toYear\": {{toYear3}},\n  \"expenses\":{{expenses2}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
								},
								"url": {
									"raw": "{{server}}/expensesPresentValue",
									"host": [
										"{{server}}"
									],
									"path": [
										"expensesPresentValue"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 15:54:08 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"90a33fd0-ce37-446d-b8b7-e9e582ee1219-7270\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"fromYear\": 2033,\n    \"toYear\": 2033,\n    \"expenses\": [\n        {\n            \"year\": 2033,\n            \"expense\": 36302.155\n        }\n    ],\n    \"presentValueYears\": {\n        \"pvAsOnYear1\": 2020,\n        \"pvAsOnYear2\": 2019,\n        \"pvAsOnYear3\": 2018\n    },\n    \"discount\": 6,\n    \"rateOfReturns\": {\n        \"rateOfReturn1\": 2,\n        \"rateOfReturn2\": 4,\n        \"rateOfReturn3\": 6,\n        \"rateOfReturn4\": 8\n    },\n    \"pvList\": [\n        {\n            \"year\": 2020,\n            \"totalExpense\": 36302.16,\n            \"presentValue\": 17019.87,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 17019.87,\n            \"savingPerMonthForRateOfReturn2\": 17019.87,\n            \"savingPerMonthForRateOfReturn3\": 17019.87,\n            \"savingPerMonthForRateOfReturn4\": 17019.87\n        },\n        {\n            \"year\": 2019,\n            \"totalExpense\": 36302.16,\n            \"presentValue\": 16056.48,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 16056.48,\n            \"savingPerMonthForRateOfReturn2\": 16056.48,\n            \"savingPerMonthForRateOfReturn3\": 16056.48,\n            \"savingPerMonthForRateOfReturn4\": 16056.48\n        },\n        {\n            \"year\": 2018,\n            \"totalExpense\": 36302.16,\n            \"presentValue\": 15147.62,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 15147.62,\n            \"savingPerMonthForRateOfReturn2\": 15147.62,\n            \"savingPerMonthForRateOfReturn3\": 15147.62,\n            \"savingPerMonthForRateOfReturn4\": 15147.62\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "LTC_FutureNursingCare_Primary_expPresentValue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var response = JSON.parse(responseBody);",
									"console.log(\"Primary Retirement Year:\", response.fromYear);",
									"",
									"console.log(\"Primary Life Expectancy year:\", response.toYear);",
									"",
									"console.log(\"Present Value year:\", response.pvList[0].year);",
									"",
									"console.log(\"TotalExpense of Nursing Care for Primary (Future Dollar):\", response.pvList[0].totalExpense);",
									"",
									"console.log(\"Present Value of Nursing Day Care for Primary:\", response.pvList[0].presentValue);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "FinancialPlannerP@ssw0rd",
									"type": "string"
								},
								{
									"key": "username",
									"value": "FinancialPlannerServiceUser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"fromYear\": {{fromYear4}},\n  \"toYear\": {{toYear4}},\n  \"expenses\":{{expenses3}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
						},
						"url": {
							"raw": "{{server}}/expensesPresentValue",
							"host": [
								"{{server}}"
							],
							"path": [
								"expensesPresentValue"
							]
						},
						"description": "Calculating FutureNursingCare present Value for the year 2020 from LongTermCare R4-Primary. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "LTC_FutureNursingCare_Primary_expPresentValue",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"fromYear\": {{fromYear4}},\n  \"toYear\": {{toYear4}},\n  \"expenses\":{{expenses3}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
								},
								"url": {
									"raw": "{{server}}/expensesPresentValue",
									"host": [
										"{{server}}"
									],
									"path": [
										"expensesPresentValue"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 15:54:17 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"e1a9fe59-1010-42ea-bf8a-985a8b8658bb-6550\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"fromYear\": 2034,\n    \"toYear\": 2034,\n    \"expenses\": [\n        {\n            \"year\": 2034,\n            \"expense\": 73925.555\n        }\n    ],\n    \"presentValueYears\": {\n        \"pvAsOnYear1\": 2020,\n        \"pvAsOnYear2\": 2019,\n        \"pvAsOnYear3\": 2018\n    },\n    \"discount\": 6,\n    \"rateOfReturns\": {\n        \"rateOfReturn1\": 2,\n        \"rateOfReturn2\": 4,\n        \"rateOfReturn3\": 6,\n        \"rateOfReturn4\": 8\n    },\n    \"pvList\": [\n        {\n            \"year\": 2020,\n            \"totalExpense\": 73925.55,\n            \"presentValue\": 32697.34,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 32697.34,\n            \"savingPerMonthForRateOfReturn2\": 32697.34,\n            \"savingPerMonthForRateOfReturn3\": 32697.34,\n            \"savingPerMonthForRateOfReturn4\": 32697.34\n        },\n        {\n            \"year\": 2019,\n            \"totalExpense\": 73925.55,\n            \"presentValue\": 30846.55,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 30846.55,\n            \"savingPerMonthForRateOfReturn2\": 30846.55,\n            \"savingPerMonthForRateOfReturn3\": 30846.55,\n            \"savingPerMonthForRateOfReturn4\": 30846.55\n        },\n        {\n            \"year\": 2018,\n            \"totalExpense\": 73925.55,\n            \"presentValue\": 29100.52,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 29100.52,\n            \"savingPerMonthForRateOfReturn2\": 29100.52,\n            \"savingPerMonthForRateOfReturn3\": 29100.52,\n            \"savingPerMonthForRateOfReturn4\": 29100.52\n        }\n    ]\n}"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "LongTermCareR4_Spouse_ExpPV",
			"item": [
				{
					"name": "LTC_FutureAdultDayHealthCare_Spouse_expPresentValue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var response = JSON.parse(responseBody);",
									"console.log(\"Spouse Retirement Year:\", response.fromYear);",
									"",
									"console.log(\"Spouse Life Expectancy year:\", response.toYear);",
									"",
									"console.log(\"Present Value year:\", response.pvList[0].year);",
									"",
									"console.log(\"TotalExpense of Adult Day Care for Spouse (Future Dollar):\", response.pvList[0].totalExpense);",
									"",
									"console.log(\"Present Value of Adult Day Care for Spouse:\", response.pvList[0].presentValue);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "FinancialPlannerP@ssw0rd",
									"type": "string"
								},
								{
									"key": "username",
									"value": "FinancialPlannerServiceUser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"fromYear\": {{fromYear1}},\n  \"toYear\": {{toYear1}},\n  \"expenses\":{{expenses0}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
						},
						"url": {
							"raw": "{{server}}/expensesPresentValue",
							"host": [
								"{{server}}"
							],
							"path": [
								"expensesPresentValue"
							]
						},
						"description": "Calculating FutureAdultDayHealthCare present Value for the year 2020 from LongTermCare R4-Spouse. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "LTC_FutureAdultDayHealthCare_Spouse_expPresentValue",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"fromYear\": {{fromYear1}},\n  \"toYear\": {{toYear1}},\n  \"expenses\":{{expenses0}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
								},
								"url": {
									"raw": "{{server}}/expensesPresentValue",
									"host": [
										"{{server}}"
									],
									"path": [
										"expensesPresentValue"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 15:54:36 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"d3877775-15a7-4706-a485-8044d1fa8abc-3018\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"fromYear\": 2029,\n    \"toYear\": 2030,\n    \"expenses\": [\n        {\n            \"year\": 2029,\n            \"expense\": 13801.89\n        },\n        {\n            \"year\": 2030,\n            \"expense\": 14215.945\n        }\n    ],\n    \"presentValueYears\": {\n        \"pvAsOnYear1\": 2020,\n        \"pvAsOnYear2\": 2019,\n        \"pvAsOnYear3\": 2018\n    },\n    \"discount\": 6,\n    \"rateOfReturns\": {\n        \"rateOfReturn1\": 2,\n        \"rateOfReturn2\": 4,\n        \"rateOfReturn3\": 6,\n        \"rateOfReturn4\": 8\n    },\n    \"pvList\": [\n        {\n            \"year\": 2020,\n            \"totalExpense\": 28017.84,\n            \"presentValue\": 16107.43,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 16107.43,\n            \"savingPerMonthForRateOfReturn2\": 16107.43,\n            \"savingPerMonthForRateOfReturn3\": 16107.43,\n            \"savingPerMonthForRateOfReturn4\": 16107.43\n        },\n        {\n            \"year\": 2019,\n            \"totalExpense\": 28017.84,\n            \"presentValue\": 15195.69,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 15195.69,\n            \"savingPerMonthForRateOfReturn2\": 15195.69,\n            \"savingPerMonthForRateOfReturn3\": 15195.69,\n            \"savingPerMonthForRateOfReturn4\": 15195.69\n        },\n        {\n            \"year\": 2018,\n            \"totalExpense\": 28017.84,\n            \"presentValue\": 14335.55,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 14335.55,\n            \"savingPerMonthForRateOfReturn2\": 14335.55,\n            \"savingPerMonthForRateOfReturn3\": 14335.55,\n            \"savingPerMonthForRateOfReturn4\": 14335.55\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "LTC_FutureHomeCare_Spouse_expPresentValue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var response = JSON.parse(responseBody);",
									"console.log(\"Spouse Retirement Year:\", response.fromYear);",
									"",
									"console.log(\"Spouse Life Expectancy year:\", response.toYear);",
									"",
									"console.log(\"Spouse Value year:\", response.pvList[0].year);",
									"",
									"console.log(\"TotalExpense of Home Care for Spouse (Future Dollar):\", response.pvList[0].totalExpense);",
									"",
									"console.log(\"Present Value of Home Day Care for Spouse:\", response.pvList[0].presentValue);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "FinancialPlannerP@ssw0rd",
									"type": "string"
								},
								{
									"key": "username",
									"value": "FinancialPlannerServiceUser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"fromYear\": {{fromYear2}},\n  \"toYear\": {{toYear2}},\n  \"expenses\":{{expenses1}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
						},
						"url": {
							"raw": "{{server}}/expensesPresentValue",
							"host": [
								"{{server}}"
							],
							"path": [
								"expensesPresentValue"
							]
						},
						"description": "Calculating FutureHomeCare present Value for the year 2020 from LongTermCare R4-Spouse. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "LTC_FutureHomeCare_Spouse_expPresentValue",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"fromYear\": {{fromYear2}},\n  \"toYear\": {{toYear2}},\n  \"expenses\":{{expenses1}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
								},
								"url": {
									"raw": "{{server}}/expensesPresentValue",
									"host": [
										"{{server}}"
									],
									"path": [
										"expensesPresentValue"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 15:54:44 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"e2e98cfe-0fd9-4ac2-9a4f-a0364395f58a-2332\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"fromYear\": 2031,\n    \"toYear\": 2032,\n    \"expenses\": [\n        {\n            \"year\": 2031,\n            \"expense\": 39879.78\n        },\n        {\n            \"year\": 2032,\n            \"expense\": 41076.17\n        }\n    ],\n    \"presentValueYears\": {\n        \"pvAsOnYear1\": 2020,\n        \"pvAsOnYear2\": 2019,\n        \"pvAsOnYear3\": 2018\n    },\n    \"discount\": 6,\n    \"rateOfReturns\": {\n        \"rateOfReturn1\": 2,\n        \"rateOfReturn2\": 4,\n        \"rateOfReturn3\": 6,\n        \"rateOfReturn4\": 8\n    },\n    \"pvList\": [\n        {\n            \"year\": 2020,\n            \"totalExpense\": 80955.95,\n            \"presentValue\": 41421.77,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 41421.77,\n            \"savingPerMonthForRateOfReturn2\": 41421.77,\n            \"savingPerMonthForRateOfReturn3\": 41421.77,\n            \"savingPerMonthForRateOfReturn4\": 41421.77\n        },\n        {\n            \"year\": 2019,\n            \"totalExpense\": 80955.95,\n            \"presentValue\": 39077.14,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 39077.14,\n            \"savingPerMonthForRateOfReturn2\": 39077.14,\n            \"savingPerMonthForRateOfReturn3\": 39077.14,\n            \"savingPerMonthForRateOfReturn4\": 39077.14\n        },\n        {\n            \"year\": 2018,\n            \"totalExpense\": 80955.95,\n            \"presentValue\": 36865.23,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 36865.23,\n            \"savingPerMonthForRateOfReturn2\": 36865.23,\n            \"savingPerMonthForRateOfReturn3\": 36865.23,\n            \"savingPerMonthForRateOfReturn4\": 36865.23\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "LTC_futureAssistedCare_Spouse_expPresentValue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var response = JSON.parse(responseBody);",
									"console.log(\"Spouse Retirement Year:\", response.fromYear);",
									"",
									"console.log(\"Spouse Life Expectancy year:\", response.toYear);",
									"",
									"console.log(\"Present Value year:\", response.pvList[0].year);",
									"",
									"console.log(\"TotalExpense of Assisted Care for Spouse (Future Dollar):\", response.pvList[0].totalExpense);",
									"",
									"console.log(\"Present Value of Assisted Day Care for Spouse:\", response.pvList[0].presentValue);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "FinancialPlannerP@ssw0rd",
									"type": "string"
								},
								{
									"key": "username",
									"value": "FinancialPlannerServiceUser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"fromYear\": {{fromYear3}},\n  \"toYear\": {{toYear3}},\n  \"expenses\":{{expenses2}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
						},
						"url": {
							"raw": "{{server}}/expensesPresentValue",
							"host": [
								"{{server}}"
							],
							"path": [
								"expensesPresentValue"
							]
						},
						"description": "Calculating FutureAssistedCare present Value for the year 2020 from LongTermCare R4 -Spouse. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "LTC_futureAssistedCare_Spouse_expPresentValue",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"fromYear\": {{fromYear3}},\n  \"toYear\": {{toYear3}},\n  \"expenses\":{{expenses2}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
								},
								"url": {
									"raw": "{{server}}/expensesPresentValue",
									"host": [
										"{{server}}"
									],
									"path": [
										"expensesPresentValue"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 15:54:49 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"b41b762e-ec5f-4281-b321-768ee5f31c5c-4722\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"fromYear\": 2033,\n    \"toYear\": 2033,\n    \"expenses\": [\n        {\n            \"year\": 2033,\n            \"expense\": 36302.155\n        }\n    ],\n    \"presentValueYears\": {\n        \"pvAsOnYear1\": 2020,\n        \"pvAsOnYear2\": 2019,\n        \"pvAsOnYear3\": 2018\n    },\n    \"discount\": 6,\n    \"rateOfReturns\": {\n        \"rateOfReturn1\": 2,\n        \"rateOfReturn2\": 4,\n        \"rateOfReturn3\": 6,\n        \"rateOfReturn4\": 8\n    },\n    \"pvList\": [\n        {\n            \"year\": 2020,\n            \"totalExpense\": 36302.16,\n            \"presentValue\": 17019.87,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 17019.87,\n            \"savingPerMonthForRateOfReturn2\": 17019.87,\n            \"savingPerMonthForRateOfReturn3\": 17019.87,\n            \"savingPerMonthForRateOfReturn4\": 17019.87\n        },\n        {\n            \"year\": 2019,\n            \"totalExpense\": 36302.16,\n            \"presentValue\": 16056.48,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 16056.48,\n            \"savingPerMonthForRateOfReturn2\": 16056.48,\n            \"savingPerMonthForRateOfReturn3\": 16056.48,\n            \"savingPerMonthForRateOfReturn4\": 16056.48\n        },\n        {\n            \"year\": 2018,\n            \"totalExpense\": 36302.16,\n            \"presentValue\": 15147.62,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 15147.62,\n            \"savingPerMonthForRateOfReturn2\": 15147.62,\n            \"savingPerMonthForRateOfReturn3\": 15147.62,\n            \"savingPerMonthForRateOfReturn4\": 15147.62\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "LTC_FutureNursingCare_Spouse_expPresentValue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var response = JSON.parse(responseBody);",
									"console.log(\"Spouse Retirement Year:\", response.fromYear);",
									"",
									"console.log(\"Spouse Life Expectancy year:\", response.toYear);",
									"",
									"console.log(\"Present Value year:\", response.pvList[0].year);",
									"",
									"console.log(\"TotalExpense of Nursing Care for Spouse (Future Dollar):\", response.pvList[0].totalExpense);",
									"",
									"console.log(\"Present Value of Nursing Care for Spouse:\", response.pvList[0].presentValue);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "FinancialPlannerP@ssw0rd",
									"type": "string"
								},
								{
									"key": "username",
									"value": "FinancialPlannerServiceUser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"fromYear\": {{fromYear4}},\n  \"toYear\": {{toYear4}},\n  \"expenses\":{{expenses3}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
						},
						"url": {
							"raw": "{{server}}/expensesPresentValue",
							"host": [
								"{{server}}"
							],
							"path": [
								"expensesPresentValue"
							]
						},
						"description": "Calculating FutureNursingCare present Value for the year 2020 from LongTermCare R4-Spouse. They take from the global variables to be set in pre-request script. And releasing all the global variables."
					},
					"response": [
						{
							"name": "LTC_FutureNursingCare_Spouse_expPresentValue",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"fromYear\": {{fromYear4}},\n  \"toYear\": {{toYear4}},\n  \"expenses\":{{expenses3}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
								},
								"url": {
									"raw": "{{server}}/expensesPresentValue",
									"host": [
										"{{server}}"
									],
									"path": [
										"expensesPresentValue"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 15:55:00 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"b3401f82-8f62-4366-962b-4b1272eca5c4-2165\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"fromYear\": 2034,\n    \"toYear\": 2034,\n    \"expenses\": [\n        {\n            \"year\": 2034,\n            \"expense\": 73925.555\n        }\n    ],\n    \"presentValueYears\": {\n        \"pvAsOnYear1\": 2020,\n        \"pvAsOnYear2\": 2019,\n        \"pvAsOnYear3\": 2018\n    },\n    \"discount\": 6,\n    \"rateOfReturns\": {\n        \"rateOfReturn1\": 2,\n        \"rateOfReturn2\": 4,\n        \"rateOfReturn3\": 6,\n        \"rateOfReturn4\": 8\n    },\n    \"pvList\": [\n        {\n            \"year\": 2020,\n            \"totalExpense\": 73925.55,\n            \"presentValue\": 32697.34,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 32697.34,\n            \"savingPerMonthForRateOfReturn2\": 32697.34,\n            \"savingPerMonthForRateOfReturn3\": 32697.34,\n            \"savingPerMonthForRateOfReturn4\": 32697.34\n        },\n        {\n            \"year\": 2019,\n            \"totalExpense\": 73925.55,\n            \"presentValue\": 30846.55,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 30846.55,\n            \"savingPerMonthForRateOfReturn2\": 30846.55,\n            \"savingPerMonthForRateOfReturn3\": 30846.55,\n            \"savingPerMonthForRateOfReturn4\": 30846.55\n        },\n        {\n            \"year\": 2018,\n            \"totalExpense\": 73925.55,\n            \"presentValue\": 29100.52,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 29100.52,\n            \"savingPerMonthForRateOfReturn2\": 29100.52,\n            \"savingPerMonthForRateOfReturn3\": 29100.52,\n            \"savingPerMonthForRateOfReturn4\": 29100.52\n        }\n    ]\n}"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "FamilyTotalExpensesR3_Primary_ExpPresentValue",
			"item": [
				{
					"name": "FamilyTotalExpensesR3_Primary",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var response = JSON.parse(responseBody);// storing the Json response in \"response\" variable",
									"var pv_expenses0 = \"[\"; //declaring a variable Pv_expenses0 and assigning the \"[\" to store the array values.",
									"var pv_expenses1 = \"[\";  //same as above.",
									"var pv_expenses2 = \"[\";  //same as above.",
									"var pv_expenses3 = \"[\";  //same as above.",
									"var pv_expenses4 = \"[\";  //same as above.",
									"var pv_expenses5 = \"[\";  //same as above.",
									"var pv_expenses6 = \"[\";  //same as above.",
									"var pv_expenses7 = \"[\";  //same as above.",
									"var pv_expenses8 = \"[\";  //same as above.",
									"var pv_expenses9 = \"[\";  //same as above.",
									"var pv_expenses10 = \"[\"; //same as above.",
									"length1 = response.familyTotalExpenses.length;",
									"//finding length from individual total exp. from response body.",
									"fromYear = response.familyTotalExpenses[0].year; //getting the first year value from the individualTotalExpenses array from the response body.",
									"toYear = response.familyTotalExpenses[length1 - 1].year;//getting the last year value from the individualTotalExpenses array from the response body.",
									"",
									"for (var i = 0; i < length1; i++)//for loop executes a set of statement until the given condition is true, once the condition is false it will come out of the for loop. It starts with value 0 executes the statement by increments 1(ie., i++) until it is less than the value of length1.",
									"{",
									"    var year = response.familyTotalExpenses[i].year; //getting year from the response body and storing in the year based on the i value.",
									"    var ABD = response.familyTotalExpenses[i].totalABD + response.familyTotalExpenses[i].primaryTotalPreMedicareCost + response.familyTotalExpenses[i].spouseTotalPreMedicareCost;",
									"    //getting values from the response body and adding totalABD, primaryTotalPreMedicareCost & spouseTotalPreMedicareCost and storing in the ABD based on the i value.",
									"",
									"    var ABCD = response.familyTotalExpenses[i].totalABCD + response.familyTotalExpenses[i].primaryTotalPreMedicareCost + response.familyTotalExpenses[i].spouseTotalPreMedicareCost;",
									"    //getting values from the response body and adding totalABCD, primaryTotalPreMedicareCost & spouseTotalPreMedicareCost and storing in the ABCD based on the i value.",
									"",
									"    var ABFD = response.familyTotalExpenses[i].totalABFD + response.familyTotalExpenses[i].primaryTotalPreMedicareCost + response.familyTotalExpenses[i].spouseTotalPreMedicareCost;",
									"    //getting values from the response body and adding totalABFD, primaryTotalPreMedicareCost & spouseTotalPreMedicareCost and storing in the ABFD based on the i value.",
									"    var ABGD = response.familyTotalExpenses[i].totalABGD + response.familyTotalExpenses[i].primaryTotalPreMedicareCost + response.familyTotalExpenses[i].spouseTotalPreMedicareCost;",
									"    //getting values from the response body and adding totalABGD, primaryTotalPreMedicareCost & spouseTotalPreMedicareCost and storing in the ABGD based on the i value.",
									"",
									"    var ABND = response.familyTotalExpenses[i].totalABND + response.familyTotalExpenses[i].primaryTotalPreMedicareCost + response.familyTotalExpenses[i].spouseTotalPreMedicareCost;",
									"    //getting values from the response body and adding totalABND, primaryTotalPreMedicareCost & spouseTotalPreMedicareCost and storing in the ABND based on the i value.",
									"    var Surcharge = response.familyTotalExpenses[i].primaryPartBPremiumSurcharge + response.familyTotalExpenses[i].primaryPartDPremiumSurcharge + response.familyTotalExpenses[i].spousePartBPremiumSurcharge + response.familyTotalExpenses[i].spousePartDPremiumSurcharge; //getting values from the response body and adding primaryPartBPremiumSurcharge, primaryPartDPremiumSurcharge, spousePartBPremiumSurcharge & spousePartDPremiumSurcharge and storing in the Surcharge based on the i value.",
									"",
									"    var year_expenseABD = '{\"year\": ' + year + ' , \"expense\": ' + ABD / 2 + \"}\";",
									"    //concatenating the year and ABD expense and storing in the year_expenseABD ",
									"    var year_expenseABCD = '{\"year\": ' + year + ' , \"expense\": ' + ABCD / 2 + \"}\";",
									"    //concatenating the year and ABCD expense and storing in the year_expenseABCD",
									"    var year_expenseABFD = '{\"year\": ' + year + ' , \"expense\": ' + ABFD / 2 + \"}\";",
									"    //concatenating the year and ABFD expense and storing in the year_expenseABFD",
									"    var year_expenseABGD = '{\"year\": ' + year + ' , \"expense\": ' + ABGD / 2 + \"}\";",
									"    //concatenating the year and ABGD expense and storing in the year_expenseABGD",
									"    var year_expenseABND = '{\"year\": ' + year + ' , \"expense\": ' + ABND / 2 + \"}\";",
									"    //concatenating the year and ABND expense and storing in the year_expenseABND",
									"    var year_expense = '{\"year\": ' + year + ' , \"expense\": ' + Surcharge / 2 + \"}\";",
									"    //concatenating the year and Surcharge expense and storing in the year_expense and divided by 2 is getting only primary values.",
									"",
									"    var year_expensesABD = '{\"year\": ' + year + ' , \"expenses\": ' + ABD / 2 + ', \"expenses_type\": \"Post-Retirement\"}';",
									"    //concatenating the year and ABD expenses and storing in the year_expensesABD and hardcoding the \"Post-Retirement\" value in the expenses_type.",
									"    var year_expensesABCD = '{\"year\": ' + year + ' , \"expenses\": ' + ABCD / 2 + ', \"expenses_type\": \"Post-Retirement\"}';",
									"    //concatenating the year and ABCD expenses and storing in the year_expensesABCD and hardcoding the \"Post-Retirement\" value in the expenses_type.",
									"    var year_expensesABFD = '{\"year\": ' + year + ' , \"expenses\": ' + ABFD / 2 + ', \"expenses_type\": \"Post-Retirement\"}';",
									"    //concatenating the year and ABFD expenses and storing in the year_expensesABFD and hardcoding the \"Post-Retirement\" value in the expenses_type.",
									"    var year_expensesABGD = '{\"year\": ' + year + ' , \"expenses\": ' + ABGD / 2 + ', \"expenses_type\": \"Post-Retirement\"}';",
									"    //concatenating the year and ABGD expenses and storing in the year_expensesABGD and hardcoding the \"Post-Retirement\" value in the expenses_type.",
									"    var year_expensesABND = '{\"year\": ' + year + ' , \"expenses\": ' + ABND / 2 + ', \"expenses_type\": \"Post-Retirement\"}';",
									"    //concatenating the year and ABND expenses and storing in the year_expensesABND and hardcoding the \"Post-Retirement\" value in the expenses_type.",
									"",
									"    if (i < (length1 - 1)) // if this condition is true then it will execute the below statment.",
									"    {",
									"        year_expenseABD += ',';  //year_expenseABD = year_expenseABD + ',' after concatenating year and expense field assigning \",\" ",
									"        year_expenseABCD += ','; //same as above ",
									"        year_expenseABFD += ','; //same as above ",
									"        year_expenseABGD += ','; //same as above ",
									"        year_expenseABND += ','; //same as above ",
									"        year_expensesABD += ','; //year_expenseABD = year_expensesABD + ','  after concatenating year and expenses field assigning \",\"",
									"        year_expensesABCD += ','; //same as above ",
									"        year_expensesABFD += ','; //same as above ",
									"        year_expensesABGD += ','; //same as above ",
									"        year_expensesABND += ','; //same as above ",
									"        year_expense += ','; //same as above ",
									"    }",
									"    pv_expenses0 += year_expenseABD; //variable pv_expenses0 = pv_expenses0 + year_expenseABD is stored",
									"    pv_expenses1 += year_expenseABCD; //same as above ",
									"    pv_expenses2 += year_expenseABFD; //same as above ",
									"    pv_expenses3 += year_expenseABGD; //same as above ",
									"    pv_expenses4 += year_expenseABND; //same as above ",
									"    pv_expenses5 += year_expensesABD; //variable pv_expenses5 = pv_expenses5 + year_expensesABD is stored",
									"    pv_expenses6 += year_expensesABCD; //same as above ",
									"    pv_expenses7 += year_expensesABFD; //same as above ",
									"    pv_expenses8 += year_expensesABGD; //same as above ",
									"    pv_expenses9 += year_expensesABND; //same as above ",
									"    pv_expenses10 += year_expense; //same as above ",
									"}",
									"pv_expenses0 += ']'; // closing with \"]\" after the above statment.",
									"pv_expenses1 += ']'; //same as above ",
									"pv_expenses2 += ']'; //same as above ",
									"pv_expenses3 += ']'; //same as above ",
									"pv_expenses4 += ']'; //same as above ",
									"pv_expenses5 += ']'; //same as above ",
									"pv_expenses6 += ']'; //same as above ",
									"pv_expenses7 += ']'; //same as above ",
									"pv_expenses8 += ']'; //same as above ",
									"pv_expenses9 += ']'; //same as above ",
									"pv_expenses10 += ']'; //same as above ",
									"",
									"pm.globals.set(\"expenses0\", pv_expenses0); // assigning all the pv_expenses0 values to the global variable expenses0.",
									"pm.globals.set(\"expenses1\", pv_expenses1); //assigning all the pv_expenses1 values to the global variable expenses1.",
									"pm.globals.set(\"expenses2\", pv_expenses2); //assigning all the pv_expenses2 values to the global variable expenses2.",
									"pm.globals.set(\"expenses3\", pv_expenses3); //assigning all the pv_expenses3 values to the global variable expenses3.",
									"pm.globals.set(\"expenses4\", pv_expenses4); //assigning all the pv_expenses4 values to the global variable expenses4.",
									"pm.globals.set(\"expenses5\", pv_expenses5); //assigning all the pv_expenses5 values to the global variable expenses5.",
									"pm.globals.set(\"expenses6\", pv_expenses6); //assigning all the pv_expenses6 values to the global variable expenses6.",
									"pm.globals.set(\"expenses7\", pv_expenses7); //assigning all the pv_expenses7 values to the global variable expenses7.",
									"pm.globals.set(\"expenses8\", pv_expenses8); //assigning all the pv_expenses8 values to the global variable expenses8.",
									"pm.globals.set(\"expenses9\", pv_expenses9); //assigning all the pv_expenses9 values to the global variable expenses9.",
									"pm.globals.set(\"expenses10\", pv_expenses10); //assigning all the pv_expenses10 values to the global variable expenses10.",
									"",
									"pm.globals.set(\"fromYear\", fromYear);",
									"pm.globals.set(\"toYear\", toYear);",
									"//setting global variables fromYear and toyear.",
									"//console.log(pv_expenses0); //printing pv_expenses0 values in the console ",
									"//console.log(pv_expenses1); //same as above",
									"//console.log(pv_expenses2); //same as above",
									"//console.log(pv_expenses3); //same as above",
									"//console.log(pv_expenses4); //same as above",
									"//console.log(pv_expenses5); //same as above",
									"//console.log(pv_expenses6); //same as above",
									"//console.log(pv_expenses7); //same as above",
									"//console.log(pv_expenses8); //same as above",
									"///console.log(pv_expenses9); //same as above",
									"//console.log(pv_expenses10); //same as above",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						},
						"followRedirects": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{  \r\n\"primaryBirthDate\": \"{{primaryBirthDate}}\",\r\n\"primaryRetirementYear\": \"{{primaryRetirementYear}}\",\r\n\"primaryLifeExpectancy\":\"{{primaryLifeExpectancy}}\",\r\n\"primarySingleVsMultipleMagi\": \"{{primarySingleVsMultipleMagi}}\",\r\n\"primaryMagiTierVsDollarAmount\": \"{{primaryMagiTierVsDollarAmount}}\",\r\n\"primaryMagiTier\": \"{{primaryMagiTier}}\",\r\n\"primaryTaxFilingStatus\": \"{{primaryTaxFilingStatus}}\",\r\n\"primaryMagiDollarAmount\": {{primaryMagiDollarAmount}},\r\n\"primaryHealthGrade\": {{primaryHealthGrade}},\r\n\"primaryStateName\": \"{{primaryStateName}}\",\r\n\"primaryRetirementState\": \"{{primaryRetirementState}}\",\r\n\"primaryZipcode\": \"{{primaryZipcode}}\",\r\n\"primaryBoughtPlanA\":\"{{primaryBoughtPlanA}}\",\r\n\"primaryReserveDaysUsed\": {{primaryReserveDaysUsed}},\r\n\"primaryDental\":\"{{primaryDental}}\",\r\n\"primaryDentalHealthGrade\": {{primaryDentalHealthGrade}},\r\n\"primaryPlanType\": \"{{primaryPlanType}}\",\r\n\"primaryTobacco\":\"{{primaryTobacco}}\",\r\n\"primaryYearWiseMagiDetailList\":{{primaryYearWiseMagiDetailList}},\r\n\"fullYearDataForLifeExpectancyYear\": {{fullYearDataForLifeExpectancyYear}},\r\n\"spouseIncluded\":\"{{spouseIncluded}}\",\r\n\"spouseBirthDate\": \"{{spouseBirthDate}}\",\r\n\"spouseRetirementYear\": \"{{spouseRetirementYear}}\",\r\n\"spouseLifeExpectancy\":\"{{spouseLifeExpectancy}}\",\r\n\"spouseSingleVsMultipleMagi\":  \"{{spouseSingleVsMultipleMagi}}\",\r\n\"spouseMagiTierVsDollarAmount\":  \"{{spouseMagiTierVsDollarAmount}}\",\r\n\"spouseMagiTier\":  \"{{spouseMagiTier}}\",\r\n\"spouseTaxFilingStatus\": \"{{spouseTaxFilingStatus}}\",\r\n\"spouseMagiDollarAmount\":  {{spouseMagiDollarAmount}},\r\n\"spouseHealthGrade\": {{spouseHealthGrade}},\r\n\"spouseStateName\":\"{{spouseStateName}}\",\r\n\"spouseRetirementState\": \"{{spouseRetirementState}}\",\r\n\"spouseZipcode\": \"{{spouseZipcode}}\",\r\n\"spouseBoughtPlanA\": \"{{spouseBoughtPlanA}}\",\r\n\"spouseReserveDaysUsed\":{{spouseReserveDaysUsed}},\r\n\"spouseDental\":\"{{spouseDental}}\",\r\n\"spouseDentalHealthGrade\": {{spouseDentalHealthGrade}},\r\n\"spousePlanType\":\"{{spousePlanType}}\",\r\n\"spouseTobacco\":\"{{spouseTobacco}}\",\r\n\"spouseYearWiseMagiDetailList\":{{spouseYearWiseMagiDetailList}}\r\n}\r\n    \r\n    "
						},
						"url": {
							"raw": "{{server}}/familyTotalExpensesR3",
							"host": [
								"{{server}}"
							],
							"path": [
								"familyTotalExpensesR3"
							]
						},
						"description": "All the fields to be assigned before running the collection from the pre-requisite in the Family Total ExpensesR3 Primary API, calculating Present Value Expenses of totalABD, totalABCD, totalABFD, totalABGD, totalABND primary & spouse TotalPreMedicareCost from Family Total Expenses API. They are global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "FamilyTotalExpensesR3_Primary",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==\",\"type\":\"text\"}]"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \r\n\"primaryBirthDate\": \"{{birthDate}}\",\r\n\"primaryRetirementYear\": \"{{retirementYear}}\",\r\n\"primaryLifeExpectancy\":\"{{lifeExpectancy}}\",\r\n\"primarySingleVsMultipleMagi\": \"{{singleVsMultipleMagi}}\",\r\n\"primaryMagiTierVsDollarAmount\": \"{{magiTierVsDollarAmount}}\",\r\n\"primaryMagiTier\": \"{{magiTier}}\",\r\n\"primaryTaxFilingStatus\": \"{{taxFilingStatus}}\",\r\n\"primaryMagiDollarAmount\": {{magiDollarAmount}},\r\n\"primaryHealthGrade\": {{healthGrade}},\r\n\"primaryStateName\": \"{{stateName}}\",\r\n\"primaryRetirementState\": \"{{retirementState}}\",\r\n\"primaryZipcode\": \"{{zipcode}}\",\r\n\"primaryBoughtPlanA\":\"{{boughtPlanA}}\",\r\n\"primaryReserveDaysUsed\": {{reserveDaysUsed}},\r\n\"primaryDental\":\"{{dental}}\",\r\n\"primaryDentalHealthGrade\": {{dentalHealthGrade}},\r\n\"primaryPlanType\": \"{{planType}}\",\r\n\"primaryTobacco\":\"{{tobacco}}\",\r\n\"primaryYearWiseMagiDetailList\":{{yearWiseMagiDetailList}},\r\n\"fullYearDataForLifeExpectancyYear\": {{fullYearDataForLifeExpectancyYear}},\r\n\"spouseIncluded\":\"{{spouseIncluded}}\",\r\n\"spouseBirthDate\": \"{{spouseBirthDate}}\",\r\n\"spouseRetirementYear\": \"{{spouseRetirementYear}}\",\r\n\"spouseLifeExpectancy\":\"{{spouseLifeExpectancy}}\",\r\n\"spouseSingleVsMultipleMagi\":  \"{{spouseSingleVsMultipleMagi}}\",\r\n\"spouseMagiTierVsDollarAmount\":  \"{{spouseMagiTierVsDollarAmount}}\",\r\n\"spouseMagiTier\":  \"{{spouseMagiTier}}\",\r\n\"spouseTaxFilingStatus\": \"{{spouseTaxFilingStatus}}\",\r\n\"spouseMagiDollarAmount\":  {{spouseMagiDollarAmount}},\r\n\"spouseHealthGrade\": {{spouseHealthGrade}},\r\n\"spouseStateName\":\"{{spouseStateName}}\",\r\n\"spouseRetirementState\": \"{{spouseRetirementState}}\",\r\n\"spouseZipcode\": \"{{spouseZipcode}}\",\r\n\"spouseBoughtPlanA\": \"{{spouseBoughtPlanA}}\",\r\n\"spouseReserveDaysUsed\":{{spouseReserveDaysUsed}},\r\n\"spouseDental\":\"{{spouseDental}}\",\r\n\"spouseDentalHealthGrade\": {{spouseDentalHealthGrade}},\r\n\"spousePlanType\":\"{{spousePlanType}}\",\r\n\"spouseTobacco\":\"{{spouseTobacco}}\",\r\n\"spouseYearWiseMagiDetailList\":{{spouseYearWiseMagiDetailList}}\r\n}\r\n    \r\n    "
								},
								"url": {
									"raw": "{{server}}/familyTotalExpensesR3",
									"host": [
										"{{server}}"
									],
									"path": [
										"familyTotalExpensesR3"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 14 May 2020 22:13:35 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"be0ce962-d603-4e45-8a4d-9457ae48a4ca-5723\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"primaryBirthDate\": \"01-1955\",\n    \"primaryRetirementYear\": \"01-2019\",\n    \"primaryHealthGrade\": \"2\",\n    \"primaryStateName\": \"Colorado\",\n    \"primaryRetirementState\": \"Colorado\",\n    \"primaryZipcode\": \"80124\",\n    \"primaryDental\": false,\n    \"primaryDentalHealthGrade\": 2,\n    \"primarySingleVsMultipleMagi\": true,\n    \"primaryMagiTierVsDollarAmount\": true,\n    \"primaryLifeExpectancy\": 70,\n    \"primaryMagiTier\": null,\n    \"primaryTaxFilingStatus\": \"FILING_INDIVIDUALLY\",\n    \"primaryMagiDollarAmount\": 80000,\n    \"primaryYearWiseMagiDetailList\": [\n        {\n            \"magiTier\": 1,\n            \"magiDollarAmount\": 65000,\n            \"taxFilingStatus\": \"FILING_INDIVIDUALLY\",\n            \"year\": 2020\n        },\n        {\n            \"magiTier\": 2,\n            \"magiDollarAmount\": 95000,\n            \"taxFilingStatus\": \"FILING_INDIVIDUALLY\",\n            \"year\": 2021\n        },\n        {\n            \"magiTier\": 3,\n            \"magiDollarAmount\": 110000,\n            \"taxFilingStatus\": \"FILING_INDIVIDUALLY\",\n            \"year\": 2022\n        },\n        {\n            \"magiTier\": 4,\n            \"magiDollarAmount\": 140000,\n            \"taxFilingStatus\": \"FILING_INDIVIDUALLY\",\n            \"year\": 2023\n        },\n        {\n            \"magiTier\": 5,\n            \"magiDollarAmount\": 200000,\n            \"taxFilingStatus\": \"FILING_INDIVIDUALLY\",\n            \"year\": 2024\n        },\n        {\n            \"magiTier\": 6,\n            \"magiDollarAmount\": 501000,\n            \"taxFilingStatus\": \"FILING_INDIVIDUALLY\",\n            \"year\": 2025\n        }\n    ],\n    \"primaryBoughtPlanA\": false,\n    \"primaryReserveDaysUsed\": 0,\n    \"primaryPlanType\": \"silver\",\n    \"primaryTobacco\": false,\n    \"spouseIncluded\": true,\n    \"fullYearDataForLifeExpectancyYear\": false,\n    \"spouseBirthDate\": \"01-1955\",\n    \"spouseRetirementYear\": \"01-2019\",\n    \"spouseHealthGrade\": \"2\",\n    \"spouseStateName\": \"Colorado\",\n    \"spouseRetirementState\": \"Colorado\",\n    \"spouseZipcode\": \"80124\",\n    \"spouseDental\": false,\n    \"spouseDentalHealthGrade\": 2,\n    \"spouseSingleVsMultipleMagi\": true,\n    \"spouseMagiTierVsDollarAmount\": true,\n    \"spouseLifeExpectancy\": 70,\n    \"spouseMagiTier\": null,\n    \"spouseTaxFilingStatus\": \"MARRIED_FILING_JOINTLY\",\n    \"spouseMagiDollarAmount\": 4334621,\n    \"spouseYearWiseMagiDetailList\": [\n        {\n            \"magiTier\": 1,\n            \"magiDollarAmount\": 65000,\n            \"taxFilingStatus\": \"FILING_INDIVIDUALLY\",\n            \"year\": 2020\n        },\n        {\n            \"magiTier\": 2,\n            \"magiDollarAmount\": 95000,\n            \"taxFilingStatus\": \"FILING_INDIVIDUALLY\",\n            \"year\": 2021\n        },\n        {\n            \"magiTier\": 3,\n            \"magiDollarAmount\": 110000,\n            \"taxFilingStatus\": \"FILING_INDIVIDUALLY\",\n            \"year\": 2022\n        },\n        {\n            \"magiTier\": 4,\n            \"magiDollarAmount\": 140000,\n            \"taxFilingStatus\": \"FILING_INDIVIDUALLY\",\n            \"year\": 2023\n        },\n        {\n            \"magiTier\": 5,\n            \"magiDollarAmount\": 200000,\n            \"taxFilingStatus\": \"FILING_INDIVIDUALLY\",\n            \"year\": 2024\n        },\n        {\n            \"magiTier\": 6,\n            \"magiDollarAmount\": 501000,\n            \"taxFilingStatus\": \"FILING_INDIVIDUALLY\",\n            \"year\": 2025\n        }\n    ],\n    \"spouseBoughtPlanA\": false,\n    \"spouseReserveDaysUsed\": 0,\n    \"spousePlanType\": \"gold\",\n    \"spouseTobacco\": false,\n    \"errorList\": [],\n    \"familyTotalExpenses\": [\n        {\n            \"year\": 2020,\n            \"monthsUsedForPrimaryMedicareExpenseCalc\": 12,\n            \"primaryPartAPremium\": 0,\n            \"primaryPartBPremium\": 1735,\n            \"primaryPartBPremiumSurcharge\": 0,\n            \"primaryPartCPremium\": 264.07,\n            \"primaryPartDPremium\": 485.69,\n            \"primaryPartDPremiumSurcharge\": 0,\n            \"primaryPartFPremium\": 2280,\n            \"primaryPlanGPremium\": 1472.16,\n            \"primaryPlanNPremium\": 1152,\n            \"primaryPartAOOP\": 0,\n            \"primaryPartBOOP\": 2518.12,\n            \"primaryPartCOOP\": 2518.12,\n            \"primaryPartDOOP\": 650.1,\n            \"primaryDentalPremium\": 0,\n            \"primaryDentalOOP\": 0,\n            \"primaryPlanGOOP\": 196.64,\n            \"primaryPlanNOOP\": 316.8,\n            \"primaryReserveDaysLeft\": 60,\n            \"monthsUsedForSpouseMedicareExpenseCalc\": 12,\n            \"spousePartAPremium\": 0,\n            \"spousePartBPremium\": 1735,\n            \"spousePartBPremiumSurcharge\": 0,\n            \"spousePartCPremium\": 264.07,\n            \"spousePartDPremium\": 485.69,\n            \"spousePartDPremiumSurcharge\": 0,\n            \"spousePartFPremium\": 2280,\n            \"spousePlanGPremium\": 1472.16,\n            \"spousePlanNPremium\": 1152,\n            \"spousePartAOOP\": 0,\n            \"spousePartBOOP\": 2518.12,\n            \"spousePartCOOP\": 2518.12,\n            \"spousePartDOOP\": 650.1,\n            \"spouseDentalPremium\": 0,\n            \"spouseDentalOOP\": 0,\n            \"spousePlanGOOP\": 196.64,\n            \"spousePlanNOOP\": 316.8,\n            \"spouseReserveDaysLeft\": 60,\n            \"totalABCD\": 11305.96,\n            \"totalABD\": 10777.82,\n            \"totalABFD\": 10301.58,\n            \"totalABGD\": 9079.18,\n            \"totalABND\": 8679.18,\n            \"monthsUsedForPrimaryPreMedicareExpenseCalc\": 0,\n            \"primaryPremium\": 0,\n            \"primaryOutofpocket\": 0,\n            \"primaryTotalPreMedicareCost\": 0,\n            \"monthsUsedForSpousePreMedicareExpenseCalc\": 0,\n            \"spousePremium\": 0,\n            \"spouseOutofpocket\": 0,\n            \"spouseTotalPreMedicareCost\": 0\n        },\n        {\n            \"year\": 2021,\n            \"monthsUsedForPrimaryMedicareExpenseCalc\": 12,\n            \"primaryPartAPremium\": 0,\n            \"primaryPartBPremium\": 2575,\n            \"primaryPartBPremiumSurcharge\": 736,\n            \"primaryPartCPremium\": 280.33,\n            \"primaryPartDPremium\": 672.33,\n            \"primaryPartDPremiumSurcharge\": 158,\n            \"primaryPartFPremium\": 2417,\n            \"primaryPlanGPremium\": 1560.48,\n            \"primaryPlanNPremium\": 1221.12,\n            \"primaryPartAOOP\": 0,\n            \"primaryPartBOOP\": 2594.01,\n            \"primaryPartCOOP\": 2594.01,\n            \"primaryPartDOOP\": 669.3,\n            \"primaryDentalPremium\": 0,\n            \"primaryDentalOOP\": 0,\n            \"primaryPlanGOOP\": 202.54,\n            \"primaryPlanNOOP\": 326.3,\n            \"primaryReserveDaysLeft\": 60,\n            \"monthsUsedForSpouseMedicareExpenseCalc\": 12,\n            \"spousePartAPremium\": 0,\n            \"spousePartBPremium\": 2575,\n            \"spousePartBPremiumSurcharge\": 736,\n            \"spousePartCPremium\": 280.33,\n            \"spousePartDPremium\": 672.33,\n            \"spousePartDPremiumSurcharge\": 158,\n            \"spousePartFPremium\": 2417,\n            \"spousePlanGPremium\": 1560.48,\n            \"spousePlanNPremium\": 1221.12,\n            \"spousePartAOOP\": 0,\n            \"spousePartBOOP\": 2594.01,\n            \"spousePartCOOP\": 2594.01,\n            \"spousePartDOOP\": 669.3,\n            \"spouseDentalPremium\": 0,\n            \"spouseDentalOOP\": 0,\n            \"spousePlanGOOP\": 202.54,\n            \"spousePlanNOOP\": 326.3,\n            \"spouseReserveDaysLeft\": 60,\n            \"totalABCD\": 13581.94,\n            \"totalABD\": 13021.28,\n            \"totalABFD\": 12667.26,\n            \"totalABGD\": 11359.3,\n            \"totalABND\": 10928.1,\n            \"monthsUsedForPrimaryPreMedicareExpenseCalc\": 0,\n            \"primaryPremium\": 0,\n            \"primaryOutofpocket\": 0,\n            \"primaryTotalPreMedicareCost\": 0,\n            \"monthsUsedForSpousePreMedicareExpenseCalc\": 0,\n            \"spousePremium\": 0,\n            \"spouseOutofpocket\": 0,\n            \"spouseTotalPreMedicareCost\": 0\n        },\n        {\n            \"year\": 2022,\n            \"monthsUsedForPrimaryMedicareExpenseCalc\": 12,\n            \"primaryPartAPremium\": 0,\n            \"primaryPartBPremium\": 3899,\n            \"primaryPartBPremiumSurcharge\": 1949,\n            \"primaryPartCPremium\": 296.6,\n            \"primaryPartDPremium\": 975.47,\n            \"primaryPartDPremiumSurcharge\": 430,\n            \"primaryPartFPremium\": 2562,\n            \"primaryPlanGPremium\": 1654.08,\n            \"primaryPlanNPremium\": 1294.44,\n            \"primaryPartAOOP\": 0,\n            \"primaryPartBOOP\": 3957.31,\n            \"primaryPartCOOP\": 3957.31,\n            \"primaryPartDOOP\": 1109.11,\n            \"primaryDentalPremium\": 0,\n            \"primaryDentalOOP\": 0,\n            \"primaryPlanGOOP\": 208.62,\n            \"primaryPlanNOOP\": 336.09,\n            \"primaryReserveDaysLeft\": 60,\n            \"monthsUsedForSpouseMedicareExpenseCalc\": 12,\n            \"spousePartAPremium\": 0,\n            \"spousePartBPremium\": 3899,\n            \"spousePartBPremiumSurcharge\": 1949,\n            \"spousePartCPremium\": 296.6,\n            \"spousePartDPremium\": 975.47,\n            \"spousePartDPremiumSurcharge\": 430,\n            \"spousePartFPremium\": 2562,\n            \"spousePlanGPremium\": 1654.08,\n            \"spousePlanNPremium\": 1294.44,\n            \"spousePartAOOP\": 0,\n            \"spousePartBOOP\": 3957.31,\n            \"spousePartCOOP\": 3957.31,\n            \"spousePartDOOP\": 1109.11,\n            \"spouseDentalPremium\": 0,\n            \"spouseDentalOOP\": 0,\n            \"spousePlanGOOP\": 208.62,\n            \"spousePlanNOOP\": 336.09,\n            \"spouseReserveDaysLeft\": 60,\n            \"totalABCD\": 20474.98,\n            \"totalABD\": 19881.78,\n            \"totalABFD\": 17091.16,\n            \"totalABGD\": 15692.56,\n            \"totalABND\": 15228.22,\n            \"monthsUsedForPrimaryPreMedicareExpenseCalc\": 0,\n            \"primaryPremium\": 0,\n            \"primaryOutofpocket\": 0,\n            \"primaryTotalPreMedicareCost\": 0,\n            \"monthsUsedForSpousePreMedicareExpenseCalc\": 0,\n            \"spousePremium\": 0,\n            \"spouseOutofpocket\": 0,\n            \"spouseTotalPreMedicareCost\": 0\n        },\n        {\n            \"year\": 2023,\n            \"monthsUsedForPrimaryMedicareExpenseCalc\": 12,\n            \"primaryPartAPremium\": 0,\n            \"primaryPartBPremium\": 5374,\n            \"primaryPartBPremiumSurcharge\": 3307,\n            \"primaryPartCPremium\": 314.78,\n            \"primaryPartDPremium\": 1312.85,\n            \"primaryPartDPremiumSurcharge\": 735,\n            \"primaryPartFPremium\": 2716,\n            \"primaryPlanGPremium\": 1753.32,\n            \"primaryPlanNPremium\": 1372.08,\n            \"primaryPartAOOP\": 0,\n            \"primaryPartBOOP\": 2751.28,\n            \"primaryPartCOOP\": 2751.28,\n            \"primaryPartDOOP\": 710.45,\n            \"primaryDentalPremium\": 0,\n            \"primaryDentalOOP\": 0,\n            \"primaryPlanGOOP\": 214.87,\n            \"primaryPlanNOOP\": 346.18,\n            \"primaryReserveDaysLeft\": 60,\n            \"monthsUsedForSpouseMedicareExpenseCalc\": 12,\n            \"spousePartAPremium\": 0,\n            \"spousePartBPremium\": 5374,\n            \"spousePartBPremiumSurcharge\": 3307,\n            \"spousePartCPremium\": 314.78,\n            \"spousePartDPremium\": 1312.85,\n            \"spousePartDPremiumSurcharge\": 735,\n            \"spousePartFPremium\": 2716,\n            \"spousePlanGPremium\": 1753.32,\n            \"spousePlanNPremium\": 1372.08,\n            \"spousePartAOOP\": 0,\n            \"spousePartBOOP\": 2751.28,\n            \"spousePartCOOP\": 2751.28,\n            \"spousePartDOOP\": 710.45,\n            \"spouseDentalPremium\": 0,\n            \"spouseDentalOOP\": 0,\n            \"spousePlanGOOP\": 214.87,\n            \"spousePlanNOOP\": 346.18,\n            \"spouseReserveDaysLeft\": 60,\n            \"totalABCD\": 20926.72,\n            \"totalABD\": 20297.16,\n            \"totalABFD\": 20226.6,\n            \"totalABGD\": 18730.98,\n            \"totalABND\": 18231.12,\n            \"monthsUsedForPrimaryPreMedicareExpenseCalc\": 0,\n            \"primaryPremium\": 0,\n            \"primaryOutofpocket\": 0,\n            \"primaryTotalPreMedicareCost\": 0,\n            \"monthsUsedForSpousePreMedicareExpenseCalc\": 0,\n            \"spousePremium\": 0,\n            \"spouseOutofpocket\": 0,\n            \"spouseTotalPreMedicareCost\": 0\n        },\n        {\n            \"year\": 2024,\n            \"monthsUsedForPrimaryMedicareExpenseCalc\": 12,\n            \"primaryPartAPremium\": 0,\n            \"primaryPartBPremium\": 7010,\n            \"primaryPartBPremiumSurcharge\": 4819,\n            \"primaryPartCPremium\": 332.96,\n            \"primaryPartDPremium\": 1686.72,\n            \"primaryPartDPremiumSurcharge\": 1074,\n            \"primaryPartFPremium\": 2878,\n            \"primaryPlanGPremium\": 1858.56,\n            \"primaryPlanNPremium\": 1454.4,\n            \"primaryPartAOOP\": 0,\n            \"primaryPartBOOP\": 2834.48,\n            \"primaryPartCOOP\": 2834.48,\n            \"primaryPartDOOP\": 731.48,\n            \"primaryDentalPremium\": 0,\n            \"primaryDentalOOP\": 0,\n            \"primaryPlanGOOP\": 221.32,\n            \"primaryPlanNOOP\": 356.56,\n            \"primaryReserveDaysLeft\": 60,\n            \"monthsUsedForSpouseMedicareExpenseCalc\": 12,\n            \"spousePartAPremium\": 0,\n            \"spousePartBPremium\": 7010,\n            \"spousePartBPremiumSurcharge\": 4819,\n            \"spousePartCPremium\": 332.96,\n            \"spousePartDPremium\": 1686.72,\n            \"spousePartDPremiumSurcharge\": 1074,\n            \"spousePartFPremium\": 2878,\n            \"spousePlanGPremium\": 1858.56,\n            \"spousePlanNPremium\": 1454.4,\n            \"spousePartAOOP\": 0,\n            \"spousePartBOOP\": 2834.48,\n            \"spousePartCOOP\": 2834.48,\n            \"spousePartDOOP\": 731.48,\n            \"spouseDentalPremium\": 0,\n            \"spouseDentalOOP\": 0,\n            \"spousePlanGOOP\": 221.32,\n            \"spousePlanNOOP\": 356.56,\n            \"spouseReserveDaysLeft\": 60,\n            \"totalABCD\": 25191.28,\n            \"totalABD\": 24525.36,\n            \"totalABFD\": 24612.4,\n            \"totalABGD\": 23016.16,\n            \"totalABND\": 22478.32,\n            \"monthsUsedForPrimaryPreMedicareExpenseCalc\": 0,\n            \"primaryPremium\": 0,\n            \"primaryOutofpocket\": 0,\n            \"primaryTotalPreMedicareCost\": 0,\n            \"monthsUsedForSpousePreMedicareExpenseCalc\": 0,\n            \"spousePremium\": 0,\n            \"spouseOutofpocket\": 0,\n            \"spouseTotalPreMedicareCost\": 0\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "FamilyTotalExpABD_Primary_ExpPresentValue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var response = JSON.parse(responseBody);",
									"console.log(\"Primary Retirement Year:\", response.fromYear);",
									"",
									"console.log(\"Primary Life Expectancy year:\", response.toYear);",
									"",
									"console.log(\"Present Value year:\", response.pvList[0].year);",
									"",
									"console.log(\"TotalExpense of ABD for Primary (Future Dollar):\", response.pvList[0].totalExpense);",
									"",
									"console.log(\"Present Value of ABD for Primary:\", response.pvList[0].presentValue);",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "FinancialPlannerP@ssw0rd",
									"type": "string"
								},
								{
									"key": "username",
									"value": "FinancialPlannerServiceUser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n  \"expenses\":{{expenses0}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
						},
						"url": {
							"raw": "{{server}}/expensesPresentValue",
							"host": [
								"{{server}}"
							],
							"path": [
								"expensesPresentValue"
							]
						},
						"description": "Calculating present Value for the year 2020 from the Family total expenses of totalABD. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "FamilyTotalExpABD_Primary_ExpPresentValue",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n  \"expenses\":{{expenses0}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
								},
								"url": {
									"raw": "{{server}}/expensesPresentValue",
									"host": [
										"{{server}}"
									],
									"path": [
										"expensesPresentValue"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 00:29:49 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"7bba7d18-d2c4-48b7-83cb-1cee225abb22-9966\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"fromYear\": 2020,\n    \"toYear\": 2024,\n    \"expenses\": [\n        {\n            \"year\": 2020,\n            \"expense\": 5388.91\n        },\n        {\n            \"year\": 2021,\n            \"expense\": 6510.64\n        },\n        {\n            \"year\": 2022,\n            \"expense\": 9940.89\n        },\n        {\n            \"year\": 2023,\n            \"expense\": 10148.58\n        },\n        {\n            \"year\": 2024,\n            \"expense\": 12262.68\n        }\n    ],\n    \"presentValueYears\": {\n        \"pvAsOnYear1\": 2020,\n        \"pvAsOnYear2\": 2019,\n        \"pvAsOnYear3\": 2018\n    },\n    \"discount\": 6,\n    \"rateOfReturns\": {\n        \"rateOfReturn1\": 2,\n        \"rateOfReturn2\": 4,\n        \"rateOfReturn3\": 6,\n        \"rateOfReturn4\": 8\n    },\n    \"pvList\": [\n        {\n            \"year\": 2020,\n            \"totalExpense\": 44251.7,\n            \"presentValue\": 38612.51,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 38612.51,\n            \"savingPerMonthForRateOfReturn2\": 38612.51,\n            \"savingPerMonthForRateOfReturn3\": 38612.51,\n            \"savingPerMonthForRateOfReturn4\": 38612.51\n        },\n        {\n            \"year\": 2019,\n            \"totalExpense\": 44251.7,\n            \"presentValue\": 36426.9,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 36426.9,\n            \"savingPerMonthForRateOfReturn2\": 36426.9,\n            \"savingPerMonthForRateOfReturn3\": 36426.9,\n            \"savingPerMonthForRateOfReturn4\": 36426.9\n        },\n        {\n            \"year\": 2018,\n            \"totalExpense\": 44251.7,\n            \"presentValue\": 34365,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 34365,\n            \"savingPerMonthForRateOfReturn2\": 34365,\n            \"savingPerMonthForRateOfReturn3\": 34365,\n            \"savingPerMonthForRateOfReturn4\": 34365\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "FamilyTotalExpABCD_Primary_ExpPresentValue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var response = JSON.parse(responseBody);",
									"console.log(\"Primary Retirement Year:\", response.fromYear);",
									"",
									"console.log(\"Primary Life Expectancy year:\", response.toYear);",
									"",
									"console.log(\"Present Value year:\", response.pvList[0].year);",
									"",
									"console.log(\"TotalExpense of ABCD for Primary (Future Dollar):\", response.pvList[0].totalExpense);",
									"",
									"console.log(\"Present Value of ABCD for Primary:\", response.pvList[0].presentValue);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "FinancialPlannerP@ssw0rd",
									"type": "string"
								},
								{
									"key": "username",
									"value": "FinancialPlannerServiceUser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n  \"expenses\":{{expenses1}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
						},
						"url": {
							"raw": "{{server}}/expensesPresentValue",
							"host": [
								"{{server}}"
							],
							"path": [
								"expensesPresentValue"
							]
						},
						"description": "Calculating present Value for the year 2020 from the Family total expenses of totalABCD. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "FamilyTotalExpABCD_Primary_ExpPresentValue",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n  \"expenses\":{{expenses1}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
								},
								"url": {
									"raw": "{{server}}/expensesPresentValue",
									"host": [
										"{{server}}"
									],
									"path": [
										"expensesPresentValue"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 00:30:10 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"333a07f2-2ef1-42f2-a699-a084eb0e89c6-6734\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"fromYear\": 2020,\n    \"toYear\": 2024,\n    \"expenses\": [\n        {\n            \"year\": 2020,\n            \"expense\": 5652.98\n        },\n        {\n            \"year\": 2021,\n            \"expense\": 6790.97\n        },\n        {\n            \"year\": 2022,\n            \"expense\": 10237.49\n        },\n        {\n            \"year\": 2023,\n            \"expense\": 10463.36\n        },\n        {\n            \"year\": 2024,\n            \"expense\": 12595.64\n        }\n    ],\n    \"presentValueYears\": {\n        \"pvAsOnYear1\": 2020,\n        \"pvAsOnYear2\": 2019,\n        \"pvAsOnYear3\": 2018\n    },\n    \"discount\": 6,\n    \"rateOfReturns\": {\n        \"rateOfReturn1\": 2,\n        \"rateOfReturn2\": 4,\n        \"rateOfReturn3\": 6,\n        \"rateOfReturn4\": 8\n    },\n    \"pvList\": [\n        {\n            \"year\": 2020,\n            \"totalExpense\": 45740.44,\n            \"presentValue\": 39933.05,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 39933.05,\n            \"savingPerMonthForRateOfReturn2\": 39933.05,\n            \"savingPerMonthForRateOfReturn3\": 39933.05,\n            \"savingPerMonthForRateOfReturn4\": 39933.05\n        },\n        {\n            \"year\": 2019,\n            \"totalExpense\": 45740.44,\n            \"presentValue\": 37672.69,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 37672.69,\n            \"savingPerMonthForRateOfReturn2\": 37672.69,\n            \"savingPerMonthForRateOfReturn3\": 37672.69,\n            \"savingPerMonthForRateOfReturn4\": 37672.69\n        },\n        {\n            \"year\": 2018,\n            \"totalExpense\": 45740.44,\n            \"presentValue\": 35540.27,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 35540.27,\n            \"savingPerMonthForRateOfReturn2\": 35540.27,\n            \"savingPerMonthForRateOfReturn3\": 35540.27,\n            \"savingPerMonthForRateOfReturn4\": 35540.27\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "FamilyTotalExpABFD_Primary_ExpPresentValue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var response = JSON.parse(responseBody);",
									"console.log(\"Primary Retirement Year:\", response.fromYear);",
									"",
									"console.log(\"Primary Life Expectancy year:\", response.toYear);",
									"",
									"console.log(\"Present Value year:\", response.pvList[0].year);",
									"",
									"console.log(\"TotalExpense of ABFD for Primary (Future Dollar):\", response.pvList[0].totalExpense);",
									"",
									"console.log(\"Present Value of ABFD for Primary:\", response.pvList[0].presentValue);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "FinancialPlannerP@ssw0rd",
									"type": "string"
								},
								{
									"key": "username",
									"value": "FinancialPlannerServiceUser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n  \"expenses\":{{expenses2}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
						},
						"url": {
							"raw": "{{server}}/expensesPresentValue",
							"host": [
								"{{server}}"
							],
							"path": [
								"expensesPresentValue"
							]
						},
						"description": "Calculating present Value for the year 2020 from the Family total expenses of totalABFD. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "FamilyTotalExpABFD_Primary_ExpPresentValue",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n  \"expenses\":{{expenses2}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
								},
								"url": {
									"raw": "{{server}}/expensesPresentValue",
									"host": [
										"{{server}}"
									],
									"path": [
										"expensesPresentValue"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 00:30:53 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"a7188c9f-a142-4b3f-9147-e750d883fa61-3499\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"fromYear\": 2020,\n    \"toYear\": 2024,\n    \"expenses\": [\n        {\n            \"year\": 2020,\n            \"expense\": 5150.79\n        },\n        {\n            \"year\": 2021,\n            \"expense\": 6333.63\n        },\n        {\n            \"year\": 2022,\n            \"expense\": 8545.58\n        },\n        {\n            \"year\": 2023,\n            \"expense\": 10113.3\n        },\n        {\n            \"year\": 2024,\n            \"expense\": 12306.2\n        }\n    ],\n    \"presentValueYears\": {\n        \"pvAsOnYear1\": 2020,\n        \"pvAsOnYear2\": 2019,\n        \"pvAsOnYear3\": 2018\n    },\n    \"discount\": 6,\n    \"rateOfReturns\": {\n        \"rateOfReturn1\": 2,\n        \"rateOfReturn2\": 4,\n        \"rateOfReturn3\": 6,\n        \"rateOfReturn4\": 8\n    },\n    \"pvList\": [\n        {\n            \"year\": 2020,\n            \"totalExpense\": 42449.5,\n            \"presentValue\": 36970.43,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 36970.43,\n            \"savingPerMonthForRateOfReturn2\": 36970.43,\n            \"savingPerMonthForRateOfReturn3\": 36970.43,\n            \"savingPerMonthForRateOfReturn4\": 36970.43\n        },\n        {\n            \"year\": 2019,\n            \"totalExpense\": 42449.5,\n            \"presentValue\": 34877.77,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 34877.77,\n            \"savingPerMonthForRateOfReturn2\": 34877.77,\n            \"savingPerMonthForRateOfReturn3\": 34877.77,\n            \"savingPerMonthForRateOfReturn4\": 34877.77\n        },\n        {\n            \"year\": 2018,\n            \"totalExpense\": 42449.5,\n            \"presentValue\": 32903.55,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 32903.55,\n            \"savingPerMonthForRateOfReturn2\": 32903.55,\n            \"savingPerMonthForRateOfReturn3\": 32903.55,\n            \"savingPerMonthForRateOfReturn4\": 32903.55\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "FamilyTotalExpABGD_Primary_ExpPresentValue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var response = JSON.parse(responseBody);",
									"console.log(\"Primary Retirement Year:\", response.fromYear);",
									"",
									"console.log(\"Primary Life Expectancy year:\", response.toYear);",
									"",
									"console.log(\"Present Value year:\", response.pvList[0].year);",
									"",
									"console.log(\"TotalExpense of ABGD for Primary (Future Dollar):\", response.pvList[0].totalExpense);",
									"",
									"console.log(\"Present Value of ABGD for Primary:\", response.pvList[0].presentValue);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "FinancialPlannerP@ssw0rd",
									"type": "string"
								},
								{
									"key": "username",
									"value": "FinancialPlannerServiceUser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n  \"expenses\":{{expenses3}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
						},
						"url": {
							"raw": "{{server}}/expensesPresentValue",
							"host": [
								"{{server}}"
							],
							"path": [
								"expensesPresentValue"
							]
						},
						"description": "Calculating present Value for the year 2020 from the Family total expenses of totalABGD. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "FamilyTotalExpABGD_Primary_ExpPresentValue",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n  \"expenses\":{{expenses3}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
								},
								"url": {
									"raw": "{{server}}/expensesPresentValue",
									"host": [
										"{{server}}"
									],
									"path": [
										"expensesPresentValue"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 00:31:10 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"2ffff910-1b52-4338-b7e1-de0d90cad8e9-2209\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"fromYear\": 2020,\n    \"toYear\": 2024,\n    \"expenses\": [\n        {\n            \"year\": 2020,\n            \"expense\": 4539.59\n        },\n        {\n            \"year\": 2021,\n            \"expense\": 5679.65\n        },\n        {\n            \"year\": 2022,\n            \"expense\": 7846.28\n        },\n        {\n            \"year\": 2023,\n            \"expense\": 9365.49\n        },\n        {\n            \"year\": 2024,\n            \"expense\": 11508.08\n        }\n    ],\n    \"presentValueYears\": {\n        \"pvAsOnYear1\": 2020,\n        \"pvAsOnYear2\": 2019,\n        \"pvAsOnYear3\": 2018\n    },\n    \"discount\": 6,\n    \"rateOfReturns\": {\n        \"rateOfReturn1\": 2,\n        \"rateOfReturn2\": 4,\n        \"rateOfReturn3\": 6,\n        \"rateOfReturn4\": 8\n    },\n    \"pvList\": [\n        {\n            \"year\": 2020,\n            \"totalExpense\": 38939.09,\n            \"presentValue\": 33859.83,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 33859.83,\n            \"savingPerMonthForRateOfReturn2\": 33859.83,\n            \"savingPerMonthForRateOfReturn3\": 33859.83,\n            \"savingPerMonthForRateOfReturn4\": 33859.83\n        },\n        {\n            \"year\": 2019,\n            \"totalExpense\": 38939.09,\n            \"presentValue\": 31943.24,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 31943.24,\n            \"savingPerMonthForRateOfReturn2\": 31943.24,\n            \"savingPerMonthForRateOfReturn3\": 31943.24,\n            \"savingPerMonthForRateOfReturn4\": 31943.24\n        },\n        {\n            \"year\": 2018,\n            \"totalExpense\": 38939.09,\n            \"presentValue\": 30135.13,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 30135.13,\n            \"savingPerMonthForRateOfReturn2\": 30135.13,\n            \"savingPerMonthForRateOfReturn3\": 30135.13,\n            \"savingPerMonthForRateOfReturn4\": 30135.13\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "FamilyTotalExpABND_Primary_ExpPresentValue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var response = JSON.parse(responseBody);",
									"console.log(\"Primary Retirement Year:\", response.fromYear);",
									"",
									"console.log(\"Primary Life Expectancy year:\", response.toYear);",
									"",
									"console.log(\"Present Value year:\", response.pvList[0].year);",
									"",
									"console.log(\"TotalExpense of ABND for Primary (Future Dollar):\", response.pvList[0].totalExpense);",
									"",
									"console.log(\"Present Value of ABND for Primary:\", response.pvList[0].presentValue);",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "FinancialPlannerP@ssw0rd",
									"type": "string"
								},
								{
									"key": "username",
									"value": "FinancialPlannerServiceUser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n  \"expenses\":{{expenses4}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
						},
						"url": {
							"raw": "{{server}}/expensesPresentValue",
							"host": [
								"{{server}}"
							],
							"path": [
								"expensesPresentValue"
							]
						},
						"description": "Calculating present Value for the year 2020 from the Family total expenses of totalABND. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "FamilyTotalExpABND_Primary_ExpPresentValue",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n  \"expenses\":{{expenses4}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
								},
								"url": {
									"raw": "{{server}}/expensesPresentValue",
									"host": [
										"{{server}}"
									],
									"path": [
										"expensesPresentValue"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 15:57:00 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"edaefcfd-c10a-4e88-a75f-caa2ac1ae649-4886\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"fromYear\": 2020,\n    \"toYear\": 2024,\n    \"expenses\": [\n        {\n            \"year\": 2020,\n            \"expense\": 4339.59\n        },\n        {\n            \"year\": 2021,\n            \"expense\": 5464.05\n        },\n        {\n            \"year\": 2022,\n            \"expense\": 7614.11\n        },\n        {\n            \"year\": 2023,\n            \"expense\": 9115.56\n        },\n        {\n            \"year\": 2024,\n            \"expense\": 11239.16\n        }\n    ],\n    \"presentValueYears\": {\n        \"pvAsOnYear1\": 2020,\n        \"pvAsOnYear2\": 2019,\n        \"pvAsOnYear3\": 2018\n    },\n    \"discount\": 6,\n    \"rateOfReturns\": {\n        \"rateOfReturn1\": 2,\n        \"rateOfReturn2\": 4,\n        \"rateOfReturn3\": 6,\n        \"rateOfReturn4\": 8\n    },\n    \"pvList\": [\n        {\n            \"year\": 2020,\n            \"totalExpense\": 37772.47,\n            \"presentValue\": 32826.95,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 32826.95,\n            \"savingPerMonthForRateOfReturn2\": 32826.95,\n            \"savingPerMonthForRateOfReturn3\": 32826.95,\n            \"savingPerMonthForRateOfReturn4\": 32826.95\n        },\n        {\n            \"year\": 2019,\n            \"totalExpense\": 37772.47,\n            \"presentValue\": 30968.82,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 30968.82,\n            \"savingPerMonthForRateOfReturn2\": 30968.82,\n            \"savingPerMonthForRateOfReturn3\": 30968.82,\n            \"savingPerMonthForRateOfReturn4\": 30968.82\n        },\n        {\n            \"year\": 2018,\n            \"totalExpense\": 37772.47,\n            \"presentValue\": 29215.87,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 29215.87,\n            \"savingPerMonthForRateOfReturn2\": 29215.87,\n            \"savingPerMonthForRateOfReturn3\": 29215.87,\n            \"savingPerMonthForRateOfReturn4\": 29215.87\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "FamilyTotalExp_Primary_ExpPresentValue_Surcharge",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var response = JSON.parse(responseBody);",
									"console.log(\"Primary Retirement Year:\", response.fromYear);",
									"",
									"console.log(\"Primary Life Expectancy year:\", response.toYear);",
									"",
									"console.log(\"Present Value year:\", response.pvList[0].year);",
									"",
									"console.log(\"Surcharge for Primary (Future Dollar):\", response.pvList[0].totalExpense);",
									"",
									"console.log(\"Present Value of Surcharge for Primary:\", response.pvList[0].presentValue);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "FinancialPlannerP@ssw0rd",
									"type": "string"
								},
								{
									"key": "username",
									"value": "FinancialPlannerServiceUser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n  \"expenses\":{{expenses10}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
						},
						"url": {
							"raw": "{{server}}/expensesPresentValue",
							"host": [
								"{{server}}"
							],
							"path": [
								"expensesPresentValue"
							]
						},
						"description": "Calculating Present Value of Surcharge At Retirement from the Family total Expenses R3 primary API. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "FamilyTotalExp_Primary_ExpPresentValue_Surcharge",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n  \"expenses\":{{expenses10}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
								},
								"url": {
									"raw": "{{server}}/expensesPresentValue",
									"host": [
										"{{server}}"
									],
									"path": [
										"expensesPresentValue"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 15:57:16 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"a96f43fc-c442-4fcf-ad66-a177fdb1bbb5-5795\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"fromYear\": 2020,\n    \"toYear\": 2024,\n    \"expenses\": [\n        {\n            \"year\": 2020,\n            \"expense\": 0\n        },\n        {\n            \"year\": 2021,\n            \"expense\": 894\n        },\n        {\n            \"year\": 2022,\n            \"expense\": 2379\n        },\n        {\n            \"year\": 2023,\n            \"expense\": 4042\n        },\n        {\n            \"year\": 2024,\n            \"expense\": 5893\n        }\n    ],\n    \"presentValueYears\": {\n        \"pvAsOnYear1\": 2020,\n        \"pvAsOnYear2\": 2019,\n        \"pvAsOnYear3\": 2018\n    },\n    \"discount\": 6,\n    \"rateOfReturns\": {\n        \"rateOfReturn1\": 2,\n        \"rateOfReturn2\": 4,\n        \"rateOfReturn3\": 6,\n        \"rateOfReturn4\": 8\n    },\n    \"pvList\": [\n        {\n            \"year\": 2020,\n            \"totalExpense\": 13208,\n            \"presentValue\": 11022.25,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 11022.25,\n            \"savingPerMonthForRateOfReturn2\": 11022.25,\n            \"savingPerMonthForRateOfReturn3\": 11022.25,\n            \"savingPerMonthForRateOfReturn4\": 11022.25\n        },\n        {\n            \"year\": 2019,\n            \"totalExpense\": 13208,\n            \"presentValue\": 10398.35,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 10398.35,\n            \"savingPerMonthForRateOfReturn2\": 10398.35,\n            \"savingPerMonthForRateOfReturn3\": 10398.35,\n            \"savingPerMonthForRateOfReturn4\": 10398.35\n        },\n        {\n            \"year\": 2018,\n            \"totalExpense\": 13208,\n            \"presentValue\": 9809.76,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 9809.76,\n            \"savingPerMonthForRateOfReturn2\": 9809.76,\n            \"savingPerMonthForRateOfReturn3\": 9809.76,\n            \"savingPerMonthForRateOfReturn4\": 9809.76\n        }\n    ]\n}"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "FamilyTotalExpensesR3_getSaving_Primary",
			"item": [
				{
					"name": "FamilyTotalExp_ABD_Primary_getSaving",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var response = JSON.parse(responseBody);\r",
									"console.log(\"Primary Retirement Annual Expenses of ABD:\", response.expenses);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA=="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"expenses\": {{expenses5}},\r\n  \r\n  \"initalSavings\": \"{{initalSavings}}\",\r\n  \"duration\": \"{{duration}}\",\r\n  \"ror\": \"{{ror}}\",\r\n  \"term\": \"{{term}}\",\r\n  \"levelOfProtection\": \"{{levelOfProtection}}\"\r\n}\r\n"
						},
						"url": {
							"raw": "{{server}}/monthly/getSavings",
							"host": [
								"{{server}}"
							],
							"path": [
								"monthly",
								"getSavings"
							]
						},
						"description": "Calculating annual expenses from retirement to till life expectancy from the Family total expenses R3 primary of totalABD. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "FamilyTotalExp_ABD_Primary_getSaving",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"expenses\": {{expenses5}},\r\n  \r\n  \"initalSavings\": \"{{initalSavings}}\",\r\n  \"duration\": \"{{duration}}\",\r\n  \"ror\": \"{{ror}}\",\r\n  \"term\": \"{{term}}\",\r\n  \"levelOfProtection\": \"{{levelOfProtection}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "{{server}}/monthly/getSavings",
									"host": [
										"{{server}}"
									],
									"path": [
										"monthly",
										"getSavings"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 16:03:56 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"e2ef4240-ab98-43b4-97ef-9cd851fda658-4765\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"initalSavings\": 0,\n    \"duration\": 32,\n    \"ror\": 5.5,\n    \"levelOfProtection\": 100,\n    \"year\": [\n        2020,\n        2021,\n        2022,\n        2023,\n        2024\n    ],\n    \"expenses\": [\n        5388.91,\n        6510.64,\n        9940.89,\n        10148.58,\n        12262.68\n    ],\n    \"balances\": [\n        -2190.02,\n        -5501.77,\n        -12243.77,\n        -19193.46,\n        -28257.25\n    ],\n    \"yearlySavings\": [\n        3198.89,\n        3198.89,\n        3198.89,\n        3198.89,\n        3198.89\n    ],\n    \"totalSavings\": [\n        15994,\n        15994,\n        15994,\n        15994,\n        15994\n    ],\n    \"term\": [\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\"\n    ],\n    \"monthlySavings\": [\n        259.92,\n        259.92,\n        259.92,\n        259.92,\n        259.92\n    ],\n    \"totalMonthsToSave\": [\n        55,\n        55,\n        55,\n        55,\n        55\n    ]\n}"
						}
					]
				},
				{
					"name": "FamilyTotalExp_ABCD_Primary_getSaving",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var response = JSON.parse(responseBody);\r",
									"console.log(\"Primary Retirement Annual Expenses of ABCD:\", response.expenses);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA=="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"expenses\": {{expenses6}},\r\n  \r\n  \"initalSavings\": \"{{initalSavings}}\",\r\n  \"duration\": \"{{duration}}\",\r\n  \"ror\": \"{{ror}}\",\r\n  \"term\": \"{{term}}\",\r\n  \"levelOfProtection\": \"{{levelOfProtection}}\"\r\n}\r\n\r\n"
						},
						"url": {
							"raw": "{{server}}/monthly/getSavings",
							"host": [
								"{{server}}"
							],
							"path": [
								"monthly",
								"getSavings"
							]
						},
						"description": "Calculating annual expenses from retirement to till life expectancy from the Family total expensesR3 primary of totalABCD. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "FamilyTotalExp_ABCD_Primary_getSaving",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"expenses\": {{expenses6}},\r\n  \r\n  \"initalSavings\": \"{{initalSavings}}\",\r\n  \"duration\": \"{{duration}}\",\r\n  \"ror\": \"{{ror}}\",\r\n  \"term\": \"{{term}}\",\r\n  \"levelOfProtection\": \"{{levelOfProtection}}\"\r\n}\r\n\r\n"
								},
								"url": {
									"raw": "{{server}}/monthly/getSavings",
									"host": [
										"{{server}}"
									],
									"path": [
										"monthly",
										"getSavings"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 16:04:03 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"1c3c38cd-3e58-4a2d-a0d6-8f2bc983e7c6-7646\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"initalSavings\": 0,\n    \"duration\": 32,\n    \"ror\": 5.5,\n    \"levelOfProtection\": 100,\n    \"year\": [\n        2020,\n        2021,\n        2022,\n        2023,\n        2024\n    ],\n    \"expenses\": [\n        5652.98,\n        6790.97,\n        10237.49,\n        10463.36,\n        12595.64\n    ],\n    \"balances\": [\n        -2346.47,\n        -5830.93,\n        -12761.91,\n        -19918.76,\n        -29207.89\n    ],\n    \"yearlySavings\": [\n        3306.51,\n        3306.51,\n        3306.51,\n        3306.51,\n        3306.51\n    ],\n    \"totalSavings\": [\n        16533,\n        16533,\n        16533,\n        16533,\n        16533\n    ],\n    \"term\": [\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\"\n    ],\n    \"monthlySavings\": [\n        268.67,\n        268.67,\n        268.67,\n        268.67,\n        268.67\n    ],\n    \"totalMonthsToSave\": [\n        55,\n        55,\n        55,\n        55,\n        55\n    ]\n}"
						}
					]
				},
				{
					"name": "FamilyTotalExp_ABFD_Primary_getSaving",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var response = JSON.parse(responseBody);\r",
									"console.log(\"Primary Retirement Annual Expenses of ABFD:\", response.expenses);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA=="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"expenses\": {{expenses7}},\r\n  \r\n  \"initalSavings\": \"{{initalSavings}}\",\r\n  \"duration\": \"{{duration}}\",\r\n  \"ror\": \"{{ror}}\",\r\n  \"term\": \"{{term}}\",\r\n  \"levelOfProtection\": \"{{levelOfProtection}}\"\r\n}\r\n\r\n"
						},
						"url": {
							"raw": "{{server}}/monthly/getSavings",
							"host": [
								"{{server}}"
							],
							"path": [
								"monthly",
								"getSavings"
							]
						},
						"description": "Calculating annual expenses from retirement to till life expectancy from the Family total expensesR3 primary of totalABFD. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "FamilyTotalExp_ABFD_Primary_getSaving",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"expenses\": {{expenses7}},\r\n  \r\n  \"initalSavings\": \"{{initalSavings}}\",\r\n  \"duration\": \"{{duration}}\",\r\n  \"ror\": \"{{ror}}\",\r\n  \"term\": \"{{term}}\",\r\n  \"levelOfProtection\": \"{{levelOfProtection}}\"\r\n}\r\n\r\n"
								},
								"url": {
									"raw": "{{server}}/monthly/getSavings",
									"host": [
										"{{server}}"
									],
									"path": [
										"monthly",
										"getSavings"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 16:04:11 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"65a4ad06-255d-4fde-94b4-0e57e0d0f781-7469\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"initalSavings\": 0,\n    \"duration\": 32,\n    \"ror\": 5.5,\n    \"levelOfProtection\": 100,\n    \"year\": [\n        2020,\n        2021,\n        2022,\n        2023,\n        2024\n    ],\n    \"expenses\": [\n        5150.79,\n        6333.63,\n        8545.58,\n        10113.3,\n        12306.2\n    ],\n    \"balances\": [\n        -2082.18,\n        -5347.2,\n        -10824.17,\n        -17868.86,\n        -27106.45\n    ],\n    \"yearlySavings\": [\n        3068.61,\n        3068.61,\n        3068.61,\n        3068.61,\n        3068.61\n    ],\n    \"totalSavings\": [\n        15343,\n        15343,\n        15343,\n        15343,\n        15343\n    ],\n    \"term\": [\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\"\n    ],\n    \"monthlySavings\": [\n        249.34,\n        249.34,\n        249.34,\n        249.34,\n        249.34\n    ],\n    \"totalMonthsToSave\": [\n        55,\n        55,\n        55,\n        55,\n        55\n    ]\n}"
						}
					]
				},
				{
					"name": "FamilyTotalExp_ABGD_Primary_getSaving",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var response = JSON.parse(responseBody);\r",
									"console.log(\"Primary Retirement Annual Expenses of ABGD:\", response.expenses);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA=="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"expenses\": {{expenses8}},\r\n  \r\n  \"initalSavings\": \"{{initalSavings}}\",\r\n  \"duration\": \"{{duration}}\",\r\n  \"ror\": \"{{ror}}\",\r\n  \"term\": \"{{term}}\",\r\n  \"levelOfProtection\": \"{{levelOfProtection}}\"\r\n}\r\n"
						},
						"url": {
							"raw": "{{server}}/monthly/getSavings",
							"host": [
								"{{server}}"
							],
							"path": [
								"monthly",
								"getSavings"
							]
						},
						"description": "Calculating annual expenses from retirement to till life expectancy from the Family total expensesR3 primary of totalABGD. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "FamilyTotalExp_ABGD_Primary_getSaving",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"expenses\": {{expenses8}},\r\n  \r\n  \"initalSavings\": \"{{initalSavings}}\",\r\n  \"duration\": \"{{duration}}\",\r\n  \"ror\": \"{{ror}}\",\r\n  \"term\": \"{{term}}\",\r\n  \"levelOfProtection\": \"{{levelOfProtection}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "{{server}}/monthly/getSavings",
									"host": [
										"{{server}}"
									],
									"path": [
										"monthly",
										"getSavings"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 16:04:15 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"cfe4f1e2-bb48-4c5d-b5a4-458821ed1d8a-1825\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"initalSavings\": 0,\n    \"duration\": 32,\n    \"ror\": 5.5,\n    \"levelOfProtection\": 100,\n    \"year\": [\n        2020,\n        2021,\n        2022,\n        2023,\n        2024\n    ],\n    \"expenses\": [\n        4539.59,\n        5679.65,\n        7846.28,\n        9365.49,\n        11508.08\n    ],\n    \"balances\": [\n        -1724.74,\n        -4589.54,\n        -9620.97,\n        -16171.61,\n        -24864.84\n    ],\n    \"yearlySavings\": [\n        2814.85,\n        2814.85,\n        2814.85,\n        2814.85,\n        2814.85\n    ],\n    \"totalSavings\": [\n        14074,\n        14074,\n        14074,\n        14074,\n        14074\n    ],\n    \"term\": [\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\"\n    ],\n    \"monthlySavings\": [\n        228.72,\n        228.72,\n        228.72,\n        228.72,\n        228.72\n    ],\n    \"totalMonthsToSave\": [\n        55,\n        55,\n        55,\n        55,\n        55\n    ]\n}"
						}
					]
				},
				{
					"name": "FamilyTotalExp_ABND_Primary_getSaving",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var response = JSON.parse(responseBody);\r",
									"console.log(\"Primary Retirement Annual Expenses of ABND:\", response.expenses);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA=="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"expenses\": {{expenses9}},\r\n  \r\n  \"initalSavings\": \"{{initalSavings}}\",\r\n  \"duration\": \"{{duration}}\",\r\n  \"ror\": \"{{ror}}\",\r\n  \"term\": \"{{term}}\",\r\n  \"levelOfProtection\": \"{{levelOfProtection}}\"\r\n}\r\n\r\n"
						},
						"url": {
							"raw": "{{server}}/monthly/getSavings",
							"host": [
								"{{server}}"
							],
							"path": [
								"monthly",
								"getSavings"
							]
						},
						"description": "Calculating annual expenses from retirement to till life expectancy from the Family total expensesR3 primary of totalABND. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "FamilyTotalExp_ABND_Primary_getSaving",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"expenses\": {{expenses9}},\r\n  \r\n  \"initalSavings\": \"{{initalSavings}}\",\r\n  \"duration\": \"{{duration}}\",\r\n  \"ror\": \"{{ror}}\",\r\n  \"term\": \"{{term}}\",\r\n  \"levelOfProtection\": \"{{levelOfProtection}}\"\r\n}\r\n\r\n"
								},
								"url": {
									"raw": "{{server}}/monthly/getSavings",
									"host": [
										"{{server}}"
									],
									"path": [
										"monthly",
										"getSavings"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 16:04:26 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"5d80118d-bbeb-4216-801b-e8d477e903f2-9857\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"initalSavings\": 0,\n    \"duration\": 32,\n    \"ror\": 5.5,\n    \"levelOfProtection\": 100,\n    \"year\": [\n        2020,\n        2021,\n        2022,\n        2023,\n        2024\n    ],\n    \"expenses\": [\n        4339.59,\n        5464.05,\n        7614.11,\n        9115.56,\n        11239.16\n    ],\n    \"balances\": [\n        -1609.08,\n        -4342.62,\n        -9226.22,\n        -15611.27,\n        -24119.92\n    ],\n    \"yearlySavings\": [\n        2730.51,\n        2730.51,\n        2730.51,\n        2730.51,\n        2730.51\n    ],\n    \"totalSavings\": [\n        13653,\n        13653,\n        13653,\n        13653,\n        13653\n    ],\n    \"term\": [\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\"\n    ],\n    \"monthlySavings\": [\n        221.86,\n        221.86,\n        221.86,\n        221.86,\n        221.86\n    ],\n    \"totalMonthsToSave\": [\n        55,\n        55,\n        55,\n        55,\n        55\n    ]\n}"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "FamilyTotalExpensesR3_ExpensesPV_Spouse",
			"item": [
				{
					"name": "FamilyTotalExpABD_Spouse_ExpPresentValue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var response = JSON.parse(responseBody);",
									"console.log(\"Spouse Retirement Year:\", response.fromYear);",
									"",
									"console.log(\"Spouse Life Expectancy year:\", response.toYear);",
									"",
									"console.log(\"Present Value year:\", response.pvList[0].year);",
									"",
									"console.log(\"TotalExpense of ABD for Spouse(Future Dollar):\", response.pvList[0].totalExpense);",
									"",
									"console.log(\"Present Value of ABD for Spouse:\", response.pvList[0].presentValue);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "FinancialPlannerP@ssw0rd",
									"type": "string"
								},
								{
									"key": "username",
									"value": "FinancialPlannerServiceUser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n  \"expenses\":{{expenses0}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
						},
						"url": {
							"raw": "{{server}}/expensesPresentValue",
							"host": [
								"{{server}}"
							],
							"path": [
								"expensesPresentValue"
							]
						},
						"description": "Calculating present Value for the year 2020 from the Family total expensesR3 spouse of totalABD. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "FamilyTotalExpABD_Spouse_ExpPresentValue",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n  \"expenses\":{{expenses0}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
								},
								"url": {
									"raw": "{{server}}/expensesPresentValue",
									"host": [
										"{{server}}"
									],
									"path": [
										"expensesPresentValue"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 16:04:39 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"49b53326-0330-44d2-8836-a2e9ee1bfad5-3180\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"fromYear\": 2020,\n    \"toYear\": 2024,\n    \"expenses\": [\n        {\n            \"year\": 2020,\n            \"expense\": 8136.91\n        },\n        {\n            \"year\": 2021,\n            \"expense\": 9313.64\n        },\n        {\n            \"year\": 2022,\n            \"expense\": 12799.89\n        },\n        {\n            \"year\": 2023,\n            \"expense\": 13064.58\n        },\n        {\n            \"year\": 2024,\n            \"expense\": 15237.18\n        }\n    ],\n    \"presentValueYears\": {\n        \"pvAsOnYear1\": 2020,\n        \"pvAsOnYear2\": 2019,\n        \"pvAsOnYear3\": 2018\n    },\n    \"discount\": 6,\n    \"rateOfReturns\": {\n        \"rateOfReturn1\": 2,\n        \"rateOfReturn2\": 4,\n        \"rateOfReturn3\": 6,\n        \"rateOfReturn4\": 8\n    },\n    \"pvList\": [\n        {\n            \"year\": 2020,\n            \"totalExpense\": 58552.2,\n            \"presentValue\": 51353.77,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 51353.77,\n            \"savingPerMonthForRateOfReturn2\": 51353.77,\n            \"savingPerMonthForRateOfReturn3\": 51353.77,\n            \"savingPerMonthForRateOfReturn4\": 51353.77\n        },\n        {\n            \"year\": 2019,\n            \"totalExpense\": 58552.2,\n            \"presentValue\": 48446.95,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 48446.95,\n            \"savingPerMonthForRateOfReturn2\": 48446.95,\n            \"savingPerMonthForRateOfReturn3\": 48446.95,\n            \"savingPerMonthForRateOfReturn4\": 48446.95\n        },\n        {\n            \"year\": 2018,\n            \"totalExpense\": 58552.2,\n            \"presentValue\": 45704.67,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 45704.67,\n            \"savingPerMonthForRateOfReturn2\": 45704.67,\n            \"savingPerMonthForRateOfReturn3\": 45704.67,\n            \"savingPerMonthForRateOfReturn4\": 45704.67\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "FamilyTotalExpABCD_Spouse_ExpPresentValue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var response = JSON.parse(responseBody);",
									"console.log(\"Spouse Retirement Year:\", response.fromYear);",
									"",
									"console.log(\"Spouse Life Expectancy year:\", response.toYear);",
									"",
									"console.log(\"Present Value year:\", response.pvList[0].year);",
									"",
									"console.log(\"TotalExpense of ABCD for Spouse(Future Dollar):\", response.pvList[0].totalExpense);",
									"",
									"console.log(\"Present Value of ABCD for Spouse:\", response.pvList[0].presentValue);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "FinancialPlannerP@ssw0rd",
									"type": "string"
								},
								{
									"key": "username",
									"value": "FinancialPlannerServiceUser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n  \"expenses\":{{expenses1}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
						},
						"url": {
							"raw": "{{server}}/expensesPresentValue",
							"host": [
								"{{server}}"
							],
							"path": [
								"expensesPresentValue"
							]
						},
						"description": "Calculating present Value for the year 2020 from the Family total expensesR3 spouse of totalABCD. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "FamilyTotalExpABCD_Spouse_ExpPresentValue",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n  \"expenses\":{{expenses1}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
								},
								"url": {
									"raw": "{{server}}/expensesPresentValue",
									"host": [
										"{{server}}"
									],
									"path": [
										"expensesPresentValue"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 16:04:49 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"02348982-cbd1-4f6b-a6de-7f22f5c9c680-5816\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"fromYear\": 2020,\n    \"toYear\": 2024,\n    \"expenses\": [\n        {\n            \"year\": 2020,\n            \"expense\": 8400.98\n        },\n        {\n            \"year\": 2021,\n            \"expense\": 9593.97\n        },\n        {\n            \"year\": 2022,\n            \"expense\": 13096.49\n        },\n        {\n            \"year\": 2023,\n            \"expense\": 13379.36\n        },\n        {\n            \"year\": 2024,\n            \"expense\": 15570.14\n        }\n    ],\n    \"presentValueYears\": {\n        \"pvAsOnYear1\": 2020,\n        \"pvAsOnYear2\": 2019,\n        \"pvAsOnYear3\": 2018\n    },\n    \"discount\": 6,\n    \"rateOfReturns\": {\n        \"rateOfReturn1\": 2,\n        \"rateOfReturn2\": 4,\n        \"rateOfReturn3\": 6,\n        \"rateOfReturn4\": 8\n    },\n    \"pvList\": [\n        {\n            \"year\": 2020,\n            \"totalExpense\": 60040.94,\n            \"presentValue\": 52674.3,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 52674.3,\n            \"savingPerMonthForRateOfReturn2\": 52674.3,\n            \"savingPerMonthForRateOfReturn3\": 52674.3,\n            \"savingPerMonthForRateOfReturn4\": 52674.3\n        },\n        {\n            \"year\": 2019,\n            \"totalExpense\": 60040.94,\n            \"presentValue\": 49692.74,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 49692.74,\n            \"savingPerMonthForRateOfReturn2\": 49692.74,\n            \"savingPerMonthForRateOfReturn3\": 49692.74,\n            \"savingPerMonthForRateOfReturn4\": 49692.74\n        },\n        {\n            \"year\": 2018,\n            \"totalExpense\": 60040.94,\n            \"presentValue\": 46879.94,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 46879.94,\n            \"savingPerMonthForRateOfReturn2\": 46879.94,\n            \"savingPerMonthForRateOfReturn3\": 46879.94,\n            \"savingPerMonthForRateOfReturn4\": 46879.94\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "FamilyTotalExpABFD_Spouse_ExpPresentValue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var response = JSON.parse(responseBody);",
									"console.log(\"Spouse Retirement Year:\", response.fromYear);",
									"",
									"console.log(\"Spouse Life Expectancy year:\", response.toYear);",
									"",
									"console.log(\"Present Value year:\", response.pvList[0].year);",
									"",
									"console.log(\"TotalExpense of ABFD for Spouse(Future Dollar):\", response.pvList[0].totalExpense);",
									"",
									"console.log(\"Present Value of ABFD for Spouse:\", response.pvList[0].presentValue);",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "FinancialPlannerP@ssw0rd",
									"type": "string"
								},
								{
									"key": "username",
									"value": "FinancialPlannerServiceUser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n  \"expenses\":{{expenses2}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
						},
						"url": {
							"raw": "{{server}}/expensesPresentValue",
							"host": [
								"{{server}}"
							],
							"path": [
								"expensesPresentValue"
							]
						},
						"description": "Calculating present Value for the year 2020 from the Family total expensesR3 spouse of totalABFD. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "FamilyTotalExpABFD_Spouse_ExpPresentValue",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n  \"expenses\":{{expenses2}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
								},
								"url": {
									"raw": "{{server}}/expensesPresentValue",
									"host": [
										"{{server}}"
									],
									"path": [
										"expensesPresentValue"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 16:04:57 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"289442ea-b818-4dff-951e-1869836a7b40-7904\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"fromYear\": 2020,\n    \"toYear\": 2024,\n    \"expenses\": [\n        {\n            \"year\": 2020,\n            \"expense\": 7898.79\n        },\n        {\n            \"year\": 2021,\n            \"expense\": 9136.63\n        },\n        {\n            \"year\": 2022,\n            \"expense\": 11404.58\n        },\n        {\n            \"year\": 2023,\n            \"expense\": 13029.3\n        },\n        {\n            \"year\": 2024,\n            \"expense\": 15280.7\n        }\n    ],\n    \"presentValueYears\": {\n        \"pvAsOnYear1\": 2020,\n        \"pvAsOnYear2\": 2019,\n        \"pvAsOnYear3\": 2018\n    },\n    \"discount\": 6,\n    \"rateOfReturns\": {\n        \"rateOfReturn1\": 2,\n        \"rateOfReturn2\": 4,\n        \"rateOfReturn3\": 6,\n        \"rateOfReturn4\": 8\n    },\n    \"pvList\": [\n        {\n            \"year\": 2020,\n            \"totalExpense\": 56750,\n            \"presentValue\": 49711.69,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 49711.69,\n            \"savingPerMonthForRateOfReturn2\": 49711.69,\n            \"savingPerMonthForRateOfReturn3\": 49711.69,\n            \"savingPerMonthForRateOfReturn4\": 49711.69\n        },\n        {\n            \"year\": 2019,\n            \"totalExpense\": 56750,\n            \"presentValue\": 46897.82,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 46897.82,\n            \"savingPerMonthForRateOfReturn2\": 46897.82,\n            \"savingPerMonthForRateOfReturn3\": 46897.82,\n            \"savingPerMonthForRateOfReturn4\": 46897.82\n        },\n        {\n            \"year\": 2018,\n            \"totalExpense\": 56750,\n            \"presentValue\": 44243.22,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 44243.22,\n            \"savingPerMonthForRateOfReturn2\": 44243.22,\n            \"savingPerMonthForRateOfReturn3\": 44243.22,\n            \"savingPerMonthForRateOfReturn4\": 44243.22\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "FamilyTotalExpABGD_Spouse_ExpPresentValue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var response = JSON.parse(responseBody);",
									"console.log(\"Spouse Retirement Year:\", response.fromYear);",
									"",
									"console.log(\"Spouse Life Expectancy year:\", response.toYear);",
									"",
									"console.log(\"Present Value year:\", response.pvList[0].year);",
									"",
									"console.log(\"TotalExpense of ABGD for Spouse(Future Dollar):\", response.pvList[0].totalExpense);",
									"",
									"console.log(\"Present Value of ABGD for Spouse:\", response.pvList[0].presentValue);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "FinancialPlannerP@ssw0rd",
									"type": "string"
								},
								{
									"key": "username",
									"value": "FinancialPlannerServiceUser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n  \"expenses\":{{expenses3}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
						},
						"url": {
							"raw": "{{server}}/expensesPresentValue",
							"host": [
								"{{server}}"
							],
							"path": [
								"expensesPresentValue"
							]
						},
						"description": "Calculating present Value for the year 2020 from the Family total expensesR3 spouse of totalABGD. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "FamilyTotalExpABGD_Spouse_ExpPresentValue",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n  \"expenses\":{{expenses3}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
								},
								"url": {
									"raw": "{{server}}/expensesPresentValue",
									"host": [
										"{{server}}"
									],
									"path": [
										"expensesPresentValue"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 16:05:04 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"79f5ca0c-da8d-4caa-9db9-cce49aae3ac4-2811\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"fromYear\": 2020,\n    \"toYear\": 2024,\n    \"expenses\": [\n        {\n            \"year\": 2020,\n            \"expense\": 7287.59\n        },\n        {\n            \"year\": 2021,\n            \"expense\": 8482.65\n        },\n        {\n            \"year\": 2022,\n            \"expense\": 10705.28\n        },\n        {\n            \"year\": 2023,\n            \"expense\": 12281.49\n        },\n        {\n            \"year\": 2024,\n            \"expense\": 14482.58\n        }\n    ],\n    \"presentValueYears\": {\n        \"pvAsOnYear1\": 2020,\n        \"pvAsOnYear2\": 2019,\n        \"pvAsOnYear3\": 2018\n    },\n    \"discount\": 6,\n    \"rateOfReturns\": {\n        \"rateOfReturn1\": 2,\n        \"rateOfReturn2\": 4,\n        \"rateOfReturn3\": 6,\n        \"rateOfReturn4\": 8\n    },\n    \"pvList\": [\n        {\n            \"year\": 2020,\n            \"totalExpense\": 53239.59,\n            \"presentValue\": 46601.09,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 46601.09,\n            \"savingPerMonthForRateOfReturn2\": 46601.09,\n            \"savingPerMonthForRateOfReturn3\": 46601.09,\n            \"savingPerMonthForRateOfReturn4\": 46601.09\n        },\n        {\n            \"year\": 2019,\n            \"totalExpense\": 53239.59,\n            \"presentValue\": 43963.29,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 43963.29,\n            \"savingPerMonthForRateOfReturn2\": 43963.29,\n            \"savingPerMonthForRateOfReturn3\": 43963.29,\n            \"savingPerMonthForRateOfReturn4\": 43963.29\n        },\n        {\n            \"year\": 2018,\n            \"totalExpense\": 53239.59,\n            \"presentValue\": 41474.8,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 41474.8,\n            \"savingPerMonthForRateOfReturn2\": 41474.8,\n            \"savingPerMonthForRateOfReturn3\": 41474.8,\n            \"savingPerMonthForRateOfReturn4\": 41474.8\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "FamilyTotalExpABND_Spouse_ExpPresentValue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var response = JSON.parse(responseBody);",
									"console.log(\"Spouse Retirement Year:\", response.fromYear);",
									"",
									"console.log(\"Spouse Life Expectancy year:\", response.toYear);",
									"",
									"console.log(\"Present Value year:\", response.pvList[0].year);",
									"",
									"console.log(\"TotalExpense of ABND for Spouse(Future Dollar):\", response.pvList[0].totalExpense);",
									"",
									"console.log(\"Present Value of ABND for Spouse:\", response.pvList[0].presentValue);",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "FinancialPlannerP@ssw0rd",
									"type": "string"
								},
								{
									"key": "username",
									"value": "FinancialPlannerServiceUser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n  \"expenses\":{{expenses4}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
						},
						"url": {
							"raw": "{{server}}/expensesPresentValue",
							"host": [
								"{{server}}"
							],
							"path": [
								"expensesPresentValue"
							]
						},
						"description": "Calculating present Value for the year 2020 from the Family total expensesR3 spouse of totalABND. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "FamilyTotalExpABND_Spouse_ExpPresentValue",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n  \"expenses\":{{expenses4}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
								},
								"url": {
									"raw": "{{server}}/expensesPresentValue",
									"host": [
										"{{server}}"
									],
									"path": [
										"expensesPresentValue"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 16:05:12 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"53488ecd-a962-4c0d-abed-9a5891d48877-7482\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"fromYear\": 2020,\n    \"toYear\": 2024,\n    \"expenses\": [\n        {\n            \"year\": 2020,\n            \"expense\": 7087.59\n        },\n        {\n            \"year\": 2021,\n            \"expense\": 8267.05\n        },\n        {\n            \"year\": 2022,\n            \"expense\": 10473.11\n        },\n        {\n            \"year\": 2023,\n            \"expense\": 12031.56\n        },\n        {\n            \"year\": 2024,\n            \"expense\": 14213.66\n        }\n    ],\n    \"presentValueYears\": {\n        \"pvAsOnYear1\": 2020,\n        \"pvAsOnYear2\": 2019,\n        \"pvAsOnYear3\": 2018\n    },\n    \"discount\": 6,\n    \"rateOfReturns\": {\n        \"rateOfReturn1\": 2,\n        \"rateOfReturn2\": 4,\n        \"rateOfReturn3\": 6,\n        \"rateOfReturn4\": 8\n    },\n    \"pvList\": [\n        {\n            \"year\": 2020,\n            \"totalExpense\": 52072.97,\n            \"presentValue\": 45568.2,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 45568.2,\n            \"savingPerMonthForRateOfReturn2\": 45568.2,\n            \"savingPerMonthForRateOfReturn3\": 45568.2,\n            \"savingPerMonthForRateOfReturn4\": 45568.2\n        },\n        {\n            \"year\": 2019,\n            \"totalExpense\": 52072.97,\n            \"presentValue\": 42988.87,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 42988.87,\n            \"savingPerMonthForRateOfReturn2\": 42988.87,\n            \"savingPerMonthForRateOfReturn3\": 42988.87,\n            \"savingPerMonthForRateOfReturn4\": 42988.87\n        },\n        {\n            \"year\": 2018,\n            \"totalExpense\": 52072.97,\n            \"presentValue\": 40555.54,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 40555.54,\n            \"savingPerMonthForRateOfReturn2\": 40555.54,\n            \"savingPerMonthForRateOfReturn3\": 40555.54,\n            \"savingPerMonthForRateOfReturn4\": 40555.54\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "FamilyTotalExp_Spouse_ExpPresentValue_Surcharge",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var response = JSON.parse(responseBody);",
									"console.log(\"Spouse Retirement Year:\", response.fromYear);",
									"",
									"console.log(\"Spouse Life Expectancy year:\", response.toYear);",
									"",
									"console.log(\"Spouse Value year:\", response.pvList[0].year);",
									"",
									"console.log(\"TotalExpense of Surcharge for Spouse (Future Dollar):\", response.pvList[0].totalExpense);",
									"",
									"console.log(\"Present Value of Surcharge for Spouse:\", response.pvList[0].presentValue);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "FinancialPlannerP@ssw0rd",
									"type": "string"
								},
								{
									"key": "username",
									"value": "FinancialPlannerServiceUser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n  \"expenses\":{{expenses10}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
						},
						"url": {
							"raw": "{{server}}/expensesPresentValue",
							"host": [
								"{{server}}"
							],
							"path": [
								"expensesPresentValue"
							]
						},
						"description": "Calculating Present Value of Surcharge At Retirement from the Family total Expenses R3 spouse API. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "FamilyTotalExp_Spouse_ExpPresentValue_Surcharge",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"fromYear\": {{fromYear}},\n  \"toYear\": {{toYear}},\n  \"expenses\":{{expenses10}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
								},
								"url": {
									"raw": "{{server}}/expensesPresentValue",
									"host": [
										"{{server}}"
									],
									"path": [
										"expensesPresentValue"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 16:05:24 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"3329ffca-cd6c-469f-8323-ea4c7e90e49d-2827\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"fromYear\": 2020,\n    \"toYear\": 2024,\n    \"expenses\": [\n        {\n            \"year\": 2020,\n            \"expense\": 0\n        },\n        {\n            \"year\": 2021,\n            \"expense\": 894\n        },\n        {\n            \"year\": 2022,\n            \"expense\": 2379\n        },\n        {\n            \"year\": 2023,\n            \"expense\": 4042\n        },\n        {\n            \"year\": 2024,\n            \"expense\": 5893\n        }\n    ],\n    \"presentValueYears\": {\n        \"pvAsOnYear1\": 2020,\n        \"pvAsOnYear2\": 2019,\n        \"pvAsOnYear3\": 2018\n    },\n    \"discount\": 6,\n    \"rateOfReturns\": {\n        \"rateOfReturn1\": 2,\n        \"rateOfReturn2\": 4,\n        \"rateOfReturn3\": 6,\n        \"rateOfReturn4\": 8\n    },\n    \"pvList\": [\n        {\n            \"year\": 2020,\n            \"totalExpense\": 13208,\n            \"presentValue\": 11022.25,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 11022.25,\n            \"savingPerMonthForRateOfReturn2\": 11022.25,\n            \"savingPerMonthForRateOfReturn3\": 11022.25,\n            \"savingPerMonthForRateOfReturn4\": 11022.25\n        },\n        {\n            \"year\": 2019,\n            \"totalExpense\": 13208,\n            \"presentValue\": 10398.35,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 10398.35,\n            \"savingPerMonthForRateOfReturn2\": 10398.35,\n            \"savingPerMonthForRateOfReturn3\": 10398.35,\n            \"savingPerMonthForRateOfReturn4\": 10398.35\n        },\n        {\n            \"year\": 2018,\n            \"totalExpense\": 13208,\n            \"presentValue\": 9809.76,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 9809.76,\n            \"savingPerMonthForRateOfReturn2\": 9809.76,\n            \"savingPerMonthForRateOfReturn3\": 9809.76,\n            \"savingPerMonthForRateOfReturn4\": 9809.76\n        }\n    ]\n}"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "FamilyTotalExpensesR3_getSaving_Spouse",
			"item": [
				{
					"name": "FamilyTotalExp_ABD_Spouse_getSaving",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var response = JSON.parse(responseBody);\r",
									"console.log(\"Spouse Retirement Annual Expenses of ABD:\", response.expenses);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA=="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"expenses\": {{expenses5}},\r\n  \r\n  \"initalSavings\": \"{{initalSavings}}\",\r\n  \"duration\": \"{{duration}}\",\r\n  \"ror\": \"{{ror}}\",\r\n  \"term\": \"{{term}}\",\r\n  \"levelOfProtection\": \"{{levelOfProtection}}\"\r\n}\r\n\r\n"
						},
						"url": {
							"raw": "{{server}}/monthly/getSavings",
							"host": [
								"{{server}}"
							],
							"path": [
								"monthly",
								"getSavings"
							]
						},
						"description": "Calculating annual expenses from retirement to till life expectancy from the Family total expensesR3 spouse of totalABD. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "FamilyTotalExp_ABD_Spouse_getSaving",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"expenses\": {{expenses9}},\r\n  \r\n  \"initalSavings\": \"{{initalSavings}}\",\r\n  \"duration\": \"{{duration}}\",\r\n  \"ror\": \"{{ror}}\",\r\n  \"term\": \"{{term}}\",\r\n  \"levelOfProtection\": \"{{levelOfProtection}}\"\r\n}\r\n\r\n"
								},
								"url": {
									"raw": "{{server}}/monthly/getSavings",
									"host": [
										"{{server}}"
									],
									"path": [
										"monthly",
										"getSavings"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 16:05:42 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"aa7019d0-5c63-4a04-9cc4-d4cf101f1d7c-9858\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"initalSavings\": 0,\n    \"duration\": 32,\n    \"ror\": 5.5,\n    \"levelOfProtection\": 100,\n    \"year\": [\n        2020,\n        2021,\n        2022,\n        2023,\n        2024\n    ],\n    \"expenses\": [\n        7087.59,\n        8267.05,\n        10473.11,\n        12031.56,\n        14213.66\n    ],\n    \"balances\": [\n        -3323.32,\n        -7826.1,\n        -14534.94,\n        -22802.23,\n        -33251.62\n    ],\n    \"yearlySavings\": [\n        3764.27,\n        3764.27,\n        3764.27,\n        3764.27,\n        3764.27\n    ],\n    \"totalSavings\": [\n        18821,\n        18821,\n        18821,\n        18821,\n        18821\n    ],\n    \"term\": [\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\"\n    ],\n    \"monthlySavings\": [\n        305.86,\n        305.86,\n        305.86,\n        305.86,\n        305.86\n    ],\n    \"totalMonthsToSave\": [\n        55,\n        55,\n        55,\n        55,\n        55\n    ]\n}"
						}
					]
				},
				{
					"name": "FamilyTotalExp_ABCD_Spouse_getSaving",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var response = JSON.parse(responseBody);\r",
									"console.log(\"Spouse Retirement Annual Expenses of ABCD:\", response.expenses);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA=="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"expenses\": {{expenses6}},\r\n  \r\n  \"initalSavings\": \"{{initalSavings}}\",\r\n  \"duration\": \"{{duration}}\",\r\n  \"ror\": \"{{ror}}\",\r\n  \"term\": \"{{term}}\",\r\n  \"levelOfProtection\": \"{{levelOfProtection}}\"\r\n}\r\n\r\n"
						},
						"url": {
							"raw": "{{server}}/monthly/getSavings",
							"host": [
								"{{server}}"
							],
							"path": [
								"monthly",
								"getSavings"
							]
						},
						"description": "Calculating annual expenses from retirement to till life expectancy from the Family total expensesR3 spouse of totalABCD. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "FamilyTotalExp_ABCD_Spouse_getSaving",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"expenses\": {{expenses9}},\r\n  \r\n  \"initalSavings\": \"{{initalSavings}}\",\r\n  \"duration\": \"{{duration}}\",\r\n  \"ror\": \"{{ror}}\",\r\n  \"term\": \"{{term}}\",\r\n  \"levelOfProtection\": \"{{levelOfProtection}}\"\r\n}\r\n\r\n"
								},
								"url": {
									"raw": "{{server}}/monthly/getSavings",
									"host": [
										"{{server}}"
									],
									"path": [
										"monthly",
										"getSavings"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 16:05:48 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"849d92f8-99e8-4161-8802-be5b8cb5ce12-5428\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"initalSavings\": 0,\n    \"duration\": 32,\n    \"ror\": 5.5,\n    \"levelOfProtection\": 100,\n    \"year\": [\n        2020,\n        2021,\n        2022,\n        2023,\n        2024\n    ],\n    \"expenses\": [\n        7087.59,\n        8267.05,\n        10473.11,\n        12031.56,\n        14213.66\n    ],\n    \"balances\": [\n        -3323.32,\n        -7826.1,\n        -14534.94,\n        -22802.23,\n        -33251.62\n    ],\n    \"yearlySavings\": [\n        3764.27,\n        3764.27,\n        3764.27,\n        3764.27,\n        3764.27\n    ],\n    \"totalSavings\": [\n        18821,\n        18821,\n        18821,\n        18821,\n        18821\n    ],\n    \"term\": [\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\"\n    ],\n    \"monthlySavings\": [\n        305.86,\n        305.86,\n        305.86,\n        305.86,\n        305.86\n    ],\n    \"totalMonthsToSave\": [\n        55,\n        55,\n        55,\n        55,\n        55\n    ]\n}"
						}
					]
				},
				{
					"name": "FamilyTotalExp_ABFD_Spouse_getSaving",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var response = JSON.parse(responseBody);\r",
									"console.log(\"Spouse Retirement Annual Expenses of ABFD:\", response.expenses);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA=="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"expenses\": {{expenses7}},\r\n  \r\n  \"initalSavings\": \"{{initalSavings}}\",\r\n  \"duration\": \"{{duration}}\",\r\n  \"ror\": \"{{ror}}\",\r\n  \"term\": \"{{term}}\",\r\n  \"levelOfProtection\": \"{{levelOfProtection}}\"\r\n}\r\n\r\n"
						},
						"url": {
							"raw": "{{server}}/monthly/getSavings",
							"host": [
								"{{server}}"
							],
							"path": [
								"monthly",
								"getSavings"
							]
						},
						"description": "Calculating annual expenses from retirement to till life expectancy from the Family total expensesR3 spouse of totalABFD. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "FamilyTotalExp_ABFD_Spouse_getSaving",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"expenses\": {{expenses7}},\r\n  \r\n  \"initalSavings\": \"{{initalSavings}}\",\r\n  \"duration\": \"{{duration}}\",\r\n  \"ror\": \"{{ror}}\",\r\n  \"term\": \"{{term}}\",\r\n  \"levelOfProtection\": \"{{levelOfProtection}}\"\r\n}\r\n\r\n"
								},
								"url": {
									"raw": "{{server}}/monthly/getSavings",
									"host": [
										"{{server}}"
									],
									"path": [
										"monthly",
										"getSavings"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 16:05:54 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"1129db43-14d7-46ee-9abd-7f35fffa6c41-8726\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"initalSavings\": 0,\n    \"duration\": 32,\n    \"ror\": 5.5,\n    \"levelOfProtection\": 100,\n    \"year\": [\n        2020,\n        2021,\n        2022,\n        2023,\n        2024\n    ],\n    \"expenses\": [\n        7898.79,\n        9136.63,\n        11404.58,\n        13029.3,\n        15280.7\n    ],\n    \"balances\": [\n        -3796.42,\n        -8830.68,\n        -16132.89,\n        -25059.82,\n        -36238.15\n    ],\n    \"yearlySavings\": [\n        4102.37,\n        4102.37,\n        4102.37,\n        4102.37,\n        4102.37\n    ],\n    \"totalSavings\": [\n        20512,\n        20512,\n        20512,\n        20512,\n        20512\n    ],\n    \"term\": [\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\"\n    ],\n    \"monthlySavings\": [\n        333.33,\n        333.33,\n        333.33,\n        333.33,\n        333.33\n    ],\n    \"totalMonthsToSave\": [\n        55,\n        55,\n        55,\n        55,\n        55\n    ]\n}"
						}
					]
				},
				{
					"name": "FamilyTotalExp_ABGD_Spouse_getSaving",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var response = JSON.parse(responseBody);\r",
									"console.log(\"Spouse Retirement Annual Expenses of ABGD:\", response.expenses);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA=="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"expenses\": {{expenses8}},\r\n  \r\n  \"initalSavings\": \"{{initalSavings}}\",\r\n  \"duration\": \"{{duration}}\",\r\n  \"ror\": \"{{ror}}\",\r\n  \"term\": \"{{term}}\",\r\n  \"levelOfProtection\": \"{{levelOfProtection}}\"\r\n}\r\n\r\n\r\n"
						},
						"url": {
							"raw": "{{server}}/monthly/getSavings",
							"host": [
								"{{server}}"
							],
							"path": [
								"monthly",
								"getSavings"
							]
						},
						"description": "Calculating annual expenses from retirement to till life expectancy from the Family total expensesR3 spouse of totalABGD. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "FamilyTotalExp_ABGD_Spouse_getSaving",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"expenses\": {{expenses8}},\r\n  \r\n  \"initalSavings\": \"{{initalSavings}}\",\r\n  \"duration\": \"{{duration}}\",\r\n  \"ror\": \"{{ror}}\",\r\n  \"term\": \"{{term}}\",\r\n  \"levelOfProtection\": \"{{levelOfProtection}}\"\r\n}\r\n\r\n\r\n"
								},
								"url": {
									"raw": "{{server}}/monthly/getSavings",
									"host": [
										"{{server}}"
									],
									"path": [
										"monthly",
										"getSavings"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 16:06:07 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"7b2b1d65-5634-43e9-b692-cb1d6ffe899c-7070\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"initalSavings\": 0,\n    \"duration\": 32,\n    \"ror\": 5.5,\n    \"levelOfProtection\": 100,\n    \"year\": [\n        2020,\n        2021,\n        2022,\n        2023,\n        2024\n    ],\n    \"expenses\": [\n        7287.59,\n        8482.65,\n        10705.28,\n        12281.49,\n        14482.58\n    ],\n    \"balances\": [\n        -3438.98,\n        -8073.02,\n        -14929.69,\n        -23362.57,\n        -33996.54\n    ],\n    \"yearlySavings\": [\n        3848.61,\n        3848.61,\n        3848.61,\n        3848.61,\n        3848.61\n    ],\n    \"totalSavings\": [\n        19243,\n        19243,\n        19243,\n        19243,\n        19243\n    ],\n    \"term\": [\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\"\n    ],\n    \"monthlySavings\": [\n        312.71,\n        312.71,\n        312.71,\n        312.71,\n        312.71\n    ],\n    \"totalMonthsToSave\": [\n        55,\n        55,\n        55,\n        55,\n        55\n    ]\n}"
						}
					]
				},
				{
					"name": "FamilyTotalExp_ABND_Spouse_getSaving",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var response = JSON.parse(responseBody);\r",
									"console.log(\"Spouse Retirement Annual Expenses of ABND:\", response.expenses);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA=="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"expenses\": {{expenses9}},\r\n  \r\n  \"initalSavings\": \"{{initalSavings}}\",\r\n  \"duration\": \"{{duration}}\",\r\n  \"ror\": \"{{ror}}\",\r\n  \"term\": \"{{term}}\",\r\n  \"levelOfProtection\": \"{{levelOfProtection}}\"\r\n}\r\n\r\n"
						},
						"url": {
							"raw": "{{server}}/monthly/getSavings",
							"host": [
								"{{server}}"
							],
							"path": [
								"monthly",
								"getSavings"
							]
						},
						"description": "Calculating annual expenses from retirement to till life expectancy from the Family total expensesR3 spouse of totalABND. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "FamilyTotalExp_ABND_Spouse_getSaving",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"expenses\": {{expenses9}},\r\n  \r\n  \"initalSavings\": \"{{initalSavings}}\",\r\n  \"duration\": \"{{duration}}\",\r\n  \"ror\": \"{{ror}}\",\r\n  \"term\": \"{{term}}\",\r\n  \"levelOfProtection\": \"{{levelOfProtection}}\"\r\n}\r\n\r\n"
								},
								"url": {
									"raw": "{{server}}/monthly/getSavings",
									"host": [
										"{{server}}"
									],
									"path": [
										"monthly",
										"getSavings"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 16:06:17 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"2a9ced38-493c-46c9-a872-1a188bcc3f80-3092\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"initalSavings\": 0,\n    \"duration\": 32,\n    \"ror\": 5.5,\n    \"levelOfProtection\": 100,\n    \"year\": [\n        2020,\n        2021,\n        2022,\n        2023,\n        2024\n    ],\n    \"expenses\": [\n        7087.59,\n        8267.05,\n        10473.11,\n        12031.56,\n        14213.66\n    ],\n    \"balances\": [\n        -3323.32,\n        -7826.1,\n        -14534.94,\n        -22802.23,\n        -33251.62\n    ],\n    \"yearlySavings\": [\n        3764.27,\n        3764.27,\n        3764.27,\n        3764.27,\n        3764.27\n    ],\n    \"totalSavings\": [\n        18821,\n        18821,\n        18821,\n        18821,\n        18821\n    ],\n    \"term\": [\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\"\n    ],\n    \"monthlySavings\": [\n        305.86,\n        305.86,\n        305.86,\n        305.86,\n        305.86\n    ],\n    \"totalMonthsToSave\": [\n        55,\n        55,\n        55,\n        55,\n        55\n    ]\n}"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "LongTermCareR4_ExpensesPV_Primary",
			"item": [
				{
					"name": "LTC_FutureAdultDayHealthCare_Primary_expPresentValue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var response = JSON.parse(responseBody);",
									"console.log(\"Primary Retirement Year:\", response.fromYear);",
									"",
									"console.log(\"Primary Life Expectancy year:\", response.toYear);",
									"",
									"console.log(\"Present Value year:\", response.pvList[0].year);",
									"",
									"console.log(\"TotalExpense of Adult Day Care for Primary (Future Dollar):\", response.pvList[0].totalExpense);",
									"",
									"console.log(\"Present Value of Adult Day Care for Primary:\", response.pvList[0].presentValue);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "FinancialPlannerP@ssw0rd",
									"type": "string"
								},
								{
									"key": "username",
									"value": "FinancialPlannerServiceUser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"fromYear\": {{fromYear1}},\n  \"toYear\": {{toYear1}},\n  \"expenses\":{{expenses00}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
						},
						"url": {
							"raw": "{{server}}/expensesPresentValue",
							"host": [
								"{{server}}"
							],
							"path": [
								"expensesPresentValue"
							]
						},
						"description": "Calculating FutureAdultDayHealthCare present Value for the year 2020 from LongTermCare R4-Primary. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "LTC_FutureAdultDayHealthCare_Primary_expPresentValue",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"fromYear\": {{fromYear1}},\n  \"toYear\": {{toYear1}},\n  \"expenses\":{{expenses0}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
								},
								"url": {
									"raw": "{{server}}/expensesPresentValue",
									"host": [
										"{{server}}"
									],
									"path": [
										"expensesPresentValue"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 16:06:35 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"466a13d2-e5f0-4b44-b0af-bfc8082b3c5a-5450\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"fromYear\": 2029,\n    \"toYear\": 2030,\n    \"expenses\": [\n        {\n            \"year\": 2029,\n            \"expense\": 13801.89\n        },\n        {\n            \"year\": 2030,\n            \"expense\": 14215.945\n        }\n    ],\n    \"presentValueYears\": {\n        \"pvAsOnYear1\": 2020,\n        \"pvAsOnYear2\": 2019,\n        \"pvAsOnYear3\": 2018\n    },\n    \"discount\": 6,\n    \"rateOfReturns\": {\n        \"rateOfReturn1\": 2,\n        \"rateOfReturn2\": 4,\n        \"rateOfReturn3\": 6,\n        \"rateOfReturn4\": 8\n    },\n    \"pvList\": [\n        {\n            \"year\": 2020,\n            \"totalExpense\": 28017.84,\n            \"presentValue\": 16107.43,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 16107.43,\n            \"savingPerMonthForRateOfReturn2\": 16107.43,\n            \"savingPerMonthForRateOfReturn3\": 16107.43,\n            \"savingPerMonthForRateOfReturn4\": 16107.43\n        },\n        {\n            \"year\": 2019,\n            \"totalExpense\": 28017.84,\n            \"presentValue\": 15195.69,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 15195.69,\n            \"savingPerMonthForRateOfReturn2\": 15195.69,\n            \"savingPerMonthForRateOfReturn3\": 15195.69,\n            \"savingPerMonthForRateOfReturn4\": 15195.69\n        },\n        {\n            \"year\": 2018,\n            \"totalExpense\": 28017.84,\n            \"presentValue\": 14335.55,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 14335.55,\n            \"savingPerMonthForRateOfReturn2\": 14335.55,\n            \"savingPerMonthForRateOfReturn3\": 14335.55,\n            \"savingPerMonthForRateOfReturn4\": 14335.55\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "LTC_FutureHomeCare_Primary_expPresentValue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var response = JSON.parse(responseBody);",
									"console.log(\"Primary Retirement Year:\", response.fromYear);",
									"",
									"console.log(\"Primary Life Expectancy year:\", response.toYear);",
									"",
									"console.log(\"Present Value year:\", response.pvList[0].year);",
									"",
									"console.log(\"TotalExpense of Home Care for Primary (Future Dollar):\", response.pvList[0].totalExpense);",
									"",
									"console.log(\"Present Value of Home Day Care for Primary:\", response.pvList[0].presentValue);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "FinancialPlannerP@ssw0rd",
									"type": "string"
								},
								{
									"key": "username",
									"value": "FinancialPlannerServiceUser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"fromYear\": {{fromYear2}},\n  \"toYear\": {{toYear2}},\n  \"expenses\":{{expenses11}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
						},
						"url": {
							"raw": "{{server}}/expensesPresentValue",
							"host": [
								"{{server}}"
							],
							"path": [
								"expensesPresentValue"
							]
						},
						"description": "Calculating FutureHomeCare present Value for the year 2020 from LongTermCare R4-Primary. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "LTC_FutureHomeCare_Primary_expPresentValue",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"fromYear\": {{fromYear2}},\n  \"toYear\": {{toYear2}},\n  \"expenses\":{{expenses1}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
								},
								"url": {
									"raw": "{{server}}/expensesPresentValue",
									"host": [
										"{{server}}"
									],
									"path": [
										"expensesPresentValue"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 16:06:41 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"671170d6-0154-4d88-b62c-f4ac434ff7d3-2556\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"fromYear\": 2031,\n    \"toYear\": 2032,\n    \"expenses\": [\n        {\n            \"year\": 2031,\n            \"expense\": 39879.78\n        },\n        {\n            \"year\": 2032,\n            \"expense\": 41076.17\n        }\n    ],\n    \"presentValueYears\": {\n        \"pvAsOnYear1\": 2020,\n        \"pvAsOnYear2\": 2019,\n        \"pvAsOnYear3\": 2018\n    },\n    \"discount\": 6,\n    \"rateOfReturns\": {\n        \"rateOfReturn1\": 2,\n        \"rateOfReturn2\": 4,\n        \"rateOfReturn3\": 6,\n        \"rateOfReturn4\": 8\n    },\n    \"pvList\": [\n        {\n            \"year\": 2020,\n            \"totalExpense\": 80955.95,\n            \"presentValue\": 41421.77,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 41421.77,\n            \"savingPerMonthForRateOfReturn2\": 41421.77,\n            \"savingPerMonthForRateOfReturn3\": 41421.77,\n            \"savingPerMonthForRateOfReturn4\": 41421.77\n        },\n        {\n            \"year\": 2019,\n            \"totalExpense\": 80955.95,\n            \"presentValue\": 39077.14,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 39077.14,\n            \"savingPerMonthForRateOfReturn2\": 39077.14,\n            \"savingPerMonthForRateOfReturn3\": 39077.14,\n            \"savingPerMonthForRateOfReturn4\": 39077.14\n        },\n        {\n            \"year\": 2018,\n            \"totalExpense\": 80955.95,\n            \"presentValue\": 36865.23,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 36865.23,\n            \"savingPerMonthForRateOfReturn2\": 36865.23,\n            \"savingPerMonthForRateOfReturn3\": 36865.23,\n            \"savingPerMonthForRateOfReturn4\": 36865.23\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "LTC_FutureAssistedCare_Primary_expPresentValue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var response = JSON.parse(responseBody);",
									"console.log(\"Primary Retirement Year:\", response.fromYear);",
									"",
									"console.log(\"Primary Life Expectancy year:\", response.toYear);",
									"",
									"console.log(\"Present Value year:\", response.pvList[0].year);",
									"",
									"console.log(\"TotalExpense of Assisted Care for Primary (Future Dollar):\", response.pvList[0].totalExpense);",
									"",
									"console.log(\"Present Value of Assisted Day Care for Primary:\", response.pvList[0].presentValue);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "FinancialPlannerP@ssw0rd",
									"type": "string"
								},
								{
									"key": "username",
									"value": "FinancialPlannerServiceUser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"fromYear\": {{fromYear3}},\n  \"toYear\": {{toYear3}},\n  \"expenses\":{{expenses22}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
						},
						"url": {
							"raw": "{{server}}/expensesPresentValue",
							"host": [
								"{{server}}"
							],
							"path": [
								"expensesPresentValue"
							]
						},
						"description": "Calculating FutureAssistedCare present Value for the year 2020 from LongTermCare R4 -Primary. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "LTC_FutureAssistedCare_Primary_expPresentValue",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"fromYear\": {{fromYear3}},\n  \"toYear\": {{toYear3}},\n  \"expenses\":{{expenses2}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
								},
								"url": {
									"raw": "{{server}}/expensesPresentValue",
									"host": [
										"{{server}}"
									],
									"path": [
										"expensesPresentValue"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 16:34:34 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"b40e0637-239e-454c-aa03-ad4dae9a41ab-3283\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"fromYear\": 2033,\n    \"toYear\": 2033,\n    \"expenses\": [\n        {\n            \"year\": 2033,\n            \"expense\": 36302.155\n        }\n    ],\n    \"presentValueYears\": {\n        \"pvAsOnYear1\": 2020,\n        \"pvAsOnYear2\": 2019,\n        \"pvAsOnYear3\": 2018\n    },\n    \"discount\": 6,\n    \"rateOfReturns\": {\n        \"rateOfReturn1\": 2,\n        \"rateOfReturn2\": 4,\n        \"rateOfReturn3\": 6,\n        \"rateOfReturn4\": 8\n    },\n    \"pvList\": [\n        {\n            \"year\": 2020,\n            \"totalExpense\": 36302.16,\n            \"presentValue\": 17019.87,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 17019.87,\n            \"savingPerMonthForRateOfReturn2\": 17019.87,\n            \"savingPerMonthForRateOfReturn3\": 17019.87,\n            \"savingPerMonthForRateOfReturn4\": 17019.87\n        },\n        {\n            \"year\": 2019,\n            \"totalExpense\": 36302.16,\n            \"presentValue\": 16056.48,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 16056.48,\n            \"savingPerMonthForRateOfReturn2\": 16056.48,\n            \"savingPerMonthForRateOfReturn3\": 16056.48,\n            \"savingPerMonthForRateOfReturn4\": 16056.48\n        },\n        {\n            \"year\": 2018,\n            \"totalExpense\": 36302.16,\n            \"presentValue\": 15147.62,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 15147.62,\n            \"savingPerMonthForRateOfReturn2\": 15147.62,\n            \"savingPerMonthForRateOfReturn3\": 15147.62,\n            \"savingPerMonthForRateOfReturn4\": 15147.62\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "LTC_FutureNursingCare_Primary_expPresentValue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var response = JSON.parse(responseBody);",
									"console.log(\"Primary Retirement Year:\", response.fromYear);",
									"",
									"console.log(\"Primary Life Expectancy year:\", response.toYear);",
									"",
									"console.log(\"Present Value year:\", response.pvList[0].year);",
									"",
									"console.log(\"TotalExpense of Nursing Care for Primary (Future Dollar):\", response.pvList[0].totalExpense);",
									"",
									"console.log(\"Present Value of Nursing Day Care for Primary:\", response.pvList[0].presentValue);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "FinancialPlannerP@ssw0rd",
									"type": "string"
								},
								{
									"key": "username",
									"value": "FinancialPlannerServiceUser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"fromYear\": {{fromYear4}},\n  \"toYear\": {{toYear4}},\n  \"expenses\":{{expenses33}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
						},
						"url": {
							"raw": "{{server}}/expensesPresentValue",
							"host": [
								"{{server}}"
							],
							"path": [
								"expensesPresentValue"
							]
						},
						"description": "Calculating FutureNursingCare present Value for the year 2020 from LongTermCare R4-Primary. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "LTC_FutureNursingCare_Primary_expPresentValue",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"fromYear\": {{fromYear4}},\n  \"toYear\": {{toYear4}},\n  \"expenses\":{{expenses3}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
								},
								"url": {
									"raw": "{{server}}/expensesPresentValue",
									"host": [
										"{{server}}"
									],
									"path": [
										"expensesPresentValue"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "LongTermCareR4_ExpensesPV_Spouse",
			"item": [
				{
					"name": "LTC_FutureAdultDayHealthCare_Spouse_expPresentValue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var response = JSON.parse(responseBody);",
									"console.log(\"Spouse Retirement Year:\", response.fromYear);",
									"",
									"console.log(\"Spouse Life Expectancy year:\", response.toYear);",
									"",
									"console.log(\"Present Value year:\", response.pvList[0].year);",
									"",
									"console.log(\"TotalExpense of Adult Day Care for Spouse (Future Dollar):\", response.pvList[0].totalExpense);",
									"",
									"console.log(\"Present Value of Adult Day Care for Spouse:\", response.pvList[0].presentValue);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "FinancialPlannerP@ssw0rd",
									"type": "string"
								},
								{
									"key": "username",
									"value": "FinancialPlannerServiceUser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"fromYear\": {{fromYear1}},\n  \"toYear\": {{toYear1}},\n  \"expenses\":{{expenses00}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
						},
						"url": {
							"raw": "{{server}}/expensesPresentValue",
							"host": [
								"{{server}}"
							],
							"path": [
								"expensesPresentValue"
							]
						},
						"description": "Calculating FutureAdultDayHealthCare present Value for the year 2020 from LongTermCare R4-Spouse. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "LTC_FutureAdultDayHealthCare_Spouse_expPresentValue",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"fromYear\": {{fromYear1}},\n  \"toYear\": {{toYear1}},\n  \"expenses\":{{expenses0}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
								},
								"url": {
									"raw": "{{server}}/expensesPresentValue",
									"host": [
										"{{server}}"
									],
									"path": [
										"expensesPresentValue"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 16:36:26 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"4485560c-2797-41a6-b4b0-f0fe04101d47-3253\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"fromYear\": 2029,\n    \"toYear\": 2030,\n    \"expenses\": [\n        {\n            \"year\": 2029,\n            \"expense\": 13801.89\n        },\n        {\n            \"year\": 2030,\n            \"expense\": 14215.945\n        }\n    ],\n    \"presentValueYears\": {\n        \"pvAsOnYear1\": 2020,\n        \"pvAsOnYear2\": 2019,\n        \"pvAsOnYear3\": 2018\n    },\n    \"discount\": 6,\n    \"rateOfReturns\": {\n        \"rateOfReturn1\": 2,\n        \"rateOfReturn2\": 4,\n        \"rateOfReturn3\": 6,\n        \"rateOfReturn4\": 8\n    },\n    \"pvList\": [\n        {\n            \"year\": 2020,\n            \"totalExpense\": 28017.84,\n            \"presentValue\": 16107.43,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 16107.43,\n            \"savingPerMonthForRateOfReturn2\": 16107.43,\n            \"savingPerMonthForRateOfReturn3\": 16107.43,\n            \"savingPerMonthForRateOfReturn4\": 16107.43\n        },\n        {\n            \"year\": 2019,\n            \"totalExpense\": 28017.84,\n            \"presentValue\": 15195.69,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 15195.69,\n            \"savingPerMonthForRateOfReturn2\": 15195.69,\n            \"savingPerMonthForRateOfReturn3\": 15195.69,\n            \"savingPerMonthForRateOfReturn4\": 15195.69\n        },\n        {\n            \"year\": 2018,\n            \"totalExpense\": 28017.84,\n            \"presentValue\": 14335.55,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 14335.55,\n            \"savingPerMonthForRateOfReturn2\": 14335.55,\n            \"savingPerMonthForRateOfReturn3\": 14335.55,\n            \"savingPerMonthForRateOfReturn4\": 14335.55\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "LTC_FutureHomeCare_Spouse_expPresentValue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var response = JSON.parse(responseBody);",
									"console.log(\"Spouse Retirement Year:\", response.fromYear);",
									"",
									"console.log(\"Spouse Life Expectancy year:\", response.toYear);",
									"",
									"console.log(\"Spouse Value year:\", response.pvList[0].year);",
									"",
									"console.log(\"TotalExpense of Home Care for Spouse (Future Dollar):\", response.pvList[0].totalExpense);",
									"",
									"console.log(\"Present Value of Home Day Care for Spouse:\", response.pvList[0].presentValue);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "FinancialPlannerP@ssw0rd",
									"type": "string"
								},
								{
									"key": "username",
									"value": "FinancialPlannerServiceUser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"fromYear\": {{fromYear2}},\n  \"toYear\": {{toYear2}},\n  \"expenses\":{{expenses11}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
						},
						"url": {
							"raw": "{{server}}/expensesPresentValue",
							"host": [
								"{{server}}"
							],
							"path": [
								"expensesPresentValue"
							]
						},
						"description": "Calculating FutureHomeCare present Value for the year 2020 from LongTermCare R4-Spouse. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "LTC_FutureHomeCare_Spouse_expPresentValue",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"fromYear\": {{fromYear2}},\n  \"toYear\": {{toYear2}},\n  \"expenses\":{{expenses1}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
								},
								"url": {
									"raw": "{{server}}/expensesPresentValue",
									"host": [
										"{{server}}"
									],
									"path": [
										"expensesPresentValue"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 16:36:44 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"4ce6917b-834b-4a44-8141-7b8926c3d34d-7217\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"fromYear\": 2031,\n    \"toYear\": 2032,\n    \"expenses\": [\n        {\n            \"year\": 2031,\n            \"expense\": 39879.78\n        },\n        {\n            \"year\": 2032,\n            \"expense\": 41076.17\n        }\n    ],\n    \"presentValueYears\": {\n        \"pvAsOnYear1\": 2020,\n        \"pvAsOnYear2\": 2019,\n        \"pvAsOnYear3\": 2018\n    },\n    \"discount\": 6,\n    \"rateOfReturns\": {\n        \"rateOfReturn1\": 2,\n        \"rateOfReturn2\": 4,\n        \"rateOfReturn3\": 6,\n        \"rateOfReturn4\": 8\n    },\n    \"pvList\": [\n        {\n            \"year\": 2020,\n            \"totalExpense\": 80955.95,\n            \"presentValue\": 41421.77,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 41421.77,\n            \"savingPerMonthForRateOfReturn2\": 41421.77,\n            \"savingPerMonthForRateOfReturn3\": 41421.77,\n            \"savingPerMonthForRateOfReturn4\": 41421.77\n        },\n        {\n            \"year\": 2019,\n            \"totalExpense\": 80955.95,\n            \"presentValue\": 39077.14,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 39077.14,\n            \"savingPerMonthForRateOfReturn2\": 39077.14,\n            \"savingPerMonthForRateOfReturn3\": 39077.14,\n            \"savingPerMonthForRateOfReturn4\": 39077.14\n        },\n        {\n            \"year\": 2018,\n            \"totalExpense\": 80955.95,\n            \"presentValue\": 36865.23,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 36865.23,\n            \"savingPerMonthForRateOfReturn2\": 36865.23,\n            \"savingPerMonthForRateOfReturn3\": 36865.23,\n            \"savingPerMonthForRateOfReturn4\": 36865.23\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "LTC_futureAssistedCare_Spouse_expPresentValue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var response = JSON.parse(responseBody);",
									"console.log(\"Spouse Retirement Year:\", response.fromYear);",
									"",
									"console.log(\"Spouse Life Expectancy year:\", response.toYear);",
									"",
									"console.log(\"Present Value year:\", response.pvList[0].year);",
									"",
									"console.log(\"TotalExpense of Assisted Care for Spouse (Future Dollar):\", response.pvList[0].totalExpense);",
									"",
									"console.log(\"Present Value of Assisted Day Care for Spouse:\", response.pvList[0].presentValue);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "FinancialPlannerP@ssw0rd",
									"type": "string"
								},
								{
									"key": "username",
									"value": "FinancialPlannerServiceUser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"fromYear\": {{fromYear3}},\n  \"toYear\": {{toYear3}},\n  \"expenses\":{{expenses22}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
						},
						"url": {
							"raw": "{{server}}/expensesPresentValue",
							"host": [
								"{{server}}"
							],
							"path": [
								"expensesPresentValue"
							]
						},
						"description": "Calculating FutureAssistedCare present Value for the year 2020 from LongTermCare R4 -Spouse. They take from the global variables to be set in pre-request script."
					},
					"response": [
						{
							"name": "LTC_futureAssistedCare_Spouse_expPresentValue",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"fromYear\": {{fromYear3}},\n  \"toYear\": {{toYear3}},\n  \"expenses\":{{expenses2}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
								},
								"url": {
									"raw": "{{server}}/expensesPresentValue",
									"host": [
										"{{server}}"
									],
									"path": [
										"expensesPresentValue"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 16:37:03 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"149c2c6e-9cf5-4522-b5b8-428f3c0f8962-6934\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"fromYear\": 2033,\n    \"toYear\": 2033,\n    \"expenses\": [\n        {\n            \"year\": 2033,\n            \"expense\": 36302.155\n        }\n    ],\n    \"presentValueYears\": {\n        \"pvAsOnYear1\": 2020,\n        \"pvAsOnYear2\": 2019,\n        \"pvAsOnYear3\": 2018\n    },\n    \"discount\": 6,\n    \"rateOfReturns\": {\n        \"rateOfReturn1\": 2,\n        \"rateOfReturn2\": 4,\n        \"rateOfReturn3\": 6,\n        \"rateOfReturn4\": 8\n    },\n    \"pvList\": [\n        {\n            \"year\": 2020,\n            \"totalExpense\": 36302.16,\n            \"presentValue\": 17019.87,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 17019.87,\n            \"savingPerMonthForRateOfReturn2\": 17019.87,\n            \"savingPerMonthForRateOfReturn3\": 17019.87,\n            \"savingPerMonthForRateOfReturn4\": 17019.87\n        },\n        {\n            \"year\": 2019,\n            \"totalExpense\": 36302.16,\n            \"presentValue\": 16056.48,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 16056.48,\n            \"savingPerMonthForRateOfReturn2\": 16056.48,\n            \"savingPerMonthForRateOfReturn3\": 16056.48,\n            \"savingPerMonthForRateOfReturn4\": 16056.48\n        },\n        {\n            \"year\": 2018,\n            \"totalExpense\": 36302.16,\n            \"presentValue\": 15147.62,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 15147.62,\n            \"savingPerMonthForRateOfReturn2\": 15147.62,\n            \"savingPerMonthForRateOfReturn3\": 15147.62,\n            \"savingPerMonthForRateOfReturn4\": 15147.62\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "LTC_FutureNursingCare_Spouse_expPresentValue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var response = JSON.parse(responseBody);",
									"console.log(\"Spouse Retirement Year:\", response.fromYear);",
									"",
									"console.log(\"Spouse Life Expectancy year:\", response.toYear);",
									"",
									"console.log(\"Present Value year:\", response.pvList[0].year);",
									"",
									"console.log(\"TotalExpense of Nursing Care for Spouse (Future Dollar):\", response.pvList[0].totalExpense);",
									"",
									"console.log(\"Present Value of Nursing Care for Spouse:\", response.pvList[0].presentValue);",
									"",
									"",
									"",
									"",
									"// Releasing all the global variables:",
									"pm.globals.unset(\"initalSavings\");",
									"pm.globals.unset(\"duration\");",
									"pm.globals.unset(\"ror\");",
									"pm.globals.unset(\"term\");",
									"pm.globals.unset(\"levelOfProtection\");",
									"",
									"pm.globals.unset(\"transactionTypeFlag\");",
									"pm.globals.unset(\"age\");",
									"pm.globals.unset(\"healthProfile\");",
									"pm.globals.unset(\"gender\");",
									"pm.globals.unset(\"state\");",
									"pm.globals.unset(\"zipcode\");",
									"pm.globals.unset(\"lifeExpectancy\");",
									"pm.globals.unset(\"pvAsOfYear\");",
									"pm.globals.unset(\"currentLifeStyleExpenses\");",
									"pm.globals.unset(\"numberOfAdultDayHealthCareLTCYears\");",
									"pm.globals.unset(\"numberOfHomeCareLTCYears\");",
									"pm.globals.unset(\"numberOfAssistedCareLTCYears\");",
									"pm.globals.unset(\"numberOfNursingCareLTCYears\");",
									"",
									"pm.globals.unset(\"fromYear\");",
									"pm.globals.unset(\"toYear\");",
									"pm.globals.unset(\"expenses\");",
									"pm.globals.unset(\"pvAsOnYear1\");",
									"pm.globals.unset(\"pvAsOnYear2\");",
									"pm.globals.unset(\"pvAsOnYear3\");",
									"pm.globals.unset(\"discount\");",
									"pm.globals.unset(\"rateOfReturn1\");",
									"pm.globals.unset(\"rateOfReturn2\");",
									"pm.globals.unset(\"rateOfReturn3\");",
									"pm.globals.unset(\"rateOfReturn4\");",
									"",
									"pm.globals.unset(\"birthDate\");",
									"pm.globals.unset(\"retirementYear\");",
									"pm.globals.unset(\"lifeExpectancy\");",
									"pm.globals.unset(\"planType\");",
									"pm.globals.unset(\"healthGrade\");",
									"pm.globals.unset(\"stateName\");",
									"pm.globals.unset(\"retirementState\");",
									"pm.globals.unset(\"zipcode\");",
									"pm.globals.unset(\"boughtPlanA\");",
									"pm.globals.unset(\"fullYearDataForLifeExpectancyYear\");",
									"pm.globals.unset(\"reserveDaysUsed\");",
									"pm.globals.unset(\"dental\");",
									"pm.globals.unset(\"dentalHealthGrade\");",
									"pm.globals.unset(\"tobacco\");",
									"pm.globals.unset(\"singleVsMultipleMagi\");",
									"pm.globals.unset(\"magiTierVsDollarAmount\");",
									"pm.globals.unset(\"magiTier\");",
									"pm.globals.unset(\"taxFilingStatus\");",
									"pm.globals.unset(\"magiDollarAmount\");",
									"pm.globals.unset(\"yearWiseMagiDetailList\");",
									"",
									"",
									"pm.globals.unset(\"primaryBirthDate\");",
									"pm.globals.unset(\"primaryRetirementYear\");",
									"pm.globals.unset(\"primaryLifeExpectancy\");",
									"pm.globals.unset(\"primarySingleVsMultipleMagi\");",
									"pm.globals.unset(\"primaryMagiTierVsDollarAmount\");",
									"pm.globals.unset(\"primaryMagiTier\");",
									"pm.globals.unset(\"primaryTaxFilingStatus\");",
									"pm.globals.unset(\"primaryMagiDollarAmount\");",
									"pm.globals.unset(\"primaryHealthGrade\");",
									"pm.globals.unset(\"primaryStateName\");",
									"pm.globals.unset(\"primaryRetirementState\");",
									"pm.globals.unset(\"primaryZipcode\");",
									"pm.globals.unset(\"primaryBoughtPlanA\");",
									"pm.globals.unset(\"primaryReserveDaysUsed\");",
									"pm.globals.unset(\"primaryDental\");",
									"pm.globals.unset(\"primaryDentalHealthGrade\");",
									"pm.globals.unset(\"primaryPlanType\");",
									"pm.globals.unset(\"primaryTobacco\");",
									"pm.globals.unset(\"primaryYearWiseMagiDetailList\");",
									"pm.globals.unset(\"spouseIncluded\");",
									"pm.globals.unset(\"spouseBirthDate\");",
									"pm.globals.unset(\"spouseRetirementYear\");",
									"pm.globals.unset(\"spouseLifeExpectancy\");",
									"pm.globals.unset(\"spouseSingleVsMultipleMagi\");",
									"pm.globals.unset(\"spouseMagiTierVsDollarAmount\");",
									"pm.globals.unset(\"spouseMagiTier\");",
									"pm.globals.unset(\"spouseTaxFilingStatus\");",
									"pm.globals.unset(\"spouseMagiDollarAmount\");",
									"pm.globals.unset(\"spouseHealthGrade\");",
									"pm.globals.unset(\"spouseStateName\");",
									"pm.globals.unset(\"spouseRetirementState\");",
									"pm.globals.unset(\"spouseZipcode\");",
									"pm.globals.unset(\"spouseBoughtPlanA\");",
									"pm.globals.unset(\"spouseReserveDaysUsed\");",
									"pm.globals.unset(\"spouseDental\");",
									"pm.globals.unset(\"spouseDentalHealthGrade\");",
									"pm.globals.unset(\"spousePlanType\");",
									"pm.globals.unset(\"spouseTobacco\");",
									"pm.globals.unset(\"spouseYearWiseMagiDetailList\");",
									"pm.globals.unset(\"pvAsOnYear1\");",
									"pm.globals.unset(\"pvAsOnYear2\");",
									"pm.globals.unset(\"pvAsOnYear3\");",
									"pm.globals.unset(\"rateOfReturn1\");",
									"pm.globals.unset(\"rateOfReturn2\");",
									"pm.globals.unset(\"rateOfReturn3\");",
									"pm.globals.unset(\"rateOfReturn4\");",
									"",
									"pm.globals.unset(\"expenses0\");",
									"pm.globals.unset(\"expenses1\");",
									"pm.globals.unset(\"expenses2\");",
									"pm.globals.unset(\"expenses3\");",
									"pm.globals.unset(\"expenses4\");",
									"pm.globals.unset(\"expenses5\");",
									"pm.globals.unset(\"expenses6\");",
									"pm.globals.unset(\"expenses7\");",
									"pm.globals.unset(\"expenses8\");",
									"pm.globals.unset(\"expenses9\");",
									"pm.globals.unset(\"expenses10\");",
									"pm.globals.unset(\"expenses00\");",
									"pm.globals.unset(\"expenses11\");",
									"pm.globals.unset(\"expenses22\");",
									"pm.globals.unset(\"expenses33\");",
									"",
									"pm.globals.unset(\"fromYear\");",
									"pm.globals.unset(\"toYear\");",
									"pm.globals.unset(\"fromYear1\");",
									"pm.globals.unset(\"toYear1\");",
									"pm.globals.unset(\"fromYear2\");",
									"pm.globals.unset(\"toYear2\");",
									"pm.globals.unset(\"fromYear3\");",
									"pm.globals.unset(\"toYear3\");",
									"pm.globals.unset(\"fromYear4\");",
									"pm.globals.unset(\"toYear4\");",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "FinancialPlannerP@ssw0rd",
									"type": "string"
								},
								{
									"key": "username",
									"value": "FinancialPlannerServiceUser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"fromYear\": {{fromYear4}},\n  \"toYear\": {{toYear4}},\n  \"expenses\":{{expenses33}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
						},
						"url": {
							"raw": "{{server}}/expensesPresentValue",
							"host": [
								"{{server}}"
							],
							"path": [
								"expensesPresentValue"
							]
						},
						"description": "Calculating FutureNursingCare present Value for the year 2020 from LongTermCare R4-Spouse. They take from the global variables to be set in pre-request script. And releasing all the global variables."
					},
					"response": [
						{
							"name": "LTC_FutureNursingCare_Spouse_expPresentValue",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic RmluYW5jaWFsUGxhbm5lclNlcnZpY2VVc2VyOkZpbmFuY2lhbFBsYW5uZXJQQHNzdzByZA==",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"fromYear\": {{fromYear4}},\n  \"toYear\": {{toYear4}},\n  \"expenses\":{{expenses3}},\n  \"presentValueYears\": {\n    \"pvAsOnYear1\": {{pvAsOnYear1}},\n    \"pvAsOnYear2\": {{pvAsOnYear2}},\n    \"pvAsOnYear3\": {{pvAsOnYear3}}\n  },\n  \"discount\": {{discount}},\n  \"rateOfReturns\": {\n    \"rateOfReturn1\": {{rateOfReturn1}},\n    \"rateOfReturn2\": {{rateOfReturn2}},\n    \"rateOfReturn3\": {{rateOfReturn3}},\n    \"rateOfReturn4\": {{rateOfReturn4}}\n  }\n}"
								},
								"url": {
									"raw": "{{server}}/expensesPresentValue",
									"host": [
										"{{server}}"
									],
									"path": [
										"expensesPresentValue"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Apache-Coyote/1.1"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,DELETE"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"
								},
								{
									"key": "Access-Control-Max-Age",
									"value": "10"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 15 May 2020 16:37:21 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"webServiceTransactionId\": \"da3f54c1-a546-4e3c-8613-b33e0755e89c-2965\",\n    \"webServiceStatus\": \"SUCCESS\",\n    \"fromYear\": 2034,\n    \"toYear\": 2034,\n    \"expenses\": [\n        {\n            \"year\": 2034,\n            \"expense\": 73925.555\n        }\n    ],\n    \"presentValueYears\": {\n        \"pvAsOnYear1\": 2020,\n        \"pvAsOnYear2\": 2019,\n        \"pvAsOnYear3\": 2018\n    },\n    \"discount\": 6,\n    \"rateOfReturns\": {\n        \"rateOfReturn1\": 2,\n        \"rateOfReturn2\": 4,\n        \"rateOfReturn3\": 6,\n        \"rateOfReturn4\": 8\n    },\n    \"pvList\": [\n        {\n            \"year\": 2020,\n            \"totalExpense\": 73925.55,\n            \"presentValue\": 32697.34,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 32697.34,\n            \"savingPerMonthForRateOfReturn2\": 32697.34,\n            \"savingPerMonthForRateOfReturn3\": 32697.34,\n            \"savingPerMonthForRateOfReturn4\": 32697.34\n        },\n        {\n            \"year\": 2019,\n            \"totalExpense\": 73925.55,\n            \"presentValue\": 30846.55,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 30846.55,\n            \"savingPerMonthForRateOfReturn2\": 30846.55,\n            \"savingPerMonthForRateOfReturn3\": 30846.55,\n            \"savingPerMonthForRateOfReturn4\": 30846.55\n        },\n        {\n            \"year\": 2018,\n            \"totalExpense\": 73925.55,\n            \"presentValue\": 29100.52,\n            \"numberOfSavingMonths\": 0,\n            \"savingPerMonthForRateOfReturn1\": 29100.52,\n            \"savingPerMonthForRateOfReturn2\": 29100.52,\n            \"savingPerMonthForRateOfReturn3\": 29100.52,\n            \"savingPerMonthForRateOfReturn4\": 29100.52\n        }\n    ]\n}"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "134e4097-446f-4785-b425-4551c00a7a2f",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "4f488dde-5509-4a33-bfd9-821f9e1f43c9",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "76f0ff7e-3a27-4d0a-952c-510281b4de55",
			"key": "server",
			"value": "https://publicplan.aivante.net/aivante/Financialplannersystemgroupsandbox/api/v1/",
			"type": "string",
			"disabled": true
		}
	]
}